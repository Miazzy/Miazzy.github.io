{"version":3,"file":"assessRule-a636627d.js","sources":["../../src/views/baseset/operation/assessrule/assessRule.ts","../../src/views/baseset/operation/assessrule/assessRule.vue"],"sourcesContent":["import { defHttp } from '/@/utils/http/axios';\nimport { BasicColumn } from '/@/components/Table';\n\nenum Api {\n  getTreeTypeUrl = '/baseset/assessrule/type/getTree',\n  getTypeUrl = '/baseset/assessrule/type/get',\n  createTypeUrl = '/baseset/assessrule/type/create',\n  updateTypeUrl = '/baseset/assessrule/type/update',\n  deleteTypeUrl = '/baseset/assessrule/type/delete',\n\n  listIdexUrl = '/baseset/assessrule/index/list',\n  getIndexUrl = '/baseset/assessrule/index/get',\n  createIndexUrl = '/baseset/assessrule/index/create',\n  updateIndexUrl = '/baseset/assessrule/index/update',\n  updateStatusIndexUrl = '/baseset/assessrule/index/updateStatus',\n  updateBatchSortIndexUrl = '/baseset/assessrule/index/updateBatchSort',\n  deleteIndexUrl = '/baseset/assessrule/index/delete',\n  exportExcelIndexUrl = '/baseset/assessrule/index/exportExcel',\n}\n\nexport function getIndexListColumns(): BasicColumn[] {\n  return [\n    {\n      title: '细则类型',\n      dataIndex: 'fullName',\n      headAlign: 'center',\n      align: 'left',\n      width: 200,\n      sorter: true,\n      resizable: true,\n    },\n    {\n      title: '指标名称',\n      dataIndex: 'name',\n      headAlign: 'center',\n      align: 'left',\n      width: 220,\n      sorter: true,\n      resizable: true,\n    },\n    {\n      title: '状态',\n      dataIndex: 'status',\n      width: 80,\n      sorter: true,\n      resizable: true,\n    },\n    {\n      title: '排序',\n      dataIndex: 'sort',\n      width: 100,\n      sorter: true,\n      resizable: true,\n    },\n    {\n      title: '备注',\n      dataIndex: 'remark',\n      headAlign: 'center',\n      align: 'left',\n      width: 300,\n      resizable: true,\n    },\n  ];\n}\n\n// 组织树数据\nexport const getTreeData = (params) =>\n  defHttp.get(\n    {\n      url: Api.getTreeTypeUrl,\n      params,\n    },\n    {},\n  );\n\n// 获取细则类型\nexport const getType = (params) =>\n  defHttp.get(\n    {\n      url: Api.getTypeUrl,\n      params,\n    },\n    {},\n  );\n\n// 新增细则类型\nexport const insertType = (params) =>\n  defHttp.post(\n    {\n      url: Api.createTypeUrl,\n      params,\n    },\n    {},\n  );\n\n// 修改细则类型\nexport const updateType = (params) =>\n  defHttp.put(\n    {\n      url: Api.updateTypeUrl,\n      params,\n    },\n    {},\n  );\n\nexport const saveType = (params) => {\n  if (!params.id) {\n    return insertType(params);\n  }\n  return updateType(params);\n};\n\n// 删除细则类型\nexport const deleteType = (params) =>\n  defHttp.delete(\n    {\n      url: Api.deleteTypeUrl,\n      params,\n    },\n    {},\n  );\n\n// 获取细则指标列表\nexport const getIndexList = (params) =>\n  defHttp.get(\n    {\n      url: Api.listIdexUrl,\n      params,\n    },\n    {},\n  );\n\n// 获取细则指标\nexport const getIndex = (params) =>\n  defHttp.get(\n    {\n      url: Api.getIndexUrl,\n      params,\n    },\n    {},\n  );\n\n// 新增细则指标\nexport const insertIndex = (params) =>\n  defHttp.post(\n    {\n      url: Api.createIndexUrl,\n      params,\n    },\n    {},\n  );\n\n// 修改细则指标\nexport const updateIndex = (params) =>\n  defHttp.put(\n    {\n      url: Api.updateIndexUrl,\n      params,\n    },\n    {},\n  );\n\nexport const saveIndex = (params) => {\n  if (!params.id) {\n    return insertIndex(params);\n  }\n  return updateIndex(params);\n};\n\n// 启用、禁用细则指标\nexport const updateStatusIndex = (params) =>\n  defHttp.put(\n    {\n      url: Api.updateStatusIndexUrl,\n      params,\n    },\n    {},\n  );\n\n// 保存细则指标排序\nexport const updateBatchSortIndex = (params) =>\n  defHttp.put(\n    {\n      url: Api.updateBatchSortIndexUrl,\n      params,\n    },\n    {},\n  );\n\n// 删除细则指标\nexport const deleteIndex = (params) =>\n  defHttp.delete(\n    {\n      url: Api.deleteIndexUrl,\n      params,\n    },\n    {},\n  );\n\n// 导出细则指标\nexport const exportExcelIndex = (params) =>\n  defHttp.download(\n    {\n      url: Api.exportExcelIndexUrl,\n      params,\n    },\n    {},\n  );\n","<template>\n  <PageWrapper dense contentFullHeight fixedHeight contentClass=\"flex\" style=\"position: relative\">\n    <!-- 细则类型树 -->\n    <CommonTree\n      ref=\"treeRef\"\n      title=\"细则类型\"\n      @select=\"handleSelect\"\n      :value=\"treeData\"\n      class=\"left-tree-layout\"\n      :isShowOperationBtns=\"true\"\n      :fieldNames=\"{ key: 'id', title: 'name' }\"\n      @add=\"handleTreeAdd\"\n      @edit=\"handleTreeEdit\"\n      @delete=\"handleTreeDelete\"\n      @refresh=\"handleTreeRefresh\"\n    />\n    <!-- 数据表格 -->\n    <div class=\"right-table-layout\">\n      <BasicTable\n        @register=\"registerTable\"\n        class=\"fix-basic-table\"\n        :searchInfo=\"searchInfo\"\n        @resize-column=\"handleResizeColumn\"\n        @row-db-click=\"(record) => handleView(record)\"\n        @selection-change=\"handleSelectionChange\"\n      >\n        <template #toolbar>\n          <a-button type=\"primary\" :preIcon=\"IconEnum.ADD\" @click=\"handleCreateIndex\">{{\n            t('common.action.create')\n          }}</a-button>\n          <a-button\n            :disabled=\"disabledBtn\"\n            type=\"primary\"\n            :preIcon=\"IconEnum.EDIT\"\n            @click=\"handleUpdateIndex\"\n            >{{ t('common.action.edit') }}</a-button\n          >\n          <a-button\n            :disabled=\"disabledBtn\"\n            class=\"red-btn\"\n            :preIcon=\"IconEnum.DELETE\"\n            @click=\"handleDeleteIndex\"\n            >{{ t('common.delText') }}</a-button\n          >\n          <a-button\n            :disabled=\"disabledBtn\"\n            class=\"green-btn\"\n            :preIcon=\"IconEnum.ENABLE\"\n            @click=\"handleEnableIndex\"\n            >{{ '启用' }}</a-button\n          >\n          <a-button\n            :disabled=\"disabledBtn\"\n            class=\"grey-btn\"\n            :preIcon=\"IconEnum.DISABLE\"\n            @click=\"handleDisableIndex\"\n            >{{ '禁用' }}</a-button\n          >\n          <a-button type=\"primary\" @click=\"handleUpdateSortIndex\">{{ '保存排序' }}</a-button>\n          <a-button class=\"yellow-btn\" :preIcon=\"IconEnum.EXPORT\" @click=\"handleExportIndex\">{{\n            t('common.action.export')\n          }}</a-button>\n        </template>\n        <template #bodyCell=\"{ column, text, record }\">\n          <template v-if=\"column.dataIndex === 'status'\">\n            <span style=\"color: #19be6b\" v-if=\"text == 1\">启用</span>\n            <span style=\"color: red\" v-if=\"text == 0\">禁用</span>\n          </template>\n          <template v-if=\"column.dataIndex === 'sort'\">\n            <a-input-number\n              v-model:value=\"record[column.dataIndex]\"\n              class=\"input-center\"\n              :min=\"1\"\n              :max=\"10000\"\n              :step=\"1\"\n              :precision=\"0\"\n              status=\"error\"\n            />\n          </template>\n        </template>\n      </BasicTable>\n    </div>\n\n    <!-- 细则类型弹窗 -->\n    <Dialog\n      v-model:visible=\"modal.open.type\"\n      :title=\"modal.title.type\"\n      @ok=\"handleSuccess\"\n      @cancel=\"cancel\"\n      :width=\"460\"\n      :height=\"260\"\n      smode=\"normal\"\n      overflowY=\"auto\"\n    >\n      <a-form ref=\"modalFormRef\" :model=\"formState\" name=\"userForm\" autocomplete=\"off\">\n        <a-row>\n          <a-col v-show=\"true\" :span=\"24\">\n            <a-form-item label=\"所属类型\" name=\"parentName\" :labelCol=\"{ class: 'detail-label' }\">\n              <a-input v-model:value=\"formState.parentName\" :disabled=\"true\" />\n            </a-form-item>\n          </a-col>\n        </a-row>\n        <a-row>\n          <a-col v-show=\"true\" :span=\"24\">\n            <a-form-item\n              label=\"细则类型\"\n              name=\"name\"\n              :labelCol=\"{ class: 'detail-label' }\"\n              :rules=\"[{ required: true, max: 30 }]\"\n            >\n              <a-input v-model:value=\"formState.name\" :maxlength=\"30\" :disabled=\"disabledType\" />\n            </a-form-item>\n          </a-col>\n        </a-row>\n      </a-form>\n    </Dialog>\n\n    <!-- 细则指标弹窗 -->\n    <Dialog\n      v-model:visible=\"modal.open.index\"\n      :title=\"modal.title.index\"\n      :show-btm=\"!disabledInput\"\n      @ok=\"handleIndexSuccess\"\n      @cancel=\"cancel\"\n      :width=\"460\"\n      :height=\"360\"\n      smode=\"normal\"\n      overflowY=\"auto\"\n    >\n      <a-form\n        ref=\"modalIndexFormRef\"\n        :model=\"formIndexState\"\n        name=\"userIndexForm\"\n        autocomplete=\"off\"\n      >\n        <a-row>\n          <a-col v-show=\"true\" :span=\"24\">\n            <a-form-item\n              label=\"细则类型\"\n              name=\"fullName\"\n              :labelCol=\"{ class: 'detail-label' }\"\n              :rules=\"[{ required: false }]\"\n            >\n              <a-input v-model:value=\"formIndexState.fullName\" :disabled=\"true\" />\n            </a-form-item>\n          </a-col>\n        </a-row>\n        <a-row>\n          <a-col v-show=\"true\" :span=\"24\">\n            <a-form-item\n              label=\"指标名称\"\n              name=\"name\"\n              :labelCol=\"{ class: 'detail-label' }\"\n              :rules=\"[{ required: true, max: 40 }]\"\n            >\n              <a-input\n                v-model:value=\"formIndexState.name\"\n                :maxlength=\"40\"\n                :disabled=\"disabledInput\"\n              />\n            </a-form-item>\n          </a-col>\n        </a-row>\n        <a-row>\n          <a-col v-show=\"true\" :span=\"24\">\n            <a-form-item\n              label=\"备注\"\n              name=\"remark\"\n              :labelCol=\"{ class: 'detail-label' }\"\n              :rules=\"[{ required: false, max: 100 }]\"\n            >\n              <a-textarea\n                v-model:value=\"formIndexState.remark\"\n                :maxlength=\"100\"\n                :auto-size=\"{ minRows: 2, maxRows: 5 }\"\n                :disabled=\"disabledInput\"\n              />\n            </a-form-item>\n          </a-col>\n        </a-row>\n      </a-form>\n    </Dialog>\n\n    <!-- 新增弹窗 -->\n    <div v-if=\"loadingFlag\" class=\"dialog-mask\"></div>\n  </PageWrapper>\n</template>\n<script lang=\"ts\" setup>\n  import { onMounted, reactive, ref, UnwrapRef } from 'vue';\n  import { IconEnum } from '@/enums/appEnum';\n  import type { FormProps } from '/@/components/Form/src/types/form';\n  import { useI18n } from '@/hooks/web/useI18n';\n  import { useMessage } from '@/hooks/web/useMessage';\n  import { BasicTable, useTable, SorterResult } from '/@/components/Table';\n  import { TreeItem } from '/@/components/Tree';\n  import { PageWrapper } from '/@/components/Page';\n  import CommonTree from '@/components/Framework/Tree/CommonTree.vue';\n  import Dialog from '@/components/Framework/Modal/Dialog.vue';\n  import { FormInstance } from 'ant-design-vue';\n  import { SysMessage } from '/@/hooks/web/useMessage';\n  import { jsonToSheetXlsx } from '/@/components/Excel';\n  import {\n    getTreeData,\n    getType,\n    saveType,\n    deleteType,\n    getIndexListColumns,\n    getIndex,\n    getIndexList,\n    saveIndex,\n    updateStatusIndex,\n    updateBatchSortIndex,\n    deleteIndex,\n  } from './assessRule';\n  import { assign } from 'lodash-es';\n  import { trim } from 'xe-utils';\n  import { isString } from '@/utils/is';\n\n  const { t } = useI18n();\n  const { createConfirm } = useMessage();\n  const treeRef = ref();\n  // 查询信息\n  const searchInfo = reactive<any>({});\n  // 左侧树数据\n  const treeData = ref<TreeItem[]>([]);\n  const disabledInput = ref<boolean>(false);\n  const disabledBtn = ref<boolean>(true);\n\n  const modal = reactive({\n    open: {\n      type: ref<boolean>(false),\n      index: ref<boolean>(false),\n    },\n    title: {\n      type: ref<string>(''),\n      index: ref<string>(''),\n    },\n  });\n  const loadingFlag = ref<boolean>(false);\n  const disabledType = ref<boolean>(false);\n  const checkedKeys = ref<Array<string | number>>([]);\n  const indexColumn = getIndexListColumns();\n  const formState: UnwrapRef<any> = reactive({});\n  const formIndexState: UnwrapRef<any> = reactive({ status: 1, sort: 1 });\n  const modalFormRef = ref<FormInstance>();\n  const modalIndexFormRef = ref<FormInstance>();\n  const indexList = ref<Array<any>>([]);\n  const getIndexListByParam = async () => {\n    const list = await getIndexList(searchInfo);\n    indexList.value = list.result;\n    return indexList.value;\n  };\n\n  const searchForm: FormProps = {\n    baseColProps: { span: 8 },\n    labelWidth: 120,\n    autoAdvancedLine: 1,\n    schemas: [\n      {\n        label: '指标名称',\n        field: 'name',\n        component: 'Input',\n      },\n      {\n        label: '状态',\n        field: 'status',\n        component: 'DictSelectBox',\n        componentProps: {\n          type: 'enable_or_disable',\n        },\n      },\n    ],\n  };\n\n  const [registerTable, { getSelectRows, clearSelectedRowKeys, reload }] = useTable({\n    title: '细则指标',\n    api: getIndexListByParam,\n    columns: indexColumn,\n    useSearchForm: true,\n    formConfig: searchForm,\n    showTableSetting: true,\n    pagination: false,\n    bordered: true,\n    rowKey: 'id',\n    rowSelection: {\n      type: 'radio',\n    },\n    handleSearchInfoFn(info) {\n      searchInfo.name = info.name;\n      searchInfo.status = info.status;\n      return info;\n    },\n    sortFn: (sortInfo: SorterResult) => {\n      const sortOrder = sortInfo.order?.replace('end', '');\n      searchInfo.sortOrder = sortOrder;\n      searchInfo.sortField = sortOrder ? sortInfo.field : undefined;\n    },\n    afterFetch: (data) => {\n      data.sort((a, b) => {\n        const a1 = a[searchInfo.sortField];\n        const b1 = b[searchInfo.sortField];\n        const isDesc = searchInfo.sortOrder === 'desc';\n        if (isString(a1) && isString(b1)) {\n          if (isDesc) {\n            return b1.localeCompare(a1);\n          }\n          return a1.localeCompare(b1);\n        }\n        if (isDesc) {\n          return b1 - a1;\n        }\n        return a1 - b1;\n      });\n    },\n  });\n\n  function handleResizeColumn(w, col) {\n    col.width = w;\n  }\n\n  // 查询左侧树数据\n  async function queryTreeList() {\n    const typeList = await getTreeData({});\n    treeData.value = typeList.result as unknown[] as TreeItem[];\n  }\n\n  function isSelectNode(node) {\n    if (!node) {\n      SysMessage.getInstance().error('请选择细则类型节点');\n      return false;\n    }\n    return true;\n  }\n\n  // 新增树节点的的回调\n  function handleTreeAdd(node) {\n    resetFields();\n    if (!isSelectNode(node)) {\n      return;\n    }\n    formState.id = '';\n    formState.type = '';\n    formState.parentId = 'root';\n    formState.fullId = '';\n    formState.parentName = '';\n    formState.parentFullName = '';\n    if (node) {\n      formState.parentId = node.id;\n      formState.type = node.type;\n      formState.parentName = node.name;\n      formState.fullId = node.fullId;\n      formState.parentFullName = node.fullName;\n      if (node.fullId && node.fullId.split('/').length > 4) {\n        SysMessage.getInstance().error(`最多允许${t('common.action.create')}4个层级`);\n        return;\n      }\n    }\n    const operateText = getOperateText(formState);\n    if (!isEditTree(node, operateText)) {\n      return;\n    }\n    modal.open.type = true;\n    modal.title.type = operateText + '细则类型';\n  }\n  // 编辑树节点的的回调\n  function handleTreeEdit(node) {\n    resetFields();\n    if (!isSelectNode(node)) {\n      return;\n    }\n    const operateText = getOperateText({ id: node.id });\n    if (node.parentId === 'root') {\n      SysMessage.getInstance().error(`父节点，不能${operateText}`);\n      return;\n    }\n    if (node.children.length > 0) {\n      SysMessage.getInstance().error(`该细则类型存在子节点，不能${operateText}`);\n      return;\n    }\n    if (!isEditTree(node, operateText)) {\n      return;\n    }\n    getType({ id: node.id }).then((data) => {\n      assign(formState, data.result);\n    });\n    modal.open.type = true;\n    modal.title.type = operateText + '细则类型';\n  }\n  function isEditTree(node, operateText) {\n    if (!node) {\n      return true;\n    }\n    if (node.children.length == 0 && node.fullId && indexList.value && indexList.value.length > 0) {\n      SysMessage.getInstance().error('该细则类型存在细则指标，不能' + operateText);\n      return false;\n    }\n    return true;\n  }\n  // 删除树节点的回调\n  function handleTreeDelete(node) {\n    if (!isSelectNode(node)) {\n      return;\n    }\n    if (node.parentId === 'root') {\n      SysMessage.getInstance().error('父节点，不能删除');\n      return;\n    }\n    if (node.children.length > 0) {\n      SysMessage.getInstance().error('该细则类型存在子节点，不能删除');\n      return false;\n    }\n    deleteConfirm(function () {\n      deleteType('?id=' + node.id).then(() => {\n        SysMessage.getInstance().success(t('common.delSuccessText'));\n        handleTreeRefresh();\n      });\n    });\n  }\n  // 刷新树的回调\n  function handleTreeRefresh() {\n    queryTreeList();\n  }\n\n  // 数据创建成功回调函数\n  function handleSuccess() {\n    const value = modalFormRef.value;\n    if (value) {\n      value.validateFields().then(() => {\n        loadingFlag.value = true;\n        formState.fullName = getFullName();\n        const operateText = getOperateText(formState);\n        saveType(formState)\n          .then(() => {\n            SysMessage.getInstance().success(operateText + '成功');\n            resetForm();\n            handleTreeRefresh();\n            modal.open.type = false;\n            loadingFlag.value = false;\n          })\n          .catch(() => {\n            loadingFlag.value = false;\n          });\n      });\n    }\n  }\n\n  function getOperateText(params) {\n    return !params.id ? t('common.action.create') : t('common.action.edit');\n  }\n\n  function handleIndexSuccess() {\n    const value = modalIndexFormRef.value;\n    if (value) {\n      value.validateFields().then(() => {\n        loadingFlag.value = true;\n        const operateText = getOperateText(formIndexState);\n        formIndexState.name = trim(formIndexState.name);\n        saveIndex(formIndexState)\n          .then(() => {\n            SysMessage.getInstance().success(operateText + '成功');\n            resetForm();\n            reload();\n            modal.open.index = false;\n            loadingFlag.value = false;\n          })\n          .catch(() => {\n            loadingFlag.value = false;\n          });\n      });\n    }\n  }\n\n  function getFullName() {\n    const parentFullName = formState.parentFullName;\n    if (parentFullName) {\n      return parentFullName + '-' + trim(formState.name);\n    }\n    return trim(formState.name);\n  }\n\n  function cancel() {\n    disabledInput.value = false;\n    modal.open.index = false;\n    modal.open.type = false;\n    resetForm();\n  }\n\n  const resetFields = () => {\n    for (let key in formState) {\n      formState[key] = '';\n    }\n  };\n\n  const resetIndexFields = () => {\n    for (let key in formIndexState) {\n      formIndexState[key] = '';\n    }\n  };\n\n  // 重置表单\n  function resetForm() {\n    modalFormRef.value?.resetFields();\n    modalIndexFormRef.value?.resetFields();\n  }\n\n  // 左侧树状菜单选中事件\n  function handleSelect(node) {\n    searchInfo.typeFullId = null;\n    if (node) {\n      searchInfo.typeFullId = node.fullId;\n    }\n    reload();\n  }\n\n  // 添加细则指标\n  function handleCreateIndex() {\n    resetIndexFields();\n    disabledInput.value = false;\n    const node = treeRef.value.getSelectedTreeNode();\n    if (!node) {\n      SysMessage.getInstance().error('请选择细则类型');\n      return;\n    }\n    if (node.children.length > 0) {\n      SysMessage.getInstance().error('请选择细则类型的末级节点');\n      return;\n    }\n    formIndexState.id = '';\n    formIndexState.status = 1;\n    formIndexState.typeId = node.id;\n    formIndexState.fullName = node.fullName;\n    modal.open.index = true;\n    modal.title.index = `${t('common.action.create')}细则指标`;\n  }\n\n  function checkSelectData() {\n    const rows = getSelectRows();\n    if (rows.length == 0 || checkedKeys.value.length > 1) {\n      SysMessage.getInstance().error('请选择一行数据');\n      return false;\n    }\n    return rows[0].id;\n  }\n\n  // 修改细则指标\n  function handleUpdateIndex() {\n    resetIndexFields();\n    disabledInput.value = false;\n    const id = checkSelectData();\n    if (!id) {\n      return;\n    }\n    getIndex({ id: id }).then((data) => {\n      assign(formIndexState, data.result);\n    });\n    modal.open.index = true;\n    modal.title.index = '修改细则指标';\n  }\n\n  function handleView(record: any) {\n    assign(formIndexState, record);\n    disabledInput.value = true;\n    modal.open.index = true;\n    modal.title.index = '查看细则指标';\n  }\n\n  // 删除细则指标\n  function handleDeleteIndex() {\n    const id = checkSelectData();\n    if (!id) {\n      return;\n    }\n    deleteConfirm(function () {\n      deleteIndex('?id=' + id).then(() => {\n        SysMessage.getInstance().success(t('common.delSuccessText'));\n        clearSelectedRowKeys();\n        reload();\n      });\n    });\n  }\n\n  function deleteConfirm(callback: Function) {\n    createConfirm({\n      title: t('common.message.confirmTitle'),\n      iconType: 'warning',\n      content: t('common.message.delMessage'),\n      async onOk() {\n        callback();\n      },\n    });\n  }\n\n  // 导出细则指标\n  function handleExportIndex() {\n    createConfirm({\n      title: t('common.message.confirmTitle'),\n      iconType: 'warning',\n      content: t('common.message.exportMessage'),\n      async onOk() {\n        const header = ref({ index: '序号' });\n        const indexColumns = getIndexListColumns();\n        const data = ref<Array<any>>([]);\n        const keys = ref<Array<any>>([]);\n        indexColumns.forEach((column: any) => {\n          header.value[column.dataIndex] = column.title;\n          keys.value.push(column.dataIndex);\n        });\n        indexList.value.forEach(function (item, index) {\n          let statusDisplayName = '';\n          if (item.status == 1) {\n            statusDisplayName = '启用';\n          } else if (item.status == 0) {\n            statusDisplayName = '禁用';\n          }\n          const exportItem = ref({ index: index + 1 });\n          keys.value.forEach((key) => {\n            exportItem.value[key] = key === 'status' ? statusDisplayName : item[key];\n          });\n          data.value.push(exportItem.value);\n        });\n        jsonToSheetXlsx({\n          data: data.value,\n          header: header.value,\n          filename: '细则指标.xlsx',\n        });\n      },\n    });\n  }\n\n  // 启用细则指标\n  function handleEnableIndex() {\n    const id = checkSelectData();\n    if (!id) {\n      return;\n    }\n    const params = '?id=' + id + '&status=1';\n    updateStatusIndex(params).then(() => {\n      SysMessage.getInstance().success('已启用');\n      reload();\n    });\n  }\n\n  // 禁用细则指标\n  function handleDisableIndex() {\n    const id = checkSelectData();\n    if (!id) {\n      return;\n    }\n    const params = '?id=' + id + '&status=0';\n    updateStatusIndex(params).then(() => {\n      SysMessage.getInstance().success('已禁用');\n      reload();\n    });\n  }\n\n  // 保存细则指标排序\n  function handleUpdateSortIndex() {\n    const params = ref<Array<any>>([]);\n    indexList.value.forEach((item) => {\n      if (!item.sort) {\n        SysMessage.getInstance().error('排序不能为空');\n        throw Error('排序不能为空');\n      }\n      params.value.push({ id: item.id, sort: item.sort });\n    });\n    updateBatchSortIndex(params.value).then(() => {\n      SysMessage.getInstance().success('保存排序成功');\n      reload();\n    });\n  }\n\n  function handleSelectionChange({ rows }) {\n    disabledBtn.value = rows.length === 0;\n  }\n\n  // 启动执行代码\n  onMounted(() => {\n    queryTreeList();\n  });\n</script>\n<style lang=\"less\" scoped>\n  @import '/@/design/biz/bizList.less';\n</style>\n"],"names":["getIndexListColumns","getTreeData","params","defHttp","getType","insertType","updateType","saveType","deleteType","getIndexList","getIndex","insertIndex","updateIndex","saveIndex","updateStatusIndex","updateBatchSortIndex","deleteIndex","t","useI18n","createConfirm","useMessage","treeRef","ref","searchInfo","reactive","treeData","disabledInput","disabledBtn","modal","loadingFlag","disabledType","checkedKeys","indexColumn","formState","formIndexState","modalFormRef","modalIndexFormRef","indexList","getIndexListByParam","__async","list","searchForm","registerTable","getSelectRows","clearSelectedRowKeys","reload","useTable","info","sortInfo","sortOrder","_a","data","a","b","a1","b1","isDesc","isString","handleResizeColumn","w","col","queryTreeList","typeList","isSelectNode","node","SysMessage","handleTreeAdd","resetFields","operateText","getOperateText","isEditTree","handleTreeEdit","assign","handleTreeDelete","deleteConfirm","handleTreeRefresh","handleSuccess","value","getFullName","resetForm","handleIndexSuccess","trim","parentFullName","cancel","key","resetIndexFields","_b","handleSelect","handleCreateIndex","checkSelectData","rows","handleUpdateIndex","id","handleView","record","handleDeleteIndex","callback","handleExportIndex","header","indexColumns","keys","column","item","index","statusDisplayName","exportItem","jsonToSheetXlsx","handleEnableIndex","handleDisableIndex","handleUpdateSortIndex","handleSelectionChange","onMounted"],"mappings":"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"}