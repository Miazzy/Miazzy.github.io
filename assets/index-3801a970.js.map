{"version":3,"file":"index-3801a970.js","sources":["../../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_baseDifference.js","../../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/difference.js","../../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/isString.js","../../src/utils/bem.ts","../../src/utils/props.ts","../../src/components/Tree/src/types/tree.ts","../../src/components/Tree/src/components/TreeHeader.vue","../../src/components/Tree/src/TreeIcon.ts","../../src/components/Tree/src/hooks/useTree.ts","../../src/components/ContextMenu/src/ContextMenu.vue","../../src/components/ContextMenu/src/createContextMenu.ts","../../src/hooks/web/useContextMenu.ts","../../src/components/Tree/src/BasicTree.vue"],"sourcesContent":["import SetCache from './_SetCache.js';\nimport arrayIncludes from './_arrayIncludes.js';\nimport arrayIncludesWith from './_arrayIncludesWith.js';\nimport arrayMap from './_arrayMap.js';\nimport baseUnary from './_baseUnary.js';\nimport cacheHas from './_cacheHas.js';\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/**\n * The base implementation of methods like `_.difference` without support\n * for excluding multiple arrays or iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Array} values The values to exclude.\n * @param {Function} [iteratee] The iteratee invoked per element.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new array of filtered values.\n */\nfunction baseDifference(array, values, iteratee, comparator) {\n  var index = -1,\n      includes = arrayIncludes,\n      isCommon = true,\n      length = array.length,\n      result = [],\n      valuesLength = values.length;\n\n  if (!length) {\n    return result;\n  }\n  if (iteratee) {\n    values = arrayMap(values, baseUnary(iteratee));\n  }\n  if (comparator) {\n    includes = arrayIncludesWith;\n    isCommon = false;\n  }\n  else if (values.length >= LARGE_ARRAY_SIZE) {\n    includes = cacheHas;\n    isCommon = false;\n    values = new SetCache(values);\n  }\n  outer:\n  while (++index < length) {\n    var value = array[index],\n        computed = iteratee == null ? value : iteratee(value);\n\n    value = (comparator || value !== 0) ? value : 0;\n    if (isCommon && computed === computed) {\n      var valuesIndex = valuesLength;\n      while (valuesIndex--) {\n        if (values[valuesIndex] === computed) {\n          continue outer;\n        }\n      }\n      result.push(value);\n    }\n    else if (!includes(values, computed, comparator)) {\n      result.push(value);\n    }\n  }\n  return result;\n}\n\nexport default baseDifference;\n","import baseDifference from './_baseDifference.js';\nimport baseFlatten from './_baseFlatten.js';\nimport baseRest from './_baseRest.js';\nimport isArrayLikeObject from './isArrayLikeObject.js';\n\n/**\n * Creates an array of `array` values not included in the other given arrays\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons. The order and references of result values are\n * determined by the first array.\n *\n * **Note:** Unlike `_.pullAll`, this method returns a new array.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {...Array} [values] The values to exclude.\n * @returns {Array} Returns the new array of filtered values.\n * @see _.without, _.xor\n * @example\n *\n * _.difference([2, 1], [2, 3]);\n * // => [1]\n */\nvar difference = baseRest(function(array, values) {\n  return isArrayLikeObject(array)\n    ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true))\n    : [];\n});\n\nexport default difference;\n","import baseGetTag from './_baseGetTag.js';\nimport isArray from './isArray.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar stringTag = '[object String]';\n\n/**\n * Checks if `value` is classified as a `String` primitive or object.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a string, else `false`.\n * @example\n *\n * _.isString('abc');\n * // => true\n *\n * _.isString(1);\n * // => false\n */\nfunction isString(value) {\n  return typeof value == 'string' ||\n    (!isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag);\n}\n\nexport default isString;\n","import { prefixCls } from '/@/settings/designSetting';\n\ntype Mod = string | { [key: string]: any };\ntype Mods = Mod | Mod[];\n\nexport type BEM = ReturnType<typeof createBEM>;\n\nfunction genBem(name: string, mods?: Mods): string {\n  if (!mods) {\n    return '';\n  }\n\n  if (typeof mods === 'string') {\n    return ` ${name}--${mods}`;\n  }\n\n  if (Array.isArray(mods)) {\n    return mods.reduce<string>((ret, item) => ret + genBem(name, item), '');\n  }\n\n  return Object.keys(mods).reduce((ret, key) => ret + (mods[key] ? genBem(name, key) : ''), '');\n}\n\n/**\n * bem helper\n * b() // 'button'\n * b('text') // 'button__text'\n * b({ disabled }) // 'button button--disabled'\n * b('text', { disabled }) // 'button__text button__text--disabled'\n * b(['disabled', 'primary']) // 'button button--disabled button--primary'\n */\nexport function buildBEM(name: string) {\n  return (el?: Mods, mods?: Mods): Mods => {\n    if (el && typeof el !== 'string') {\n      mods = el;\n      el = '';\n    }\n\n    el = el ? `${name}__${el}` : name;\n\n    return `${el}${genBem(el, mods)}`;\n  };\n}\n\nexport function createBEM(name: string) {\n  return [buildBEM(`${prefixCls}-${name}`)];\n}\n\nexport function createNamespace(name: string) {\n  const prefixedName = `${prefixCls}-${name}`;\n  return [prefixedName, buildBEM(prefixedName)] as const;\n}\n","// copy from element-plus\n\nimport { warn } from 'vue';\nimport { fromPairs, isObject } from 'lodash-es';\nimport type { ExtractPropTypes, PropType } from 'vue';\nimport type { Mutable } from './types';\n\nconst wrapperKey = Symbol();\nexport type PropWrapper<T> = { [wrapperKey]: T };\n\nexport const propKey = Symbol();\n\ntype ResolveProp<T> = ExtractPropTypes<{\n  key: { type: T; required: true };\n}>['key'];\ntype ResolvePropType<T> = ResolveProp<T> extends { type: infer V } ? V : ResolveProp<T>;\ntype ResolvePropTypeWithReadonly<T> = Readonly<T> extends Readonly<Array<infer A>>\n  ? ResolvePropType<A[]>\n  : ResolvePropType<T>;\n\ntype IfUnknown<T, V> = [unknown] extends [T] ? V : T;\n\nexport type BuildPropOption<T, D extends BuildPropType<T, V, C>, R, V, C> = {\n  type?: T;\n  values?: readonly V[];\n  required?: R;\n  default?: R extends true\n    ? never\n    : D extends Record<string, unknown> | Array<any>\n    ? () => D\n    : (() => D) | D;\n  validator?: ((val: any) => val is C) | ((val: any) => boolean);\n};\n\ntype _BuildPropType<T, V, C> =\n  | (T extends PropWrapper<unknown>\n      ? T[typeof wrapperKey]\n      : [V] extends [never]\n      ? ResolvePropTypeWithReadonly<T>\n      : never)\n  | V\n  | C;\nexport type BuildPropType<T, V, C> = _BuildPropType<\n  IfUnknown<T, never>,\n  IfUnknown<V, never>,\n  IfUnknown<C, never>\n>;\n\ntype _BuildPropDefault<T, D> = [T] extends [\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  Record<string, unknown> | Array<any> | Function,\n]\n  ? D\n  : D extends () => T\n  ? ReturnType<D>\n  : D;\n\nexport type BuildPropDefault<T, D, R> = R extends true\n  ? { readonly default?: undefined }\n  : {\n      readonly default: Exclude<D, undefined> extends never\n        ? undefined\n        : Exclude<_BuildPropDefault<T, D>, undefined>;\n    };\nexport type BuildPropReturn<T, D, R, V, C> = {\n  readonly type: PropType<BuildPropType<T, V, C>>;\n  readonly required: IfUnknown<R, false>;\n  readonly validator: ((val: unknown) => boolean) | undefined;\n  [propKey]: true;\n} & BuildPropDefault<BuildPropType<T, V, C>, IfUnknown<D, never>, IfUnknown<R, false>>;\n\n/**\n * @description Build prop. It can better optimize prop types\n * @description 生成 prop，能更好地优化类型\n * @example\n  // limited options\n  // the type will be PropType<'light' | 'dark'>\n  buildProp({\n    type: String,\n    values: ['light', 'dark'],\n  } as const)\n  * @example\n  // limited options and other types\n  // the type will be PropType<'small' | 'medium' | number>\n  buildProp({\n    type: [String, Number],\n    values: ['small', 'medium'],\n    validator: (val: unknown): val is number => typeof val === 'number',\n  } as const)\n  @link see more: https://github.com/element-plus/element-plus/pull/3341\n */\nexport function buildProp<\n  T = never,\n  D extends BuildPropType<T, V, C> = never,\n  R extends boolean = false,\n  V = never,\n  C = never,\n>(option: BuildPropOption<T, D, R, V, C>, key?: string): BuildPropReturn<T, D, R, V, C> {\n  // filter native prop type and nested prop, e.g `null`, `undefined` (from `buildProps`)\n  if (!isObject(option) || !!option[propKey]) return option as any;\n\n  const { values, required, default: defaultValue, type, validator } = option;\n\n  const _validator =\n    values || validator\n      ? (val: unknown) => {\n          let valid = false;\n          let allowedValues: unknown[] = [];\n\n          if (values) {\n            allowedValues = [...values, defaultValue];\n            valid ||= allowedValues.includes(val);\n          }\n          if (validator) valid ||= validator(val);\n\n          if (!valid && allowedValues.length > 0) {\n            const allowValuesText = [...new Set(allowedValues)]\n              .map((value) => JSON.stringify(value))\n              .join(', ');\n            warn(\n              `Invalid prop: validation failed${\n                key ? ` for prop \"${key}\"` : ''\n              }. Expected one of [${allowValuesText}], got value ${JSON.stringify(val)}.`,\n            );\n          }\n          return valid;\n        }\n      : undefined;\n\n  return {\n    type:\n      typeof type === 'object' && Object.getOwnPropertySymbols(type).includes(wrapperKey)\n        ? type[wrapperKey]\n        : type,\n    required: !!required,\n    default: defaultValue,\n    validator: _validator,\n    [propKey]: true,\n  } as unknown as BuildPropReturn<T, D, R, V, C>;\n}\n\ntype NativePropType = [((...args: any) => any) | { new (...args: any): any } | undefined | null];\n\nexport const buildProps = <\n  O extends {\n    [K in keyof O]: O[K] extends BuildPropReturn<any, any, any, any, any>\n      ? O[K]\n      : [O[K]] extends NativePropType\n      ? O[K]\n      : O[K] extends BuildPropOption<infer T, infer D, infer R, infer V, infer C>\n      ? D extends BuildPropType<T, V, C>\n        ? BuildPropOption<T, D, R, V, C>\n        : never\n      : never;\n  },\n>(\n  props: O,\n) =>\n  fromPairs(\n    Object.entries(props).map(([key, option]) => [key, buildProp(option as any, key)]),\n  ) as unknown as {\n    [K in keyof O]: O[K] extends { [propKey]: boolean }\n      ? O[K]\n      : [O[K]] extends NativePropType\n      ? O[K]\n      : O[K] extends BuildPropOption<\n          infer T,\n          // eslint-disable-next-line @typescript-eslint/no-unused-vars\n          infer _D,\n          infer R,\n          infer V,\n          infer C\n        >\n      ? BuildPropReturn<T, O[K]['default'], R, V, C>\n      : never;\n  };\n\nexport const definePropType = <T>(val: any) => ({ [wrapperKey]: val } as PropWrapper<T>);\n\nexport const keyOf = <T>(arr: T) => Object.keys(arr) as Array<keyof T>;\nexport const mutable = <T extends readonly any[] | Record<string, unknown>>(val: T) =>\n  val as Mutable<typeof val>;\n\nexport const componentSize = ['large', 'medium', 'small', 'mini'] as const;\n\n// 添加缺失字段\nexport const addMissingColumns = (item: any, columns) => {\n  columns.forEach((column: any) => {\n    if (!Reflect.has(item, column.dataIndex)) {\n      item[column.dataIndex] = null;\n    }\n  });\n};\n","import type { ExtractPropTypes } from 'vue';\nimport type { TreeDataItem } from 'ant-design-vue/es/tree/Tree';\n\nimport { buildProps } from '/@/utils/props';\n\nexport enum ToolbarEnum {\n  SELECT_ALL,\n  UN_SELECT_ALL,\n  EXPAND_ALL,\n  UN_EXPAND_ALL,\n  CHECK_STRICTLY,\n  CHECK_UN_STRICTLY,\n  EDIT,\n  ADD,\n  DELETE,\n  REFRESH,\n}\n\nexport const treeEmits = [\n  'update:expandedKeys',\n  'update:selectedKeys',\n  'update:value',\n  'change',\n  'check',\n  'update:searchValue',\n];\n\nexport interface TreeState {\n  expandedKeys: KeyType[];\n  selectedKeys: KeyType[];\n  checkedKeys: CheckKeys;\n  checkStrictly: boolean;\n}\n\nexport interface FieldNames {\n  children?: string;\n  title?: string;\n  key?: string;\n}\n\nexport type KeyType = string | number;\n\nexport type CheckKeys =\n  | KeyType[]\n  | { checked: string[] | number[]; halfChecked: string[] | number[] };\n\nexport const treeProps = buildProps({\n  value: {\n    type: [Object, Array] as PropType<KeyType[] | CheckKeys>,\n  },\n\n  renderIcon: {\n    type: Function as PropType<(params: Recordable) => string>,\n  },\n\n  helpMessage: {\n    type: [String, Array] as PropType<string | string[]>,\n    default: '',\n  },\n\n  title: {\n    type: String,\n    default: '',\n  },\n  toolbar: Boolean,\n  search: Boolean,\n  searchValue: {\n    type: String,\n    default: '',\n  },\n  checkStrictly: Boolean,\n  clickRowToExpand: {\n    type: Boolean,\n    default: false,\n  },\n  checkable: Boolean,\n  simple: Boolean,\n  defaultExpandLevel: {\n    type: [String, Number] as PropType<string | number>,\n    default: '',\n  },\n  defaultExpandAll: Boolean,\n\n  fieldNames: {\n    type: Object as PropType<FieldNames>,\n  },\n\n  treeData: {\n    type: Array as PropType<TreeDataItem[]>,\n  },\n\n  actionList: {\n    type: Array as PropType<TreeActionItem[]>,\n    default: () => [],\n  },\n\n  expandedKeys: {\n    type: Array as PropType<KeyType[]>,\n    default: () => [],\n  },\n\n  selectedKeys: {\n    type: Array as PropType<KeyType[]>,\n    default: () => [],\n  },\n\n  checkedKeys: {\n    type: [Array, Object] as PropType<CheckKeys>,\n    default: () => [],\n  },\n\n  beforeRightClick: {\n    type: Function as PropType<(...arg: any) => Promise<ContextMenuItem[] | ContextMenuOptions>>,\n    default: undefined,\n  },\n\n  rightMenuList: {\n    type: Array as PropType<ContextMenuItem[]>,\n  },\n  // 自定义数据过滤判断方法(注: 不是整个过滤方法，而是内置过滤的判断方法，用于增强原本仅能通过title进行过滤的方式)\n  filterFn: {\n    type: Function as PropType<\n      (searchValue: any, node: TreeItem, fieldNames: FieldNames) => boolean\n    >,\n    default: undefined,\n  },\n  // 高亮搜索值，仅高亮具体匹配值（通过title）值为true时使用默认色值，值为#xxx时使用此值替代且高亮开启\n  highlight: {\n    type: [Boolean, String] as PropType<Boolean | String>,\n    default: false,\n  },\n  // 搜索完成时自动展开结果\n  expandOnSearch: Boolean,\n  // 搜索完成自动选中所有结果,当且仅当 checkable===true 时生效\n  checkOnSearch: Boolean,\n  // 搜索完成自动select所有结果\n  selectedOnSearch: Boolean,\n  loading: {\n    type: Boolean,\n    default: false,\n  },\n  treeWrapperClassName: String,\n  isShowOperationBtns: Boolean,\n  canEdit: Boolean,\n  canAdd: Boolean,\n  canDelete: Boolean\n});\n\nexport type TreeProps = ExtractPropTypes<typeof treeProps>;\n\nexport interface ContextMenuItem {\n  label: string;\n  icon?: string;\n  hidden?: boolean;\n  disabled?: boolean;\n  handler?: Fn;\n  divider?: boolean;\n  children?: ContextMenuItem[];\n}\n\nexport interface ContextMenuOptions {\n  icon?: string;\n  styles?: any;\n  items?: ContextMenuItem[];\n}\n\nexport interface TreeItem extends TreeDataItem {\n  icon?: any;\n}\n\nexport interface TreeActionItem {\n  render: (record: Recordable) => any;\n  show?: boolean | ((record: Recordable) => boolean);\n}\n\nexport interface InsertNodeParams {\n  parentKey: string | null;\n  node: TreeDataItem;\n  list?: TreeDataItem[];\n  push?: 'push' | 'unshift';\n}\n\nexport interface TreeActionType {\n  checkAll: (checkAll: boolean) => void;\n  expandAll: (expandAll: boolean) => void;\n  setExpandedKeys: (keys: KeyType[]) => void;\n  getExpandedKeys: () => KeyType[];\n  setSelectedKeys: (keys: KeyType[]) => void;\n  getSelectedKeys: () => KeyType[];\n  setCheckedKeys: (keys: CheckKeys) => void;\n  getCheckedKeys: () => CheckKeys;\n  filterByLevel: (level: number) => void;\n  insertNodeByKey: (opt: InsertNodeParams) => void;\n  insertNodesByKey: (opt: InsertNodeParams) => void;\n  deleteNodeByKey: (key: string) => void;\n  updateNodeByKey: (key: string, node: Omit<TreeDataItem, 'key'>) => void;\n  setSearchValue: (value: string) => void;\n  getSearchValue: () => string;\n  handleBadge: () => void;\n  getSelectedNode: (\n    key: KeyType,\n    treeList?: TreeItem[],\n    selectNode?: TreeItem | null,\n  ) => TreeItem | null;\n}\n","<template>\n  <div :class=\"bem()\" class=\"fit-tree-header\" ref=\"treeHeaderRef\">\n    <div class=\"flex items-center bg-[#F5F5F5]\" style=\"padding: 12px 8px\">\n      <slot name=\"headerTitle\" v-if=\"slots.headerTitle\"></slot>\n      <BasicTitle :helpMessage=\"helpMessage\" v-if=\"!slots.headerTitle && title\">\n        {{ title }}\n      </BasicTitle>\n      <div\n        class=\"flex items-center flex-1 cursor-pointer justify-self-stretch justify-end\"\n        v-if=\"search || toolbar\"\n      >\n        <Space v-if=\"toolbar && isShowOperationBtns\" :size=\"0\">\n          <Button v-if=\"canAdd\" size=\"small\" @click=\"handleTreeAdd\" type=\"text\"\n            ><Icon icon=\"ion:add\"\n          /></Button>\n          <Button v-if=\"canEdit\" size=\"small\" @click=\"handleTreeEdit\" type=\"text\"\n            ><Icon icon=\"fluent:edit-16-regular\"\n          /></Button>\n          <Button v-if=\"canDelete\" size=\"small\" @click=\"handleTreeDelete\" type=\"text\"\n            ><Icon icon=\"ant-design:delete-outlined\"\n          /></Button>\n          <Button size=\"small\" @click=\"handleTreeRefresh\" type=\"text\"\n            ><Icon icon=\"ion:refresh\"\n          /></Button>\n        </Space>\n        <Dropdown @click.prevent v-if=\"toolbar\">\n          <Icon icon=\"ion:ellipsis-vertical\" />\n          <template #overlay>\n            <Menu @click=\"handleMenuClick\">\n              <template v-for=\"item in toolbarList\" :key=\"item.value\">\n                <MenuItem v-bind=\"{ key: item.value }\">\n                  {{ item.label }}\n                </MenuItem>\n                <MenuDivider v-if=\"item.divider\" />\n              </template>\n            </Menu>\n          </template>\n        </Dropdown>\n      </div>\n    </div>\n    <div :class=\"getInputSearchCls\" v-if=\"search\">\n      <InputSearch :placeholder=\"t('common.inputKeyWords')\" allowClear v-model:value=\"searchValue\">\n        <template #enterButton>\n          <Button class=\"search-btn\"><Icon icon=\"ant-design:search-outlined\" /></Button>\n        </template>\n      </InputSearch>\n    </div>\n  </div>\n</template>\n<script lang=\"ts\" setup>\n  import { type PropType, computed, ref, watch, useSlots, onMounted, unref, inject } from 'vue';\n  import {\n    Dropdown,\n    Menu,\n    MenuItem,\n    MenuDivider,\n    InputSearch,\n    Button,\n    Space,\n  } from 'ant-design-vue';\n\n  import Icon from '@/components/Icon/Icon.vue';\n  import { BasicTitle } from '/@/components/Basic';\n  import { useI18n } from '/@/hooks/web/useI18n';\n  import { useDebounceFn } from '@vueuse/core';\n  import { createBEM } from '/@/utils/bem';\n  import { ToolbarEnum } from '../types/tree';\n\n  const searchValue = ref('');\n\n  const [bem] = createBEM('tree-header');\n\n  const props = defineProps({\n    helpMessage: {\n      type: [String, Array] as PropType<string | string[]>,\n      default: '',\n    },\n    title: {\n      type: String,\n      default: '',\n    },\n    toolbar: {\n      type: Boolean,\n      default: false,\n    },\n    checkable: {\n      type: Boolean,\n      default: false,\n    },\n    simple: {\n      type: Boolean,\n      default: false,\n    },\n    search: {\n      type: Boolean,\n      default: false,\n    },\n    searchText: {\n      type: String,\n      default: '',\n    },\n    checkAll: {\n      type: Function,\n      default: undefined,\n    },\n    expandAll: {\n      type: Function,\n      default: undefined,\n    },\n    isShowOperationBtns: {\n      type: Boolean,\n      default: false,\n    },\n    canEdit: { type: Boolean, default: true },\n    canAdd: { type: Boolean, default: true },\n    canDelete: { type: Boolean, default: true },\n  } as const);\n  const emit = defineEmits(['strictly-change', 'search']);\n\n  const slots = useSlots();\n  const { t } = useI18n();\n\n  const getInputSearchCls = computed(() => {\n    const titleExists = slots.headerTitle || props.title;\n    return [\n      'mr-1',\n      'w-full',\n      // {\n      //   ['ml-5']: titleExists,\n      // },\n    ];\n  });\n\n  const toolbarList = computed(() => {\n    const { checkable, simple, isShowOperationBtns } = props;\n    const defaultToolbarList = [\n      { label: t('component.tree.expandAll'), value: ToolbarEnum.EXPAND_ALL },\n      {\n        label: t('component.tree.unExpandAll'),\n        value: ToolbarEnum.UN_EXPAND_ALL,\n        divider: checkable,\n      },\n    ];\n\n    const operationBtnList = [];\n    if (!isShowOperationBtns) {\n      if (props.canEdit) {\n        operationBtnList.push({ label: t('component.tree.edit'), value: ToolbarEnum.EDIT });\n      }\n      if (props.canAdd) {\n        operationBtnList.push({ label: t('component.tree.add'), value: ToolbarEnum.ADD });\n      }\n      if (props.canDelete) {\n        operationBtnList.push({ label: t('component.tree.delete'), value: ToolbarEnum.DELETE });\n      }\n      operationBtnList.push({ label: t('component.tree.refresh'), value: ToolbarEnum.REFRESH });\n    }\n\n    // const operationBtnList = isShowOperationBtns?[]:[\n    //   {\n    //     label: t('component.tree.add'),\n    //     value: ToolbarEnum.ADD,\n    //   },\n    //   {\n    //     label: t('component.tree.edit'),\n    //     value: ToolbarEnum.EDIT\n    //   },\n    //   {\n    //     label: t('component.tree.delete'),\n    //     value: ToolbarEnum.DELETE,\n    //   },\n    //   {\n    //     label: t('component.tree.refresh'),\n    //     value: ToolbarEnum.REFRESH,\n    //     divider: isShowOperationBtns,\n    //   }\n    // ];\n    if (simple) {\n      return [...operationBtnList, ...defaultToolbarList];\n    }\n\n    return checkable\n      ? [\n          ...operationBtnList,\n          { label: t('component.tree.selectAll'), value: ToolbarEnum.SELECT_ALL },\n          {\n            label: t('component.tree.unSelectAll'),\n            value: ToolbarEnum.UN_SELECT_ALL,\n            divider: checkable,\n          },\n          ...defaultToolbarList,\n          { label: t('component.tree.checkStrictly'), value: ToolbarEnum.CHECK_STRICTLY },\n          { label: t('component.tree.checkUnStrictly'), value: ToolbarEnum.CHECK_UN_STRICTLY },\n        ]\n      : [...operationBtnList, ...defaultToolbarList];\n  });\n\n  const handleTreeEdit = inject('handleTreeEdit', null);\n  const handleTreeAdd = inject('handleTreeAdd', null);\n  const handleTreeDelete = inject('handleTreeDelete', null);\n  const handleTreeRefresh = inject('handleTreeRefresh', null);\n\n  function handleMenuClick(e: { key: ToolbarEnum }) {\n    const { key } = e;\n    switch (key) {\n      case ToolbarEnum.SELECT_ALL:\n        props.checkAll?.(true);\n        break;\n      case ToolbarEnum.UN_SELECT_ALL:\n        props.checkAll?.(false);\n        break;\n      case ToolbarEnum.EXPAND_ALL:\n        props.expandAll?.(true);\n        break;\n      case ToolbarEnum.UN_EXPAND_ALL:\n        props.expandAll?.(false);\n        break;\n      case ToolbarEnum.CHECK_STRICTLY:\n        emit('strictly-change', false);\n        break;\n      case ToolbarEnum.CHECK_UN_STRICTLY:\n        emit('strictly-change', true);\n        break;\n      case ToolbarEnum.EDIT:\n        handleTreeEdit();\n        break;\n      case ToolbarEnum.ADD:\n        handleTreeAdd();\n        break;\n      case ToolbarEnum.DELETE:\n        handleTreeDelete();\n        break;\n      case ToolbarEnum.REFRESH:\n        handleTreeRefresh();\n    }\n  }\n\n  function emitChange(value?: string): void {\n    emit('search', value);\n  }\n\n  const debounceEmitChange = useDebounceFn(emitChange, 200);\n\n  watch(\n    () => searchValue.value,\n    (v) => {\n      debounceEmitChange(v);\n    },\n  );\n\n  watch(\n    () => props.searchText,\n    (v) => {\n      if (v !== searchValue.value) {\n        searchValue.value = v;\n      }\n    },\n  );\n\n  onMounted(() => {});\n</script>\n<style lang=\"less\" scoped>\n  .fit-tree-header.vben-tree-header {\n    border-bottom: none;\n\n    :deep(.vben-basic-title) {\n      font-size: 14px;\n    }\n\n    :deep(.ant-input-search .ant-input-group .ant-input-affix-wrapper:not(:last-child)) {\n      border-top-left-radius: 0;\n      border-bottom-left-radius: 0;\n    }\n\n    :deep(.ant-input-search > .ant-input-group > .ant-input-group-addon:last-child) {\n      left: 0;\n    }\n\n    :deep(\n        .ant-input-search\n          > .ant-input-group\n          > .ant-input-group-addon:last-child\n          .ant-input-search-button\n      ) {\n      border-right: none;\n      border-left: none;\n      border-top-right-radius: 0;\n      border-bottom-right-radius: 0;\n\n      &:hover {\n        color: #1890ff;\n      }\n    }\n\n    :deep(.ant-input-affix-wrapper) {\n      padding: 5px 14px;\n      border-left: none;\n      border-right: none;\n\n      &::after {\n        content: '';\n        display: block;\n        position: absolute;\n        top: 0;\n        left: 0;\n        width: 1px;\n        height: 31px;\n        transition: all 0.3s;\n        background-color: transparent;\n        box-shadow: none;\n      }\n\n      // &:hover::after, &:focus::after, &.ant-input-affix-wrapper-focused::after {\n      //   display: block;\n      //   background-color: #2a7dc9;\n      // }\n    }\n    :deep(.ant-input-affix-wrapper:focus),\n    :deep(.ant-input-affix-wrapper-focused) {\n      box-shadow: none;\n      border-left: none !important;\n    }\n\n    :deep(.ant-input-affix-wrapper-focused) {\n      box-shadow: none;\n    }\n\n    :deep(.search-btn .anticon > .iconify) {\n      font-size: 18px;\n      color: #bfbfbf;\n    }\n    :deep(.search-btn.ant-input-search-button) {\n      height: 34px;\n      line-height: 34px;\n    }\n    :deep(.ant-btn) {\n      box-shadow: none;\n    }\n  }\n</style>\n","import type { VNode, FunctionalComponent } from 'vue';\nimport { h } from 'vue';\nimport { isString } from 'lodash-es';\nimport Icon from '@/components/Icon/Icon.vue';\n\nexport const TreeIcon: FunctionalComponent = ({ icon }: { icon: VNode | string }) => {\n  if (!icon) return null;\n  if (isString(icon)) {\n    return h(Icon, { icon, class: 'mr-1' });\n  }\n  return Icon;\n};\n","import type { InsertNodeParams, KeyType, FieldNames, TreeItem } from '../types/tree';\nimport type { Ref, ComputedRef } from 'vue';\nimport type { TreeDataItem } from 'ant-design-vue/es/tree/Tree';\n\nimport { cloneDeep } from 'lodash-es';\nimport { unref } from 'vue';\nimport { forEach } from '/@/utils/helper/treeHelper';\n\nexport function useTree(treeDataRef: Ref<TreeDataItem[]>, getFieldNames: ComputedRef<FieldNames>) {\n  function getAllKeys(list?: TreeDataItem[]) {\n    const keys: string[] = [];\n    const treeData = list || unref(treeDataRef);\n    const { key: keyField, children: childrenField } = unref(getFieldNames);\n    if (!childrenField || !keyField) return keys;\n\n    for (let index = 0; index < treeData.length; index++) {\n      const node = treeData[index];\n      keys.push(node[keyField]!);\n      const children = node[childrenField];\n      if (children && children.length) {\n        keys.push(...(getAllKeys(children) as string[]));\n      }\n    }\n    return keys as KeyType[];\n  }\n\n  // get keys that can be checked and selected\n  function getEnabledKeys(list?: TreeDataItem[]) {\n    const keys: string[] = [];\n    const treeData = list || unref(treeDataRef);\n    const { key: keyField, children: childrenField } = unref(getFieldNames);\n    if (!childrenField || !keyField) return keys;\n\n    for (let index = 0; index < treeData.length; index++) {\n      const node = treeData[index];\n      node.disabled !== true && node.selectable !== false && keys.push(node[keyField]!);\n      const children = node[childrenField];\n      if (children && children.length) {\n        keys.push(...(getEnabledKeys(children) as string[]));\n      }\n    }\n    return keys as KeyType[];\n  }\n\n  function getChildrenKeys(nodeKey: string | number, list?: TreeDataItem[]) {\n    const keys: KeyType[] = [];\n    const treeData = list || unref(treeDataRef);\n    const { key: keyField, children: childrenField } = unref(getFieldNames);\n    if (!childrenField || !keyField) return keys;\n    for (let index = 0; index < treeData.length; index++) {\n      const node = treeData[index];\n      const children = node[childrenField];\n      if (nodeKey === node[keyField]) {\n        keys.push(node[keyField]!);\n        if (children && children.length) {\n          keys.push(...(getAllKeys(children) as string[]));\n        }\n      } else {\n        if (children && children.length) {\n          keys.push(...getChildrenKeys(nodeKey, children));\n        }\n      }\n    }\n    return keys as KeyType[];\n  }\n\n  // Update node\n  function updateNodeByKey(key: string, node: TreeDataItem, list?: TreeDataItem[]) {\n    if (!key) return;\n    const treeData = list || unref(treeDataRef);\n    const { key: keyField, children: childrenField } = unref(getFieldNames);\n\n    if (!childrenField || !keyField) return;\n\n    for (let index = 0; index < treeData.length; index++) {\n      const element: any = treeData[index];\n      const children = element[childrenField];\n\n      if (element[keyField] === key) {\n        treeData[index] = { ...treeData[index], ...node };\n        break;\n      } else if (children && children.length) {\n        updateNodeByKey(key, node, element[childrenField]);\n      }\n    }\n  }\n\n  // Expand the specified level\n  function filterByLevel(level = 1, list?: TreeDataItem[], currentLevel = 1) {\n    if (!level) {\n      return [];\n    }\n    const res: (string | number)[] = [];\n    const data = list || unref(treeDataRef) || [];\n    for (let index = 0; index < data.length; index++) {\n      const item = data[index];\n\n      const { key: keyField, children: childrenField } = unref(getFieldNames);\n      const key = keyField ? item[keyField] : '';\n      const children = childrenField ? item[childrenField] : [];\n      res.push(key);\n      if (children && children.length && currentLevel < level) {\n        currentLevel += 1;\n        res.push(...filterByLevel(level, children, currentLevel));\n      }\n    }\n    return res as string[] | number[];\n  }\n\n  /**\n   * 添加节点\n   */\n  function insertNodeByKey({ parentKey = null, node, push = 'push' }: InsertNodeParams) {\n    const treeData: any = cloneDeep(unref(treeDataRef));\n    if (!parentKey) {\n      treeData[push](node);\n      treeDataRef.value = treeData;\n      return;\n    }\n    const { key: keyField, children: childrenField } = unref(getFieldNames);\n    if (!childrenField || !keyField) return;\n\n    forEach(treeData, (treeItem) => {\n      if (treeItem[keyField] === parentKey) {\n        treeItem[childrenField] = treeItem[childrenField] || [];\n        treeItem[childrenField][push](node);\n        return true;\n      }\n    });\n    treeDataRef.value = treeData;\n  }\n  /**\n   * 批量添加节点\n   */\n  function insertNodesByKey({ parentKey = null, list, push = 'push' }: InsertNodeParams) {\n    const treeData: any = cloneDeep(unref(treeDataRef));\n    if (!list || list.length < 1) {\n      return;\n    }\n    if (!parentKey) {\n      for (let i = 0; i < list.length; i++) {\n        treeData[push](list[i]);\n      }\n      treeDataRef.value = treeData;\n      return;\n    } else {\n      const { key: keyField, children: childrenField } = unref(getFieldNames);\n      if (!childrenField || !keyField) return;\n\n      forEach(treeData, (treeItem) => {\n        if (treeItem[keyField] === parentKey) {\n          treeItem[childrenField] = treeItem[childrenField] || [];\n          for (let i = 0; i < list.length; i++) {\n            treeItem[childrenField][push](list[i]);\n          }\n          treeDataRef.value = treeData;\n          return true;\n        }\n      });\n    }\n  }\n  // Delete node\n  function deleteNodeByKey(key: string, list?: TreeDataItem[]) {\n    if (!key) return;\n    const treeData = list || unref(treeDataRef);\n    const { key: keyField, children: childrenField } = unref(getFieldNames);\n    if (!childrenField || !keyField) return;\n\n    for (let index = 0; index < treeData.length; index++) {\n      const element: any = treeData[index];\n      const children = element[childrenField];\n\n      if (element[keyField] === key) {\n        treeData.splice(index, 1);\n        break;\n      } else if (children && children.length) {\n        deleteNodeByKey(key, element[childrenField]);\n      }\n    }\n  }\n\n  // Get selected node\n  function getSelectedNode(key: KeyType, list?: TreeItem[], selectedNode?: TreeItem | null) {\n    if (!key && key !== 0) return null;\n    const treeData = list || unref(treeDataRef);\n    const { key: keyField, children: childrenField } = unref(getFieldNames);\n    if (!keyField) return;\n    treeData.forEach((item) => {\n      if (selectedNode?.key || selectedNode?.key === 0) return selectedNode;\n      if (item[keyField] === key) {\n        selectedNode = item;\n        return;\n      }\n      if (item[childrenField!] && item[childrenField!].length) {\n        selectedNode = getSelectedNode(key, item[childrenField!], selectedNode);\n      }\n    });\n    return selectedNode || null;\n  }\n  return {\n    deleteNodeByKey,\n    insertNodeByKey,\n    insertNodesByKey,\n    filterByLevel,\n    updateNodeByKey,\n    getAllKeys,\n    getChildrenKeys,\n    getEnabledKeys,\n    getSelectedNode,\n  };\n}\n","<script lang=\"tsx\">\n  import type { ContextMenuItem, ItemContentProps, Axis } from './typing';\n  import type { FunctionalComponent, CSSProperties, PropType } from 'vue';\n  import { defineComponent, nextTick, onMounted, computed, ref, unref, onUnmounted } from 'vue';\n  import Icon from '@/components/Icon/Icon.vue';\n  import { Menu, Divider } from 'ant-design-vue';\n\n  const prefixCls = 'context-menu';\n\n  const props = {\n    width: { type: Number, default: 156 },\n    customEvent: { type: Object as PropType<Event>, default: null },\n    styles: { type: Object as PropType<CSSProperties> },\n    showIcon: { type: Boolean, default: true },\n    axis: {\n      // The position of the right mouse button click\n      type: Object as PropType<Axis>,\n      default() {\n        return { x: 0, y: 0 };\n      },\n    },\n    items: {\n      // The most important list, if not, will not be displayed\n      type: Array as PropType<ContextMenuItem[]>,\n      default() {\n        return [];\n      },\n    },\n  };\n\n  const ItemContent: FunctionalComponent<ItemContentProps> = (props) => {\n    const { item } = props;\n    return (\n      <span\n        style=\"display: inline-block; width: 100%; \"\n        class=\"px-4\"\n        onClick={props.handler.bind(null, item)}\n      >\n        {props.showIcon && item.icon && <Icon class=\"mr-2\" icon={item.icon} />}\n        <span>{item.label}</span>\n      </span>\n    );\n  };\n\n  export default defineComponent({\n    name: 'ContextMenu',\n    props,\n    setup(props) {\n      const wrapRef = ref(null);\n      const showRef = ref(false);\n\n      const getStyle = computed((): CSSProperties => {\n        const { axis, items, styles, width } = props;\n        const { x, y } = axis || { x: 0, y: 0 };\n        const menuHeight = (items || []).length * 40;\n        const menuWidth = width;\n        const body = document.body;\n\n        const left = body.clientWidth < x + menuWidth ? x - menuWidth : x;\n        const top = body.clientHeight < y + menuHeight ? y - menuHeight : y;\n        return {\n          ...styles,\n          position: 'absolute',\n          width: `${width}px`,\n          left: `${left + 1}px`,\n          top: `${top + 1}px`,\n          zIndex: 9999,\n        };\n      });\n\n      onMounted(() => {\n        nextTick(() => (showRef.value = true));\n      });\n\n      onUnmounted(() => {\n        const el = unref(wrapRef);\n        el && document.body.removeChild(el);\n      });\n\n      function handleAction(item: ContextMenuItem, e: MouseEvent) {\n        const { handler, disabled } = item;\n        if (disabled) {\n          return;\n        }\n        showRef.value = false;\n        e?.stopPropagation();\n        e?.preventDefault();\n        handler?.();\n      }\n\n      function renderMenuItem(items: ContextMenuItem[]) {\n        const visibleItems = items.filter((item) => !item.hidden);\n        return visibleItems.map((item) => {\n          const { disabled, label, children, divider = false } = item;\n\n          const contentProps = {\n            item,\n            handler: handleAction,\n            showIcon: props.showIcon,\n          };\n\n          if (!children || children.length === 0) {\n            return (\n              <>\n                <Menu.Item disabled={disabled} class={`${prefixCls}__item`} key={label}>\n                  <ItemContent {...contentProps} />\n                </Menu.Item>\n                {divider ? <Divider key={`d-${label}`} /> : null}\n              </>\n            );\n          }\n          if (!unref(showRef)) return null;\n\n          return (\n            <Menu.SubMenu key={label} disabled={disabled} popupClassName={`${prefixCls}__popup`}>\n              {{\n                title: () => <ItemContent {...contentProps} />,\n                default: () => renderMenuItem(children),\n              }}\n            </Menu.SubMenu>\n          );\n        });\n      }\n      return () => {\n        if (!unref(showRef)) {\n          return null;\n        }\n        const { items } = props;\n        return (\n          <div class={prefixCls}>\n            <Menu inlineIndent={12} mode=\"vertical\" ref={wrapRef} style={unref(getStyle)}>\n              {renderMenuItem(items)}\n            </Menu>\n          </div>\n        );\n      };\n    },\n  });\n</script>\n<style lang=\"less\">\n  @default-height: 42px !important;\n\n  @small-height: 36px !important;\n\n  @large-height: 36px !important;\n\n  .item-style() {\n    li {\n      display: inline-block;\n      width: 100%;\n      height: @default-height;\n      margin: 0 !important;\n      line-height: @default-height;\n\n      span {\n        line-height: @default-height;\n      }\n\n      > div {\n        margin: 0 !important;\n      }\n\n      &:not(.ant-menu-item-disabled):hover {\n        background-color: @item-hover-bg;\n        color: @text-color-base;\n      }\n    }\n  }\n\n  .context-menu {\n    display: block;\n    position: fixed;\n    z-index: 200;\n    top: 0;\n    left: 0;\n    width: 156px;\n    margin: 0;\n    border: 1px solid rgb(0 0 0 / 8%);\n    border-radius: 0.25rem;\n    background-clip: padding-box;\n    background-color: @component-background;\n    box-shadow: 0 2px 2px 0 rgb(0 0 0 / 14%), 0 3px 1px -2px rgb(0 0 0 / 10%),\n      0 1px 5px 0 rgb(0 0 0 / 6%);\n    list-style: none;\n    user-select: none;\n\n    &__item {\n      margin: 0 !important;\n    }\n    .item-style();\n\n    .ant-divider {\n      margin: 0;\n    }\n\n    &__popup {\n      .ant-divider {\n        margin: 0;\n      }\n\n      .item-style();\n    }\n\n    .ant-menu-submenu-title,\n    .ant-menu-item {\n      padding: 0 !important;\n    }\n  }\n</style>\n","import contextMenuVue from './ContextMenu.vue';\nimport { isClient } from '/@/utils/is';\nimport { CreateContextOptions, ContextMenuProps } from './typing';\nimport { createVNode, render } from 'vue';\n\nconst menuManager: {\n  domList: Element[];\n  resolve: Fn;\n} = {\n  domList: [],\n  resolve: () => {},\n};\n\nexport const createContextMenu = function (options: CreateContextOptions) {\n  const { event } = options || {};\n\n  event && event?.preventDefault();\n\n  if (!isClient) {\n    return;\n  }\n  return new Promise((resolve) => {\n    const body = document.body;\n\n    const container = document.createElement('div');\n    const propsData: Partial<ContextMenuProps> = {};\n    if (options.styles) {\n      propsData.styles = options.styles;\n    }\n\n    if (options.items) {\n      propsData.items = options.items;\n    }\n\n    if (options.event) {\n      propsData.customEvent = event;\n      propsData.axis = { x: event.clientX, y: event.clientY };\n    }\n\n    const vm = createVNode(contextMenuVue, propsData);\n    render(vm, container);\n\n    const handleClick = function () {\n      menuManager.resolve('');\n    };\n\n    menuManager.domList.push(container);\n\n    const remove = function () {\n      menuManager.domList.forEach((dom: Element) => {\n        try {\n          dom && body.removeChild(dom);\n        } catch (error) {\n          //\n        }\n      });\n      body.removeEventListener('click', handleClick);\n      body.removeEventListener('scroll', handleClick);\n    };\n\n    menuManager.resolve = function (arg) {\n      remove();\n      resolve(arg);\n    };\n    remove();\n    body.appendChild(container);\n    body.addEventListener('click', handleClick);\n    body.addEventListener('scroll', handleClick);\n  });\n};\n\nexport const destroyContextMenu = function () {\n  if (menuManager) {\n    menuManager.resolve('');\n    menuManager.domList = [];\n  }\n};\n","import { onUnmounted, getCurrentInstance } from 'vue';\nimport { createContextMenu, destroyContextMenu } from '/@/components/ContextMenu';\nimport type { ContextMenuItem } from '/@/components/ContextMenu';\n\nexport type { ContextMenuItem };\nexport function useContextMenu(authRemove = true) {\n  if (getCurrentInstance() && authRemove) {\n    onUnmounted(() => {\n      destroyContextMenu();\n    });\n  }\n  return [createContextMenu, destroyContextMenu];\n}\n","<script lang=\"tsx\">\n  import {\n    CSSProperties,\n    nextTick,\n    defineComponent,\n    reactive,\n    computed,\n    unref,\n    ref,\n    watchEffect,\n    toRaw,\n    watch,\n    onMounted,\n  } from 'vue';\n  import type {\n    FieldNames,\n    TreeState,\n    TreeItem,\n    KeyType,\n    CheckKeys,\n    TreeActionType,\n  } from './types/tree';\n\n  import TreeHeader from './components/TreeHeader.vue';\n  import { Tree, Spin, Empty } from 'ant-design-vue';\n  import { TreeIcon } from './TreeIcon';\n  import { ScrollContainer } from '/@/components/Container';\n  import { omit, get, difference, cloneDeep } from 'lodash-es';\n  import { isArray, isBoolean, isEmpty, isFunction } from '/@/utils/is';\n  import { extendSlots, getSlot } from '/@/utils/helper/tsxHelper';\n  import { filter, treeToList, eachTree } from '/@/utils/helper/treeHelper';\n  import { useTree } from './hooks/useTree';\n  import { useContextMenu } from '/@/hooks/web/useContextMenu';\n  import { CreateContextOptions } from '/@/components/ContextMenu';\n  import { treeEmits, treeProps } from './types/tree';\n  import { createBEM } from '/@/utils/bem';\n\n  export default defineComponent({\n    name: 'BasicTree',\n    inheritAttrs: false,\n    props: treeProps,\n    emits: treeEmits,\n    setup(props, { attrs, slots, emit, expose }) {\n      const [bem] = createBEM('tree');\n      const treeBadgeMap = new Map<string, any>();\n\n      const state = reactive<TreeState>({\n        checkStrictly: props.checkStrictly,\n        expandedKeys: props.expandedKeys || [],\n        selectedKeys: props.selectedKeys || [],\n        checkedKeys: props.checkedKeys || [],\n      });\n\n      const searchState = reactive({\n        startSearch: false,\n        searchText: '',\n        searchData: [] as TreeItem[],\n      });\n\n      const treeDataRef = ref<TreeItem[]>([]);\n\n      const [createContextMenu] = useContextMenu();\n\n      const getFieldNames = computed((): Required<FieldNames> => {\n        const { fieldNames } = props;\n        return {\n          children: 'children',\n          title: 'title',\n          key: 'key',\n          ...fieldNames,\n        };\n      });\n\n      const getBindValues = computed(() => {\n        let propsData = {\n          blockNode: true,\n          ...attrs,\n          ...props,\n          expandedKeys: state.expandedKeys,\n          selectedKeys: state.selectedKeys,\n          checkedKeys: state.checkedKeys,\n          checkStrictly: state.checkStrictly,\n          fieldNames: unref(getFieldNames),\n          'onUpdate:expandedKeys': (v: KeyType[]) => {\n            state.expandedKeys = v;\n            emit('update:expandedKeys', v);\n          },\n          'onUpdate:selectedKeys': (v: KeyType[]) => {\n            state.selectedKeys = v;\n            emit('update:selectedKeys', v);\n          },\n          // onExpand: (keys, event) => {\n          //   setTimeout(() => {\n          //     handleBadge();\n          //   }, 300);\n          // },\n          onCheck: (v: CheckKeys, e) => {\n            let currentValue = toRaw(state.checkedKeys) as KeyType[];\n            if (isArray(currentValue) && searchState.startSearch) {\n              const value = e.node.eventKey;\n              currentValue = difference(currentValue, getChildrenKeys(value));\n              if (e.checked) {\n                currentValue.push(value);\n              }\n              state.checkedKeys = currentValue;\n            } else {\n              state.checkedKeys = v;\n            }\n\n            const rawVal = toRaw(state.checkedKeys);\n            emit('update:value', rawVal);\n            emit('check', rawVal, e);\n          },\n          onRightClick: handleRightClick,\n        };\n        return omit(propsData, 'treeData', 'class');\n      });\n\n      const getTreeData = computed((): TreeItem[] =>\n        searchState.startSearch ? searchState.searchData : unref(treeDataRef),\n      );\n\n      const getNotFound = computed((): boolean => {\n        return !getTreeData.value || getTreeData.value.length === 0;\n      });\n\n      const {\n        deleteNodeByKey,\n        insertNodeByKey,\n        insertNodesByKey,\n        filterByLevel,\n        updateNodeByKey,\n        getAllKeys,\n        getChildrenKeys,\n        getEnabledKeys,\n        getSelectedNode,\n      } = useTree(treeDataRef, getFieldNames);\n\n      function getIcon(params: TreeItem, icon?: string) {\n        if (!icon) {\n          if (props.renderIcon && isFunction(props.renderIcon)) {\n            return props.renderIcon(params);\n          }\n        }\n        return icon;\n      }\n\n      async function handleRightClick({ event, node }: Recordable) {\n        const { rightMenuList: menuList = [], beforeRightClick } = props;\n        let contextMenuOptions: CreateContextOptions = { event, items: [] };\n\n        if (beforeRightClick && isFunction(beforeRightClick)) {\n          let result = await beforeRightClick(node, event);\n          if (Array.isArray(result)) {\n            contextMenuOptions.items = result;\n          } else {\n            Object.assign(contextMenuOptions, result);\n          }\n        } else {\n          contextMenuOptions.items = menuList;\n        }\n        if (!contextMenuOptions.items?.length) return;\n        contextMenuOptions.items = contextMenuOptions.items.filter((item) => !item.hidden);\n        createContextMenu(contextMenuOptions);\n      }\n\n      function setExpandedKeys(keys: KeyType[]) {\n        state.expandedKeys = keys;\n      }\n\n      function getExpandedKeys() {\n        return state.expandedKeys;\n      }\n      function setSelectedKeys(keys: KeyType[]) {\n        state.selectedKeys = keys;\n      }\n\n      function getSelectedKeys() {\n        return state.selectedKeys;\n      }\n\n      function setCheckedKeys(keys: CheckKeys) {\n        state.checkedKeys = keys;\n      }\n\n      function getCheckedKeys() {\n        return state.checkedKeys;\n      }\n\n      function checkAll(checkAll: boolean) {\n        state.checkedKeys = checkAll ? getEnabledKeys() : ([] as KeyType[]);\n      }\n\n      function expandAll(expandAll: boolean) {\n        state.expandedKeys = expandAll ? getAllKeys() : ([] as KeyType[]);\n      }\n\n      function onStrictlyChange(strictly: boolean) {\n        state.checkStrictly = strictly;\n      }\n\n      watch(\n        () => props.searchValue,\n        (val) => {\n          if (val !== searchState.searchText) {\n            searchState.searchText = val;\n          }\n        },\n        {\n          immediate: true,\n        },\n      );\n\n      watch(\n        () => props.treeData,\n        (val) => {\n          if (val) {\n            treeDataRef.value = props.treeData as TreeItem[];\n            handleSearch(searchState.searchText);\n          }\n        },\n      );\n\n      const handleBadge = () => {\n        handleTreeData(props.treeData);\n        const entries = treeBadgeMap.entries();\n        nextTick(() => {\n          for (const [key, value] of entries) {\n            addSpanToNodeByClass(key, value);\n          }\n        });\n      };\n\n      const addSpanToNodeByClass = (containerClass, content) => {\n        if (content === '0' || content === 0) {\n          return;\n        }\n        const targetClass = 'vben-tree__title';\n        const container = document.querySelector(`.${containerClass}`);\n        if (container) {\n          const targetNode = container.querySelector(`.${targetClass}`);\n          if (targetNode && !targetNode.hasAttribute('data-span-added')) {\n            const spanElement = document.createElement('span');\n            spanElement.className = 'notReadNumCls';\n            spanElement.textContent = content;\n            targetNode.appendChild(spanElement);\n            targetNode.setAttribute('data-span-added', 'true');\n          }\n        }\n      };\n\n      const getTreeNodeKey = (element) => {\n        return element[props?.fieldNames?.key || 'key'] || element?.id || element?.key;\n      };\n\n      const handleTreeData = (data) => {\n        if (data == null) {\n          return;\n        }\n        try {\n          for (let element of data) {\n            const key = 'val_' + getTreeNodeKey(element);\n            // const badge = Reflect.get(element, 'badge') || 0;\n            if (Reflect.has(element, 'class')) {\n              element.class = element.class + ' ' + key + ' ';\n            } else {\n              element.class = key;\n            }\n            // treeBadgeMap.set(key, badge);\n            if (Reflect.has(element, 'children')) {\n              handleTreeData(Reflect.get(element, 'children'));\n            }\n          }\n        } catch (error) {\n          //\n        }\n      };\n\n      function handleSearch(searchValue: string) {\n        if (searchValue !== searchState.searchText) searchState.searchText = searchValue;\n        emit('update:searchValue', searchValue);\n        if (!searchValue) {\n          searchState.startSearch = false;\n          return;\n        }\n        const { filterFn, checkable, expandOnSearch, checkOnSearch, selectedOnSearch } =\n          unref(props);\n        searchState.startSearch = true;\n        const { title: titleField, key: keyField } = unref(getFieldNames);\n\n        const matchedKeys: string[] = [];\n        searchState.searchData = filter(\n          unref(treeDataRef),\n          (node) => {\n            const result = filterFn\n              ? filterFn(searchValue, node, unref(getFieldNames))\n              : node[titleField]?.includes(searchValue) ?? false;\n            if (result) {\n              matchedKeys.push(node[keyField]);\n            }\n            return result;\n          },\n          unref(getFieldNames),\n        );\n\n        if (expandOnSearch) {\n          const expandKeys = treeToList(searchState.searchData).map((val) => {\n            return val[keyField];\n          });\n          if (expandKeys && expandKeys.length) {\n            setExpandedKeys(expandKeys);\n          }\n        }\n\n        if (checkOnSearch && checkable && matchedKeys.length) {\n          setCheckedKeys(matchedKeys);\n        }\n\n        if (selectedOnSearch && matchedKeys.length) {\n          setSelectedKeys(matchedKeys);\n        }\n      }\n\n      function handleClickNode(key: string, children: TreeItem[]) {\n        if (!props.clickRowToExpand || !children || children.length === 0) return;\n        if (!state.expandedKeys.includes(key)) {\n          setExpandedKeys([...state.expandedKeys, key]);\n        } else {\n          const keys = [...state.expandedKeys];\n          const index = keys.findIndex((item) => item === key);\n          if (index !== -1) {\n            keys.splice(index, 1);\n          }\n          setExpandedKeys(keys);\n        }\n      }\n\n      watchEffect(() => {\n        treeDataRef.value = props.treeData as TreeItem[];\n      });\n\n      onMounted(() => {\n        const level = parseInt(props.defaultExpandLevel);\n        if (level > 0) {\n          state.expandedKeys = filterByLevel(level);\n        } else if (props.defaultExpandAll) {\n          expandAll(true);\n        }\n      });\n\n      watchEffect(() => {\n        state.expandedKeys = props.expandedKeys;\n      });\n\n      watchEffect(() => {\n        state.selectedKeys = props.selectedKeys;\n      });\n\n      watchEffect(() => {\n        state.checkedKeys = props.checkedKeys;\n      });\n\n      watch(\n        () => props.value,\n        () => {\n          state.checkedKeys = toRaw(props.value || []);\n        },\n        { immediate: true },\n      );\n\n      watch(\n        () => state.checkedKeys,\n        () => {\n          const v = toRaw(state.checkedKeys);\n          emit('update:value', v);\n          emit('change', v);\n        },\n      );\n\n      watchEffect(() => {\n        state.checkStrictly = props.checkStrictly;\n      });\n\n      const instance: TreeActionType = {\n        setExpandedKeys,\n        getExpandedKeys,\n        setSelectedKeys,\n        getSelectedKeys,\n        setCheckedKeys,\n        getCheckedKeys,\n        insertNodeByKey,\n        insertNodesByKey,\n        deleteNodeByKey,\n        updateNodeByKey,\n        getSelectedNode,\n        checkAll,\n        expandAll,\n        filterByLevel: (level: number) => {\n          state.expandedKeys = filterByLevel(level);\n        },\n        setSearchValue: (value: string) => {\n          handleSearch(value);\n        },\n        getSearchValue: () => {\n          return searchState.searchText;\n        },\n        handleBadge,\n      };\n\n      function renderAction(node: TreeItem) {\n        const { actionList } = props;\n        if (!actionList || actionList.length === 0) return;\n        return actionList.map((item, index) => {\n          let nodeShow = true;\n          if (isFunction(item.show)) {\n            nodeShow = item.show?.(node);\n          } else if (isBoolean(item.show)) {\n            nodeShow = item.show;\n          }\n\n          if (!nodeShow) return null;\n\n          return (\n            <span key={index} class={bem('action')}>\n              {item.render(node)}\n            </span>\n          );\n        });\n      }\n\n      const treeData = computed(() => {\n        const data = cloneDeep(getTreeData.value);\n        eachTree(data, (item, _parent) => {\n          const searchText = searchState.searchText;\n          const { highlight } = unref(props);\n          const {\n            title: titleField,\n            key: keyField,\n            children: childrenField,\n          } = unref(getFieldNames);\n\n          const icon = getIcon(item, item.icon);\n          const title = get(item, titleField);\n\n          const searchIdx = searchText ? title.indexOf(searchText) : -1;\n          const isHighlight =\n            searchState.startSearch && !isEmpty(searchText) && highlight && searchIdx !== -1;\n          const highlightStyle = `color: ${isBoolean(highlight) ? '#f50' : highlight}`;\n\n          const titleDom = isHighlight ? (\n            <span class={unref(getBindValues)?.blockNode ? `${bem('content')}` : ''}>\n              <span>{title.substr(0, searchIdx)}</span>\n              <span style={highlightStyle}>{searchText}</span>\n              <span>{title.substr(searchIdx + (searchText as string).length)}</span>\n            </span>\n          ) : (\n            title\n          );\n          item[titleField] = (\n            <span\n              class={`${bem('title')} pl-2`}\n              onClick={handleClickNode.bind(null, item[keyField], item[childrenField])}\n            >\n              {slots?.title ? (\n                getSlot(slots, 'title', item)\n              ) : (\n                <>\n                  {icon && <TreeIcon icon={icon} />}\n                  {titleDom}\n                  <span class={bem('actions')}>{renderAction(item)}</span>\n                </>\n              )}\n            </span>\n          );\n          return item;\n        });\n        return data;\n      });\n\n      expose(instance);\n\n      return () => {\n        const {\n          title,\n          helpMessage,\n          toolbar,\n          search,\n          checkable,\n          simple,\n          isShowOperationBtns,\n          canEdit,\n          canAdd,\n          canDelete,\n        } = props;\n        const showTitle = title || toolbar || search || slots.headerTitle || isShowOperationBtns;\n        const scrollStyle: CSSProperties = { height: 'calc(100% - 38px)' };\n        return (\n          <div class={[bem(), 'h-full', attrs.class]}>\n            {showTitle && (\n              <TreeHeader\n                checkable={checkable}\n                checkAll={checkAll}\n                expandAll={expandAll}\n                title={title}\n                search={search}\n                toolbar={toolbar}\n                simple={simple}\n                canAdd={canAdd}\n                canEdit={canEdit}\n                canDelete={canDelete}\n                helpMessage={helpMessage}\n                onStrictlyChange={onStrictlyChange}\n                onSearch={handleSearch}\n                searchText={searchState.searchText}\n                isShowOperationBtns={isShowOperationBtns}\n              >\n                {extendSlots(slots)}\n              </TreeHeader>\n            )}\n            <Spin\n              wrapperClassName={unref(props.treeWrapperClassName)}\n              spinning={unref(props.loading)}\n              tip=\"加载中...\"\n            >\n              <ScrollContainer style={scrollStyle} v-show={!unref(getNotFound)}>\n                <Tree {...unref(getBindValues)} showIcon={false} treeData={treeData.value} />\n              </ScrollContainer>\n              <Empty\n                v-show={unref(getNotFound)}\n                image={Empty.PRESENTED_IMAGE_SIMPLE}\n                class=\"!mt-4\"\n              />\n            </Spin>\n          </div>\n        );\n      };\n    },\n  });\n</script>\n<style lang=\"less\" scoped>\n  :deep(.ant-tree-title) {\n    .notReadNumCls {\n      width: 0.85rem;\n      height: 0.85rem;\n      margin-left: 0.2rem;\n      padding: 0 0 0 -0.05rem;\n      border: 1px solid red;\n      border-radius: 0.85rem;\n      color: red;\n      font-size: 0.55rem;\n      line-height: 0.775rem;\n      text-align: center;\n    }\n  }\n\n  .tree-scroll-y {\n    overflow-y: scroll;\n  }\n</style>\n"],"names":["LARGE_ARRAY_SIZE","baseDifference","array","values","iteratee","comparator","index","includes","arrayIncludes","isCommon","length","result","valuesLength","arrayMap","baseUnary","arrayIncludesWith","cacheHas","SetCache","outer","value","computed","valuesIndex","difference","baseRest","isArrayLikeObject","baseFlatten","difference$1","stringTag","isString","isArray","isObjectLike","baseGetTag","genBem","name","mods","ret","item","key","buildBEM","el","createBEM","prefixCls","wrapperKey","propKey","buildProp","option","isObject","required","defaultValue","type","validator","_validator","val","valid","allowedValues","allowValuesText","warn","buildProps","props","fromPairs","ToolbarEnum","ToolbarEnum2","treeEmits","treeProps","searchValue","ref","bem","slots","useSlots","t","useI18n","getInputSearchCls","toolbarList","checkable","simple","isShowOperationBtns","defaultToolbarList","operationBtnList","handleTreeEdit","inject","handleTreeAdd","handleTreeDelete","handleTreeRefresh","handleMenuClick","e","_a","_b","_c","_d","emit","emitChange","debounceEmitChange","useDebounceFn","watch","v","onMounted","TreeIcon","icon","h","Icon","useTree","treeDataRef","getFieldNames","getAllKeys","list","keys","treeData","unref","keyField","childrenField","node","children","getEnabledKeys","getChildrenKeys","nodeKey","updateNodeByKey","element","__spreadValues","filterByLevel","level","currentLevel","res","data","insertNodeByKey","parentKey","push","cloneDeep","forEach","treeItem","insertNodesByKey","i","deleteNodeByKey","getSelectedNode","selectedNode","_isSlot","s","Object","prototype","toString","call","_isVNode","width","Number","default","customEvent","styles","showIcon","Boolean","axis","x","y","items","Array","ItemContent","_createVNode","handler","bind","label","defineComponent","setup","wrapRef","showRef","getStyle","menuHeight","menuWidth","body","document","left","clientWidth","top","clientHeight","__spreadProps","position","zIndex","nextTick","onUnmounted","removeChild","handleAction","disabled","stopPropagation","preventDefault","renderMenuItem","filter","hidden","map","divider","contentProps","_Fragment","Menu","Item","SubMenu","title","_slot","menuManager","createContextMenu","options","event","isClient","resolve","container","propsData","vm","createVNode","contextMenuVue","render","handleClick","remove","dom","error","arg","destroyContextMenu","useContextMenu","authRemove","getCurrentInstance","inheritAttrs","emits","attrs","expose","treeBadgeMap","Map","state","reactive","checkStrictly","expandedKeys","selectedKeys","checkedKeys","searchState","startSearch","searchText","searchData","fieldNames","getBindValues","blockNode","onCheck","currentValue","toRaw","eventKey","checked","rawVal","onRightClick","handleRightClick","omit","getTreeData","getNotFound","getIcon","params","renderIcon","isFunction","_0","__async","rightMenuList","menuList","beforeRightClick","contextMenuOptions","assign","setExpandedKeys","getExpandedKeys","setSelectedKeys","getSelectedKeys","setCheckedKeys","getCheckedKeys","checkAll","expandAll","onStrictlyChange","strictly","immediate","handleSearch","handleBadge","handleTreeData","entries","addSpanToNodeByClass","containerClass","content","targetClass","querySelector","targetNode","hasAttribute","spanElement","createElement","className","textContent","appendChild","setAttribute","getTreeNodeKey","id","Reflect","has","class","get","filterFn","expandOnSearch","checkOnSearch","selectedOnSearch","titleField","matchedKeys","expandKeys","treeToList","handleClickNode","clickRowToExpand","findIndex","splice","watchEffect","parseInt","defaultExpandLevel","defaultExpandAll","instance","setSearchValue","getSearchValue","renderAction","actionList","nodeShow","show","isBoolean","eachTree","_parent","highlight","searchIdx","indexOf","isHighlight","isEmpty","highlightStyle","titleDom","substr","getSlot","helpMessage","toolbar","search","canEdit","canAdd","canDelete","showTitle","headerTitle","scrollStyle","height","TreeHeader","extendSlots","Spin","treeWrapperClassName","loading","_withDirectives","ScrollContainer","Tree","_mergeProps","_vShow","Empty","PRESENTED_IMAGE_SIMPLE"],"mappings":"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","x_google_ignoreList":[0,1,2]}