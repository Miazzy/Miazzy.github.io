{"version":3,"mappings":"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","names":["createAsyncComponent","loader","options","size","delay","timeout","loading","retry","defineAsyncComponent","loadingComponent","_createVNode","Spin","undefined","onError","error","fail","attempts","message","match","noop","useHeaderSetting","getFullContent","useFullContent","appStore","useAppStore","getShowFullHeaderRef","computed","unref","getShowMixHeaderRef","getShowHeader","getIsTopMenu","getIsMixSidebar","getUnFixedAndFull","getFixed","getShowInsetHeaderRef","need","getMenuMode","getSplit","getShowHeaderTrigger","getIsSidebarType","useMenuSetting","getShowBreadCrumb","getShowLogo","useRootSetting","getShowDoc","getHeaderTheme","getHeaderBgColor","getShowSearch","getUseLockPage","getShowFullScreen","getShowNotice","getShowBread","MenuModeEnum","getShowHeaderLogo","getShowContent","setHeaderSetting","headerSetting","UserDropDown","__vitePreload","LayoutBreadcrumb","Notify","ErrorAction"],"sources":["../../src/utils/factory/createAsyncComponent.tsx","../../src/hooks/setting/useHeaderSetting.ts","../../src/layouts/default/header/components/index.ts"],"sourcesContent":["import {\n  defineAsyncComponent,\n  // FunctionalComponent, CSSProperties\n} from 'vue';\nimport { Spin } from 'ant-design-vue';\nimport { noop } from '/@/utils';\n\n// const Loading: FunctionalComponent<{ size: 'small' | 'default' | 'large' }> = (props) => {\n//   const style: CSSProperties = {\n//     position: 'absolute',\n//     display: 'flex',\n//     justifyContent: 'center',\n//     alignItems: 'center',\n//   };\n//   return (\n//     <div style={style}>\n//       <Spin spinning={true} size={props.size} />\n//     </div>\n//   );\n// };\n\ninterface Options {\n  size?: 'default' | 'small' | 'large';\n  delay?: number;\n  timeout?: number;\n  loading?: boolean;\n  retry?: boolean;\n}\n\nexport function createAsyncComponent(loader: Fn, options: Options = {}) {\n  const { size = 'small', delay = 100, timeout = 30000, loading = false, retry = true } = options;\n  return defineAsyncComponent({\n    loader,\n    loadingComponent: loading ? <Spin spinning={true} size={size} /> : undefined,\n    // The error component will be displayed if a timeout is\n    // provided and exceeded. Default: Infinity.\n    // TODO\n    timeout,\n    // errorComponent\n    // Defining if component is suspensible. Default: true.\n    // suspensible: false,\n    delay,\n    /**\n     *\n     * @param {*} error Error message object\n     * @param {*} retry A function that indicating whether the async component should retry when the loader promise rejects\n     * @param {*} fail  End of failure\n     * @param {*} attempts Maximum allowed retries number\n     */\n    onError: !retry\n      ? noop\n      : (error, retry, fail, attempts) => {\n          if (error.message.match(/fetch/) && attempts <= 3) {\n            // retry on fetch errors, 3 max attempts\n            retry();\n          } else {\n            // Note that retry/fail are like resolve/reject of a promise:\n            // one of them must be called for the error handling to continue.\n            fail();\n          }\n        },\n  });\n}\n","import type { HeaderSetting } from '/#/config';\n\nimport { computed, unref } from 'vue';\n\nimport { useAppStore } from '/@/store/modules/app';\n\nimport { useMenuSetting } from '/@/hooks/setting/useMenuSetting';\nimport { useRootSetting } from '/@/hooks/setting/useRootSetting';\nimport { useFullContent } from '/@/hooks/web/useFullContent';\nimport { MenuModeEnum } from '/@/enums/menuEnum';\n\nexport function useHeaderSetting() {\n  const { getFullContent } = useFullContent();\n  const appStore = useAppStore();\n\n  const getShowFullHeaderRef = computed(() => {\n    return (\n      !unref(getFullContent) &&\n      unref(getShowMixHeaderRef) &&\n      unref(getShowHeader) &&\n      !unref(getIsTopMenu) &&\n      !unref(getIsMixSidebar)\n    );\n  });\n\n  const getUnFixedAndFull = computed(() => !unref(getFixed) && !unref(getShowFullHeaderRef));\n\n  const getShowInsetHeaderRef = computed(() => {\n    const need = !unref(getFullContent) && unref(getShowHeader);\n    return (\n      (need && !unref(getShowMixHeaderRef)) ||\n      (need && unref(getIsTopMenu)) ||\n      (need && unref(getIsMixSidebar))\n    );\n  });\n\n  const {\n    getMenuMode,\n    getSplit,\n    getShowHeaderTrigger,\n    getIsSidebarType,\n    getIsMixSidebar,\n    getIsTopMenu,\n  } = useMenuSetting();\n  const { getShowBreadCrumb, getShowLogo } = useRootSetting();\n\n  const getShowMixHeaderRef = computed(() => !unref(getIsSidebarType) && unref(getShowHeader));\n\n  const getShowDoc = computed(() => appStore.getHeaderSetting.showDoc);\n\n  const getHeaderTheme = computed(() => appStore.getHeaderSetting.theme);\n\n  const getShowHeader = computed(() => appStore.getHeaderSetting.show);\n\n  const getFixed = computed(() => appStore.getHeaderSetting.fixed);\n\n  const getHeaderBgColor = computed(() => appStore.getHeaderSetting.bgColor);\n\n  const getShowSearch = computed(() => appStore.getHeaderSetting.showSearch);\n\n  const getUseLockPage = computed(() => appStore.getHeaderSetting.useLockPage);\n\n  const getShowFullScreen = computed(() => appStore.getHeaderSetting.showFullScreen);\n\n  const getShowNotice = computed(() => appStore.getHeaderSetting.showNotice);\n\n  const getShowBread = computed(() => {\n    return (\n      unref(getMenuMode) !== MenuModeEnum.HORIZONTAL && unref(getShowBreadCrumb) && !unref(getSplit)\n    );\n  });\n\n  const getShowHeaderLogo = computed(() => {\n    return unref(getShowLogo) && !unref(getIsSidebarType) && !unref(getIsMixSidebar);\n  });\n\n  const getShowContent = computed(() => {\n    return unref(getShowBread) || unref(getShowHeaderTrigger);\n  });\n\n  // Set header configuration\n  function setHeaderSetting(headerSetting: Partial<HeaderSetting>) {\n    appStore.setProjectConfig({ headerSetting });\n  }\n  return {\n    setHeaderSetting,\n\n    getShowDoc,\n    getShowSearch,\n    getHeaderTheme,\n    getUseLockPage,\n    getShowFullScreen,\n    getShowNotice,\n    getShowBread,\n    getShowContent,\n    getShowHeaderLogo,\n    getShowHeader,\n    getFixed,\n    getShowMixHeaderRef,\n    getShowFullHeaderRef,\n    getShowInsetHeaderRef,\n    getUnFixedAndFull,\n    getHeaderBgColor,\n  };\n}\n","import { createAsyncComponent } from '/@/utils/factory/createAsyncComponent';\nimport FullScreen from './FullScreen.vue';\n\nexport const UserDropDown = createAsyncComponent(() => import('./user-dropdown/index.vue'), {\n  loading: true,\n});\n\nexport const LayoutBreadcrumb = createAsyncComponent(() => import('./Breadcrumb.vue'));\n\nexport const Notify = createAsyncComponent(() => import('./notify/index.vue'));\n\nexport const ErrorAction = createAsyncComponent(() => import('./ErrorAction.vue'));\n\nexport { FullScreen };\n"],"file":"assets/index-56bc5635.js"}