{"version":3,"file":"RoleDrawer-fa5d51ba.js","sources":["../../src/api/system/rbac/role/index.ts","../../src/views/system/rbac/role/role.data.ts","../../src/views/system/rbac/role/RoleDrawer.vue"],"sourcesContent":["import { defHttp } from '/@/utils/http/axios';\n\nexport enum Api {\n  CREATE_URL = '/system/role/create',\n  UPDATE_URL = '/system/role/update',\n  UPDATE_STATUS_URL = '/system/role/updateStatus',\n  UPDATE_BATCH_SORT_URL = '/system/role/updateBatchSort',\n  DELETE_URL = '/system/role/delete',\n  GET_URL = '/system/role/get',\n  GET_NEXT_SORT_URL = '/system/role/getNextSort',\n  TREE_URL = '/system/role/tree',\n  PAGE_URL = '/system/role/page',\n  PERMISSION_CREATE_BATCH_URL = '/system/role/permission/createBatch',\n  PERMISSION_PAGE_URL = '/system/role/permission/page',\n  PERMISSION_LIST_URL = '/system/role/permission/list',\n  PERMISSION_EXPORT_EXCEL_URL = '/system/role/permission/export-excel',\n  AUTHORIZE_CREATE_BATCH_URL = '/system/role/authorize/createBatch',\n  AUTHORIZE_PAGE_URL = '/system/role/authorize/page',\n  AUTHORIZE_LIST_URL = '/system/role/authorize/list',\n  AUTHORIZE_EXPORT_EXCEL_URL = '/system/role/authorize/export-excel',\n  DATA_PERMISSION_CREATE_URL = '/system/role/data-permission/create',\n  DATA_PERMISSION_GET_URL = '/system/role/data-permission/get',\n}\n\n// 添加角色管理\nexport const createData = (params) =>\n  defHttp.post(\n    {\n      url: Api.CREATE_URL,\n      params,\n    },\n    {},\n  );\n\n// 修改角色管理\nexport const updateData = (params) =>\n  defHttp.put(\n    {\n      url: Api.UPDATE_URL,\n      params,\n    },\n    {},\n  );\n\nexport const saveData = (params) => {\n  if (!params.id) {\n    return createData(params);\n  }\n  return updateData(params);\n};\n\n// 修改角色管理状态\nexport const updateStatus = (id: string, status: number) =>\n  defHttp.put(\n    {\n      url: `${Api.UPDATE_STATUS_URL}?id=${id}&status=${status}`,\n    },\n    {},\n  );\n\n// 批量修改角色管理排序\nexport const updateBatchSort = (params) =>\n  defHttp.put(\n    {\n      url: Api.UPDATE_BATCH_SORT_URL,\n      params,\n    },\n    {},\n  );\n\n// 删除角色管理\nexport const deleteData = (id) =>\n  defHttp.delete(\n    {\n      url: `${Api.DELETE_URL}?id=${id}`,\n    },\n    {},\n  );\n\n// 获取角色管理\nexport const getData = (id) =>\n  defHttp.get(\n    {\n      url: `${Api.GET_URL}?id=${id}`,\n    },\n    { isOnlyResult: true },\n  );\n\n// 获取下一个排序\nexport const getNextSort = (parentId: string = '') =>\n  defHttp.get(\n    {\n      url: `${Api.GET_NEXT_SORT_URL}?parentId=${parentId}`,\n    },\n    { isOnlyResult: true },\n  );\n\n// 获取角色管理树\nexport const getTree = (params) =>\n  defHttp.get(\n    {\n      url: Api.TREE_URL,\n      params,\n    },\n    { isOnlyResult: true },\n  );\n\n// 分页获取角色管理列表\nexport const getPage = (params) =>\n  defHttp.get(\n    {\n      url: Api.PAGE_URL,\n      params,\n    },\n    { isOnlyResult: true },\n  );\n\n// 批量保存角色权限关系\nexport const createPermissionBatch = (params) =>\n  defHttp.post(\n    {\n      url: Api.PERMISSION_CREATE_BATCH_URL,\n      params,\n    },\n    {},\n  );\n\n// 批量保存角色授权管理\nexport const createAuthorizeBatch = (params) =>\n  defHttp.post(\n    {\n      url: Api.AUTHORIZE_CREATE_BATCH_URL,\n      params,\n    },\n    {},\n  );\n\n// 分页获取角色权限关系列表\nexport const getPermissionPage = (params) =>\n  defHttp.get(\n    {\n      url: Api.PERMISSION_PAGE_URL,\n      params,\n    },\n    { isOnlyResult: true },\n  );\n\n// 获取角色权限关系列表\nexport const getPermissionList = (roleId: string) =>\n  defHttp.get(\n    {\n      url: `${Api.PERMISSION_LIST_URL}?roleId=${roleId}`,\n    },\n    { isOnlyResult: true },\n  );\n\n// 分页获取角色授权管理列表\nexport const getAuthorizePage = (params) =>\n  defHttp.get(\n    {\n      url: Api.AUTHORIZE_PAGE_URL,\n      params,\n    },\n    { isOnlyResult: true },\n  );\n\n// 分页获取角色授权管理列表\nexport const getAuthorizeList = (roleId: string, authKind: string) =>\n  defHttp.get(\n    {\n      url: `${Api.AUTHORIZE_LIST_URL}?roleId=${roleId}&authKind=${authKind}`,\n    },\n    { isOnlyResult: true },\n  );\n\n// 导出角色权限关系列表\nexport const exportPermissionExcel = (params) =>\n  defHttp.post(\n    {\n      url: Api.PERMISSION_EXPORT_EXCEL_URL,\n      params,\n      responseType: 'blob',\n    },\n    { isOnlyResult: true },\n  );\n\n// 导出角色授权管理列表\nexport const exportAuthorizeExcel = (params) =>\n  defHttp.post(\n    {\n      url: Api.AUTHORIZE_EXPORT_EXCEL_URL,\n      params,\n      responseType: 'blob',\n    },\n    { isOnlyResult: true },\n  );\n\n// 保存角色数据权限\nexport const saveDataPermission = (params) =>\n  defHttp.post(\n    {\n      url: Api.DATA_PERMISSION_CREATE_URL,\n      params,\n    },\n    {},\n  );\n\n// 获取角色数据权限\nexport const getDataPermissionByRoleId = (roleId: string) =>\n  defHttp.get(\n    {\n      url: `${Api.DATA_PERMISSION_GET_URL}?roleId=${roleId}`,\n    },\n    { isOnlyResult: true },\n  );\n","import { h } from 'vue';\nimport { Switch } from 'ant-design-vue';\nimport { BasicColumn, FormSchema } from '/@/components/Table';\nimport type { FormProps } from '/@/components/Form/src/types/form';\nimport { useMessage } from '@/hooks/web/useMessage';\nimport * as RoleApi from '@/api/system/rbac/role';\n\ntype CheckedType = boolean | string | number;\n\nexport const columns: BasicColumn[] = [\n  { title: '编码', dataIndex: 'code', width: 120, resizable: true, sorter: true },\n  {\n    title: '名称',\n    dataIndex: 'name',\n    headAlign: 'center',\n    align: 'left',\n    width: 180,\n    resizable: true,\n    sorter: true,\n  },\n\n  {\n    title: '状态',\n    dataIndex: 'status',\n    width: 80,\n    resizable: true,\n    sorter: true,\n    customRender: ({ record }) => {\n      if (!Reflect.has(record, 'pendingStatus')) {\n        record.pendingStatus = false;\n      }\n      return h(Switch, {\n        checked: record.status === 1,\n        checkedChildren: '禁用',\n        unCheckedChildren: '启用',\n        loading: record.pendingStatus,\n        onChange: async (checked: CheckedType) => {\n          record.pendingStatus = true;\n          const newStatus = checked ? 1 : 0;\n          const message = useMessage();\n          RoleApi.updateStatus(record.id, newStatus)\n            .then(() => {\n              record.status = newStatus;\n              message.success('已成功修改角色状态');\n            })\n            .catch(() => {\n              message.error('修改角色状态失败');\n            })\n            .finally(() => {\n              record.pendingStatus = false;\n            });\n        },\n      });\n    },\n  },\n  {\n    title: '节点类别',\n    dataIndex: 'nodeKind',\n    width: 100,\n    resizable: true,\n    sorter: true,\n    customRender: ({ record }) => {\n      return record.nodeKindText;\n    },\n  },\n  { title: '排序', dataIndex: 'sort', width: 100, resizable: true, sorter: true },\n  {\n    title: '描述',\n    dataIndex: 'description',\n    headAlign: 'center',\n    align: 'left',\n    width: 220,\n    resizable: true,\n  },\n];\n\nexport const searchForm: FormProps = {\n  baseColProps: { span: 8 },\n  labelWidth: 120,\n  autoAdvancedLine: 1,\n  schemas: [\n    {\n      label: '名称',\n      field: 'name',\n      component: 'Input',\n    },\n    {\n      label: '状态',\n      field: 'status',\n      component: 'DictSelectBox',\n      componentProps: {\n        type: 'enable_or_disable',\n      },\n    },\n  ],\n};\n\nexport const getFormSchema = (type: string): FormSchema[] => {\n  if (type === 'dataPermission') {\n    return [\n      {\n        field: 'dataScope',\n        label: '数据范围',\n        slot: 'dataScope',\n        component: 'DictSelectBox',\n        dynamicRules: ({ values }) => {\n          if (!Object.prototype.hasOwnProperty.call(values, 'dataScope')) {\n            return [];\n          }\n          return [{ required: false }];\n        },\n      },\n      {\n        label: '数据权限',\n        field: 'menu',\n        slot: 'menu',\n        component: 'ApiTree',\n        show: ({ values }) => {\n          // 指定部门数据权限、指定电站数据权限\n          return values.dataScope == '2' || values.dataScope == '6';\n        },\n        dynamicRules: ({ values }) => {\n          if (!Object.prototype.hasOwnProperty.call(values, 'dataScope')) {\n            return [];\n          }\n          if (values.dataScope == '2' || values.dataScope == '6') {\n            return [{ required: true, message: '请选择数据权限' }];\n          }\n          return [{ required: false }];\n        },\n      },\n    ];\n  }\n  return [\n    {\n      label: ' ',\n      field: 'menu',\n      slot: 'menu',\n      component: 'ApiTree',\n    },\n  ];\n};\n","<template>\n  <BasicDrawer\n    v-bind=\"$attrs\"\n    @register=\"registerDrawer\"\n    showFooter\n    :title=\"title\"\n    width=\"920px\"\n    @ok=\"handleSubmit\"\n  >\n    <BasicForm @register=\"registerForm\">\n      <template #dataScope=\"{ model, field }\">\n        <DictSelectBox\n          v-model:value=\"model[field]\"\n          :type=\"`system_data_scope`\"\n          @change=\"handleChange\"\n        />\n      </template>\n      <template #menu=\"{ model, field }\">\n        <BasicTree\n          ref=\"treeRef\"\n          :class=\"dataAuthClass\"\n          v-model:value=\"model[field]\"\n          :checkedKeys=\"checkedKeys\"\n          :title=\"treeTitle\"\n          :treeData=\"treeData\"\n          :fieldNames=\"{ key: 'id', title: 'name' }\"\n          checkable\n          :toolbar=\"true\"\n          search\n          :expandOnSearch=\"true\"\n          :canAdd=\"false\"\n          :canEdit=\"false\"\n          :canDelete=\"false\"\n          :isShowOperationBtns=\"true\"\n          :checkStrictly=\"checkStrictly\"\n          @check=\"handleSelect\"\n        />\n      </template>\n    </BasicForm>\n  </BasicDrawer>\n</template>\n<script lang=\"ts\" setup>\n  import { ref, unref, reactive } from 'vue';\n  import { useI18n } from '@/hooks/web/useI18n';\n  import { useMessage } from '@/hooks/web/useMessage';\n  import { BasicForm, useForm } from '@/components/Form';\n  import { BasicDrawer, useDrawerInner } from '@/components/Drawer';\n  import { BasicTree, TreeItem } from '@/components/Tree';\n  import DictSelectBox from '@/components/Framework/Combox/DictSelectBox.vue';\n  import { getTreeData } from '@/views/system/rbac/permission';\n  import { getListTree as getOrgTreeData } from '@/api/sys/org';\n  import { getOrgTypeList as getPostTreeData } from '@/views/system/configuration/orgType/data';\n  import { getFormSchema } from './role.data';\n  import * as RoleApi from '@/api/system/rbac/role';\n  import * as CommonApi from '/@/api/baseset/common';\n\n  const emit = defineEmits(['success', 'register']);\n  const { t } = useI18n();\n  const message = useMessage();\n  const treeRef = ref();\n  const formState = reactive({ id: '', type: '', roleId: '' });\n  const title = ref<string>('');\n  const treeTitle = ref<string>('');\n  const isUpdate = ref(true);\n  const checkedKeys = ref<string[]>([]);\n  const treeCheckedDataSource = ref<Array<any>>([]);\n  const deptTreeCheckedDataSource = ref<Array<any>>([]);\n  const stationTreeCheckedDataSource = ref<Array<any>>([]);\n  const treeData = ref<TreeItem[]>([]);\n  const deptTreeData = ref<TreeItem[]>([]);\n  const stationTreeData = ref<TreeItem[]>([]);\n  const treeTypeData = reactive({ menu: [], org: [], pos: [], dataPermission: [] });\n  const checkStrictly = ref<boolean>(true);\n  const dataAuthClass = ref();\n  const labelWidth = ref();\n\n  const [registerForm, { setProps, validate, resetFields, setFieldsValue }] = useForm({\n    labelWidth: labelWidth,\n    baseColProps: { span: 24 },\n    showActionButtonGroup: false,\n  });\n\n  const getBizTreeData = async (type: string) => {\n    let data = [];\n    if (type === 'menu') {\n      data = (await getTreeData({ disableNonPermissionNode: true, status: 1 })).result;\n    } else if (type === 'org') {\n      data = await getOrgTreeData({ orgKindIds: 'ogn,dpt,pos,psm', showPosition: true });\n    } else if (type === 'pos') {\n      data = (await getPostTreeData({ pageNo: 1, pageSize: 200, orgKindId: 'pos' })).list;\n    } else if (isDataPermission(type)) {\n      // 部门信息\n      data = await getOrgTreeData({ orgKindIds: 'ogn,dpt', showPosition: false });\n      deptTreeData.value = data as any as TreeItem[];\n      // 电站信息\n      const stationTree = (await CommonApi.getStationTree({})).result;\n      stationTreeData.value = stationTree as any as TreeItem[];\n    }\n    const result = data as any as TreeItem[];\n    treeData.value = result;\n    return result;\n  };\n\n  const initSelectNodes = async (type: string, roleId: string, dataPermission: any) => {\n    // 数据权限\n    if (isDataPermission(type)) {\n      const dataScopeOrgIds = dataPermission.dataScopeOrgIds;\n      treeCheckedDataSource.value = dataScopeOrgIds;\n      if (dataPermission.dataScope == '2') {\n        treeData.value = deptTreeData.value;\n        deptTreeCheckedDataSource.value = dataScopeOrgIds;\n      } else if (dataPermission.dataScope == '6') {\n        treeData.value = stationTreeData.value;\n        stationTreeCheckedDataSource.value = dataScopeOrgIds;\n      }\n      setTimeout(() => {\n        checkedKeys.value = dataScopeOrgIds;\n      }, 500);\n      return;\n    }\n    // 非数据权限\n    let data = [];\n    if (type === 'menu') {\n      data = await RoleApi.getPermissionList(roleId);\n    } else {\n      data = await RoleApi.getAuthorizeList(roleId, type);\n    }\n    const keys = [] as any;\n    data.forEach((item: any) => {\n      const key = type === 'menu' ? item.permissionId : item.authId;\n      keys.push(key);\n    });\n    checkedKeys.value = keys;\n    treeCheckedDataSource.value = data;\n  };\n\n  const initTreeTitle = (type: string) => {\n    treeTitle.value =\n      type === 'menu' ? '权限树' : type === 'org' ? '组织树' : type === 'pos' ? '标准岗树' : '';\n  };\n\n  const initBizClass = (type: string) => {\n    dataAuthClass.value = '';\n    labelWidth.value = null;\n    if (isDataPermission(type)) {\n      dataAuthClass.value = 'data-auth-tree';\n      labelWidth.value = 80;\n    }\n  };\n\n  const [registerDrawer, { setDrawerProps, closeDrawer }] = useDrawerInner(async (data) => {\n    setProps({ schemas: getFormSchema(data.record.type) });\n    resetFields();\n    setDrawerProps({ confirmLoading: false });\n    title.value = data.record.title;\n    formState.type = data.record.type;\n    formState.roleId = data.record.roleId;\n\n    initBizClass(formState.type);\n\n    deptTreeCheckedDataSource.value = [];\n    stationTreeCheckedDataSource.value = [];\n\n    initTreeTitle(formState.type);\n\n    // 需要在setFieldsValue之前先填充treeData，否则Tree组件可能会报key not exist警告\n    if (treeTypeData[formState.type].length === 0) {\n      treeData.value = [];\n      const bizTreeData = await getBizTreeData(formState.type);\n      treeTypeData[formState.type] = bizTreeData;\n    } else if (!isDataPermission(formState.type)) {\n      treeData.value = treeTypeData[formState.type];\n    }\n\n    // 数据权限\n    let dataPermission = {} as any;\n    formState.id = '';\n    if (isDataPermission(formState.type)) {\n      const permission = await RoleApi.getDataPermissionByRoleId(data.record.roleId);\n      if (permission) {\n        dataPermission = permission;\n      }\n      formState.id = dataPermission?.id;\n    }\n\n    // 层级独立\n    // checkStrictly.value = formState.type === 'org' || dataPermission.dataScope == '2';\n    checkStrictly.value = dataPermission.dataScope == '2';\n\n    // 初始化选中节点\n    await initSelectNodes(formState.type, data.record.roleId, dataPermission);\n\n    isUpdate.value = !!data?.isUpdate;\n    if (unref(isUpdate)) {\n      setFieldsValue({\n        ...data.record,\n        dataScope: dataPermission?.dataScope,\n      });\n    }\n  });\n\n  const isDataPermission = (type: string) => {\n    return type === 'dataPermission';\n  };\n\n  const selectedNodes = ref<TreeItem[]>([]);\n  const handleSelect = (node, e) => {\n    selectedNodes.value = e.checkedNodes;\n    if (treeCheckedDataSource.value.length > 0) {\n      treeCheckedDataSource.value = [];\n    }\n  };\n\n  const handleChange = (value) => {\n    checkStrictly.value = false;\n    if (value == '2') {\n      checkStrictly.value = true;\n      treeData.value = deptTreeData.value;\n      checkedKeys.value = deptTreeCheckedDataSource.value;\n      treeCheckedDataSource.value = deptTreeCheckedDataSource.value;\n    } else if (value == '6') {\n      treeData.value = stationTreeData.value;\n      checkedKeys.value = stationTreeCheckedDataSource.value;\n      treeCheckedDataSource.value = stationTreeCheckedDataSource.value;\n    }\n  };\n\n  const saveBizData = async (data) => {\n    let list = [] as any;\n    const isMenu = formState.type === 'menu';\n    if (treeCheckedDataSource.value?.length > 0) {\n      list = unref(treeCheckedDataSource);\n    } else {\n      unref(selectedNodes).forEach((item) => {\n        if (isMenu && item.nodeKind === 'permission') {\n          list.push({ permissionId: item.id });\n        } else if (isDataPermission(formState.type)) {\n          list.push(item.id);\n        } else if (!isMenu) {\n          list.push({ authId: item.id });\n        }\n      });\n    }\n    // 数据权限\n    if (isDataPermission(formState.type)) {\n      await RoleApi.saveDataPermission({\n        id: formState.id,\n        roleId: formState.roleId,\n        dataScope: data.dataScope,\n        dataScopeOrgIds: data.dataScope == '2' || data.dataScope == '6' ? list : [],\n      });\n      message.success(t('common.saveSuccessText'));\n      return;\n    }\n    // 非数据权限\n    const params = { roleId: formState.roleId, list: list } as any;\n    if (isMenu) {\n      await RoleApi.createPermissionBatch(params);\n    } else {\n      params.authKind = formState.type;\n      await RoleApi.createAuthorizeBatch(params);\n    }\n    message.success(t('common.saveSuccessText'));\n  };\n\n  async function handleSubmit() {\n    try {\n      const values = await validate();\n      setDrawerProps({ confirmLoading: true });\n      await saveBizData(values);\n      closeDrawer();\n      emit('success');\n    } finally {\n      setDrawerProps({ confirmLoading: false });\n    }\n  }\n</script>\n<style lang=\"less\" scoped>\n  :deep(.data-auth-tree .w-full) {\n    border-right: 1px solid #d9d9d9;\n    border-left: 1px solid #d9d9d9;\n  }\n</style>\n"],"names":["createData","params","defHttp","updateData","saveData","updateStatus","id","status","updateBatchSort","deleteData","getData","getNextSort","parentId","getTree","getPage","createPermissionBatch","createAuthorizeBatch","getPermissionList","roleId","getAuthorizeList","authKind","saveDataPermission","getDataPermissionByRoleId","columns","record","h","Switch","checked","__async","newStatus","message","useMessage","RoleApi.updateStatus","searchForm","getFormSchema","type","values","t","useI18n","treeRef","ref","formState","reactive","title","treeTitle","isUpdate","checkedKeys","treeCheckedDataSource","deptTreeCheckedDataSource","stationTreeCheckedDataSource","treeData","deptTreeData","stationTreeData","treeTypeData","checkStrictly","dataAuthClass","labelWidth","registerForm","setProps","validate","resetFields","setFieldsValue","useForm","getBizTreeData","data","getTreeData","getOrgTreeData","getPostTreeData","isDataPermission","stationTree","CommonApi.getStationTree","result","initSelectNodes","dataPermission","dataScopeOrgIds","RoleApi.getPermissionList","RoleApi.getAuthorizeList","keys","item","key","initTreeTitle","initBizClass","registerDrawer","setDrawerProps","closeDrawer","useDrawerInner","bizTreeData","permission","RoleApi.getDataPermissionByRoleId","unref","__spreadProps","__spreadValues","selectedNodes","handleSelect","node","e","handleChange","value","saveBizData","list","isMenu","_a","RoleApi.saveDataPermission","RoleApi.createPermissionBatch","RoleApi.createAuthorizeBatch","handleSubmit","emit"],"mappings":"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"}