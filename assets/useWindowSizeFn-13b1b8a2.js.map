{"version":3,"file":"useWindowSizeFn-13b1b8a2.js","sources":["../../packages/hooks/src/useWindowSizeFn.ts"],"sourcesContent":["import { type AnyFunction } from '@vben/types';\nimport { tryOnMounted, tryOnUnmounted, useDebounceFn } from '@vueuse/core';\n\ninterface UseWindowSizeOptions {\n  wait?: number;\n  once?: boolean;\n  immediate?: boolean;\n  listenerOptions?: AddEventListenerOptions | boolean;\n}\n\nfunction useWindowSizeFn(fn: AnyFunction, options: UseWindowSizeOptions = {}) {\n  const { wait = 150, immediate } = options;\n  let handler = () => {\n    fn();\n  };\n  const handleSize = useDebounceFn(handler, wait);\n  handler = handleSize;\n\n  const start = () => {\n    if (immediate) {\n      handler();\n    }\n    window.addEventListener('resize', handler);\n  };\n\n  const stop = () => {\n    window.removeEventListener('resize', handler);\n  };\n\n  tryOnMounted(() => {\n    start();\n  });\n\n  tryOnUnmounted(() => {\n    stop();\n  });\n  return { start, stop };\n}\n\nexport { useWindowSizeFn, type UseWindowSizeOptions };\n"],"names":["useWindowSizeFn","fn","options","wait","immediate","handler","useDebounceFn","start","stop","tryOnMounted","tryOnUnmounted"],"mappings":"+CAUA,SAASA,EAAgBC,EAAiBC,EAAgC,GAAI,CAC5E,KAAM,CAAE,KAAAC,EAAO,IAAK,UAAAC,CAAA,EAAcF,EAClC,IAAIG,EAAU,IAAM,CACfJ,GAAA,EAGKI,EADSC,EAAcD,EAASF,CAAI,EAG9C,MAAMI,EAAQ,IAAM,CACdH,GACMC,IAEH,OAAA,iBAAiB,SAAUA,CAAO,CAAA,EAGrCG,EAAO,IAAM,CACV,OAAA,oBAAoB,SAAUH,CAAO,CAAA,EAG9C,OAAAI,EAAa,IAAM,CACXF,GAAA,CACP,EAEDG,EAAe,IAAM,CACdF,GAAA,CACN,EACM,CAAE,MAAAD,EAAO,KAAAC,EAClB"}