{"version":3,"file":"taskAssignRuleForm-a40563e3.js","sources":["../../src/api/bpm/taskAssignRule/index.ts","../../src/views/bpm/manage/taskAssignRule/taskAssignRuleForm.vue"],"sourcesContent":["import { defHttp } from '/@/utils/http/axios';\n\nexport type TaskAssignVO = {\n  id: number;\n  modelId: string;\n  processDefinitionId: string;\n  taskDefinitionKey: string;\n  taskDefinitionName: string;\n  options: string[];//分配\n  type: number;//分配类型\n  ccId: number;\n  ccOptions: string[];//抄送\n  ccType: number;//抄送类型\n};\n\n// 表单API\nexport enum BpmTaskAssignRuleApi {\n  GetTaskAssignRuleList = '/bpm/task-assign-rule/list',\n  CreateTaskAssignRule = '/bpm/task-assign-rule/create',\n  UpdateTaskAssignRule = '/bpm/task-assign-rule/update',\n  CreateTaskCcRule = '/bpm/task-cc-rule/create',\n  UpdateTaskCcRule = '/bpm/task-cc-rule/update',\n}\n\n\nexport const getTaskAssignRuleList = async (params) => {\n  const requestParams = { url: BpmTaskAssignRuleApi.GetTaskAssignRuleList, params };\n  return defHttp.get<any>(requestParams, { isOnlyResult: true });\n};\n\nexport const createTaskAssignRule = async (data: TaskAssignVO) => {\n  const requestParams = { url: BpmTaskAssignRuleApi.CreateTaskAssignRule, data };\n  return defHttp.post<any>(requestParams, {});\n};\n\nexport const updateTaskAssignRule = async (data: TaskAssignVO) => {\n  const requestParams = { url: BpmTaskAssignRuleApi.UpdateTaskAssignRule, data };\n  return defHttp.put<any>(requestParams, {});\n};\n\nexport const createTaskCcRule = async (data: TaskAssignVO) => {\n  const requestParams = { url: BpmTaskAssignRuleApi.CreateTaskCcRule, data };\n  return defHttp.post<any>(requestParams, {});\n};\n\nexport const updateTaskCcRule = async (data: TaskAssignVO) => {\n  const requestParams = { url: BpmTaskAssignRuleApi.UpdateTaskCcRule, data };\n  return defHttp.put<any>(requestParams, {});\n};\n","<template>\n  <Dialog\n    :title=\"title\"\n    v-model:visible=\"modalVisible\"\n    :width=\"props.width\"\n    :height=\"props.height\"\n  >\n    <el-form\n      class=\"task-assign-rule-form\"\n      ref=\"formRef\"\n      :model=\"formData\"\n      :rules=\"formRules\"\n      label-width=\"80px\"\n    >\n      <el-form-item label=\"任务名称\" prop=\"taskDefinitionName\">\n        <el-input v-model=\"formData.taskDefinitionName\" disabled placeholder=\"请输入流标标识\" />\n      </el-form-item>\n      <el-form-item label=\"任务标识\" prop=\"taskDefinitionKey\">\n        <el-input v-model=\"formData.taskDefinitionKey\" disabled placeholder=\"请输入任务标识\" />\n      </el-form-item>\n      <el-form-item label=\"规则类型\" prop=\"type\">\n        <a-select\n          v-model:value=\"formData.type\"\n          :options=\"typeOptions\"\n          allowClear\n          style=\"width: 100%\"\n        />\n      </el-form-item>\n      <el-form-item v-if=\"formData.type === 10\" label=\"指定角色\" prop=\"roleIds\">\n        <a-select\n          mode=\"multiple\"\n          v-model:value=\"formData.roleIds\"\n          :options=\"roleOptions\"\n          allowClear\n          :fieldNames=\"fieldNames\"\n          style=\"width: 100%\"\n        />\n      </el-form-item>\n      <el-form-item\n        v-if=\"formData.type === 20 || formData.type === 21\"\n        label=\"指定部门\"\n        prop=\"deptIds\"\n        span=\"24\"\n      >\n        <el-tree-select\n          ref=\"treeRef\"\n          v-model=\"formData.deptIds\"\n          :data=\"deptTreeOptions\"\n          :props=\"defaultProps\"\n          empty-text=\"加载中，请稍后\"\n          multiple\n          node-key=\"id\"\n          show-checkbox\n          check-strictly\n          check-on-click-node\n        />\n      </el-form-item>\n      <el-form-item v-if=\"formData.type === 22\" label=\"指定岗位\" prop=\"postIds\" span=\"24\">\n        <el-tree-select\n          ref=\"treeRef\"\n          v-model=\"formData.postIds\"\n          :data=\"postTreeOptions\"\n          :props=\"defaultProps\"\n          empty-text=\"加载中，请稍后\"\n          multiple\n          node-key=\"id\"\n          show-checkbox\n        />\n      </el-form-item>\n      <el-form-item\n        v-if=\"formData.type === 30 || formData.type === 31 || formData.type === 32\"\n        label=\"指定用户\"\n        prop=\"userIds\"\n        span=\"24\"\n      >\n        <a-select\n          v-model:value=\"formData.userIds\"\n          mode=\"multiple\"\n          show-search\n          allow-clear\n          placeholder=\"请选择用户\"\n          style=\"width: 100%\"\n          :fieldNames=\"fieldNames\"\n          :options=\"userOptions\"\n          :filter-option=\"filterOption\"\n        />\n      </el-form-item>\n      <el-form-item v-if=\"formData.type === 40\" label=\"指定用户组\" prop=\"userGroupIds\">\n        <a-select\n          v-model=\"formData.userGroupIds\"\n          :options=\"userGroupOptions\"\n          :fieldNames=\"fieldNames\"\n          mode=\"multiple\"\n          allowClear\n          style=\"width: 100%\"\n        />\n      </el-form-item>\n      <el-form-item v-if=\"formData.type === 50\" label=\"指定脚本\" prop=\"scripts\">\n        <a-select\n          v-model=\"formData.scripts\"\n          :options=\"taskAssignScriptDictDatas\"\n          mode=\"multiple\"\n          allowClear\n          style=\"width: 100%\"\n        />\n      </el-form-item>\n    </el-form>\n\n    <!-- 操作按钮 -->\n    <template #footer>\n      <el-button :disabled=\"formLoading\" type=\"primary\" @click=\"submitForm\">确 定</el-button>\n      <el-button @click=\"modalVisible = false\">取 消</el-button>\n    </template>\n  </Dialog>\n</template>\n<script lang=\"ts\" setup>\n  import Dialog from '@/components/Framework/Modal/Dialog.vue';\n  import { DICT_TYPE, getIntDictOptions } from '@/utils/dict';\n  import { defaultProps, handleTree } from '@/utils/tree';\n  import { ref, reactive, onMounted, watch } from 'vue';\n  import { useMessage } from '/@/hooks/web/useMessage';\n  import { useI18n } from 'vue-i18n';\n  import * as TaskAssignRuleApi from '@/api/bpm/taskAssignRule';\n  import * as RoleApi from '@/api/bpm/system/role';\n  import * as DeptApi from '@/api/bpm/system/dept';\n  import * as PostApi from '@/api/bpm/system/post';\n  import * as UserApi from '@/api/bpm/system/user';\n  import * as UserGroupApi from '@/api/bpm/userGroup';\n\n  defineOptions({ name: 'BpmTaskAssignRuleForm' });\n  const emit = defineEmits(['update:visible', 'success']); // 定义 success 事件，用于操作成功后的回调\n  const { t } = useI18n(); // 国际化\n  const message = useMessage(); // 消息弹窗\n\n  const props = defineProps({\n    visible: Boolean, // 是否显示弹框\n    title: String, // 弹框标题\n    width: { type: Number, default: 750 }, // 弹框宽度\n    height: { type: Number, default: 500 }, // 弹框高度\n    modelId: { type: String, default: '' },\n    row: { type: Object, default: null },\n  });\n  \n  const title = ref(null);\n  const modalVisible = ref(false);\n  const dialogVisible = ref(false); // 弹窗的是否展示\n  const formLoading = ref(false); // 表单的加载中：1）修改时的数据加载；2）提交的按钮禁用\n  const formData = ref({\n    type: Number(undefined),\n    modelId: '',\n    category: '',// cc / assign\n    options: [],\n    roleIds: [],\n    deptIds: [],\n    postIds: [],\n    userIds: [],\n    userGroupIds: [],\n    scripts: [],\n  });\n  const formRules = reactive({\n    type: [{ required: true, message: '规则类型不能为空', trigger: 'change' }],\n    roleIds: [{ required: true, message: '指定角色不能为空', trigger: 'change' }],\n    deptIds: [{ required: true, message: '指定部门不能为空', trigger: 'change' }],\n    postIds: [{ required: true, message: '指定岗位不能为空', trigger: 'change' }],\n    userIds: [{ required: true, message: '指定用户不能为空', trigger: 'change' }],\n    userGroupIds: [{ required: true, message: '指定用户组不能为空', trigger: 'change' }],\n    scripts: [{ required: true, message: '指定脚本不能为空', trigger: 'change' }],\n  });\n  const formRef = ref(); // 表单 Ref\n  const roleOptions = ref<RoleApi.RoleVO[]>([]); // 角色列表\n  const deptOptions = ref<DeptApi.DeptVO[]>([]); // 部门列表\n  const deptTreeOptions = ref(); // 部门树\n  const postOptions = ref<PostApi.PostVO[]>([]); // 岗位列表\n  const postTreeOptions = ref(); // 岗位树\n  const userOptions = ref<UserApi.UserVO[]>([]); // 用户列表\n  const userGroupOptions = ref<UserGroupApi.UserGroupVO[]>([]); // 用户组列表\n  const taskAssignScriptDictDatas = getIntDictOptions(DICT_TYPE.BPM_TASK_ASSIGN_SCRIPT);\n  const typeOptions = ref([]);\n  const fieldNames = ref({ label: 'name', value: 'id', options: 'options' });\n\n  /** 打开弹窗 */\n  const open = async (modelId: string, row: TaskAssignRuleApi.TaskAssignVO, options, category) => {\n    if(category == 'cc'){\n      title.value = '修改抄送规则';\n    }else{\n      title.value = '修改任务规则';\n    }\n    modalVisible.value = true;\n    emit('update:visible', true);\n    // 1. 先重置表单\n    resetForm();\n\n    typeOptions.value = getIntDictOptions(DICT_TYPE.BPM_TASK_ASSIGN_RULE_TYPE);\n\n    // 2. 再设置表单\n    formData.value = {\n      ...row,\n      modelId: modelId,\n      category: category,\n      options: [],\n      roleIds: [],\n      deptIds: [],\n      postIds: [],\n      userIds: [],\n      userGroupIds: [],\n      scripts: [],\n    };\n\n    // 获得角色列表\n    roleOptions.value = options.role; // await RoleApi.getSimpleRoleList();\n    // 获得部门列表\n    deptOptions.value = options.dept; // await DeptApi.getSimpleDeptList();\n    deptTreeOptions.value = handleTree(deptOptions.value, 'id');\n    // 获得岗位列表\n    postOptions.value = options.post; // await PostApi.getSimplePostList();\n    postTreeOptions.value = handleTree(postOptions.value, 'id');\n\n    // 获得用户列表\n    userOptions.value = options.user; // await UserApi.getSimpleUserList();\n    // 获得用户组列表\n    userGroupOptions.value = options.userGroup; // await UserGroupApi.getSimpleUserGroupList();\n\n    // 将 options 赋值到对应的 roleIds 等选项\n    if (row.type === 10) {\n      formData.value.roleIds.push(...row.options);\n    } else if (row.type === 20 || row.type === 21) {\n      formData.value.deptIds.push(...row.options);\n    } else if (row.type === 22) {\n      formData.value.postIds.push(...row.options);\n    } else if (row.type === 30 || row.type === 31 || row.type === 32) {\n      formData.value.userIds.push(...row.options);\n    } else if (row.type === 40) {\n      formData.value.userGroupIds.push(...row.options);\n    } else if (row.type === 50) {\n      formData.value.scripts.push(...row.options);\n    }\n  };\n\n  /** 提交表单 */\n  const submitForm = async () => {\n    // 校验表单\n    if (!formRef.value) return;\n    debugger;\n    const valid = await formRef.value.validate();\n    if (!valid) return;\n\n    // 构建表单\n    const form = {\n      ...formData.value,\n      taskDefinitionName: undefined,\n    };\n    // 将 roleIds 等选项赋值到 options 中\n    if (form.type === 10) {\n      form.options = form.roleIds;\n    } else if (form.type === 20 || form.type === 21) {\n      form.options = form.deptIds;\n    } else if (form.type === 22) {\n      form.options = form.postIds;\n    } else if (form.type === 30 || form.type === 31 || form.type === 32) {\n      form.options = form.userIds;\n    } else if (form.type === 40) {\n      form.options = form.userGroupIds;\n    } else if (form.type === 50) {\n      form.options = form.scripts;\n    }\n    form.roleIds = undefined;\n    form.deptIds = undefined;\n    form.postIds = undefined;\n    form.userIds = undefined;\n    form.userGroupIds = undefined;\n    form.scripts = undefined;\n\n    // 提交请求\n    formLoading.value = true;\n    try {\n      const data = form as unknown as TaskAssignRuleApi.TaskAssignVO;\n      if(form.category == 'assign'){\n        if (!data.id) {\n          await TaskAssignRuleApi.createTaskAssignRule(data);\n          message.success(t('common.createSuccess'));\n        } else {\n          await TaskAssignRuleApi.updateTaskAssignRule(data);\n          message.success(t('common.updateSuccess'));\n        }\n      }else{\n        if (!data.id) {\n          await TaskAssignRuleApi.createTaskCcRule(data);\n          message.success(t('common.createSuccess'));\n        } else {\n          await TaskAssignRuleApi.updateTaskCcRule(data);\n          message.success(t('common.updateSuccess'));\n        }\n      }\n\n      \n      // 发送操作成功的事件\n      emit('success');\n    } finally {\n      formLoading.value = false;\n      modalVisible.value = false;\n    }\n  };\n\n  /** 重置表单 */\n  const resetForm = () => {\n    formRef.value?.resetFields();\n  };\n\n  const filterOption = (input: string, option: any) => {\n    return option.name.toLowerCase().indexOf(input.toLowerCase()) >= 0;\n  };\n\n  watch(\n    () => props.visible,\n    (newValue) => {\n      modalVisible.value = newValue;\n      if (newValue == true) {\n        open(props.modelId, props.row, {});\n      }\n    },\n  );\n\n  onMounted(async () => {\n    modalVisible.value = props.visible; // 根据传入参数控制Dialog显示\n    typeOptions.value = getIntDictOptions(DICT_TYPE.BPM_TASK_ASSIGN_RULE_TYPE);\n  });\n\n  defineExpose({ open, resetForm, submitForm }); // 提供 open 方法，用于打开弹窗\n</script>\n<style lang=\"less\" scoped>\n  .task-assign-rule-form {\n    :deep(.ant-select-selection-placeholder) {\n      text-align: left;\n    }\n    :deep(.ant-select-selection-item) {\n      text-align: left;\n    }\n  }\n</style>\n"],"names":["getTaskAssignRuleList","params","__async","requestParams","defHttp","createTaskAssignRule","data","updateTaskAssignRule","createTaskCcRule","updateTaskCcRule","t","useI18n","message","useMessage","title","ref","modalVisible","formLoading","formData","formRules","reactive","formRef","roleOptions","deptOptions","deptTreeOptions","postOptions","postTreeOptions","userOptions","userGroupOptions","taskAssignScriptDictDatas","getIntDictOptions","DICT_TYPE","typeOptions","fieldNames","open","modelId","row","options","category","emit","resetForm","__spreadProps","__spreadValues","handleTree","submitForm","form","TaskAssignRuleApi.updateTaskAssignRule","TaskAssignRuleApi.createTaskAssignRule","TaskAssignRuleApi.updateTaskCcRule","TaskAssignRuleApi.createTaskCcRule","_a","filterOption","input","option","watch","props","newValue","onMounted","__expose"],"mappings":"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"}