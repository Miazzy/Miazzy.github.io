{"version":3,"file":"EchartPillarChart-9aa5a33e.js","sources":["../../src/components/Framework/Chart/EchartPillarChart.vue"],"sourcesContent":["<!--\n * @Description: 发电统计柱状图\n * @Date: 2023-02-08\n * @FilePath: \\web\\src\\components\\common\\powerPillarChart.vue\n-->\n<template>\n  <div\n    :style=\"`width:${typeof props.width == 'number' ? props.width + 'px' : props.width}; height:${\n      typeof props.height == 'number' ? props.height + 'px' : props.height\n    }; background-color: ${props.backgroundColor || 'transparent'};`\"\n  >\n    <div\n      v-show=\"!noData\"\n      :id=\"`chart-pillar-container${random}`\"\n      :style=\"`width:${typeof props.width == 'number' ? props.width + 'px' : props.width}; height:${\n        typeof props.height == 'number' ? props.height + 'px' : props.height\n      }; background-color: ${props.backgroundColor || 'transparent'};`\"\n    >\n    </div>\n    <NoData v-if=\"noData\" />\n  </div>\n</template>\n<script lang=\"ts\" setup>\n  import { ref, onMounted, onUnmounted, watch, nextTick, computed } from 'vue';\n  import * as echarts from 'echarts';\n  import NoData from '/@/components/Framework/Chart/NoData.vue';\n\n  const random = parseInt(Math.random() * 10000000);\n  // 定义属性\n  const props = defineProps({\n    data: { type: Array },\n    width: { type: [Number, String], default: 600 },\n    height: { type: [Number, String], default: 300 },\n    colors: {\n      type: Array,\n      default: [\n        ['#1890ff', '#18c8ff'],\n        ['#e59837', '#fae895'],\n        ['#078C5D', '#68E4B8'],\n      ] as any[],\n    },\n    name: { type: Array, default: [] },\n    legendData: { type: Array },\n    rotate: { type: Number, default: 0 },\n    fixed: { type: Number, default: 2 },\n    tipsFormat: { type: Function, default: null },\n    backgroundColor: { type: String, default: 'transparent' },\n    tipsBgColor: { type: String, default: '' },\n    tipsTextColor: { type: String, default: '' },\n    axisColor: { type: String, default: 'rgba(170, 221, 255, .8)' },\n    axisWidth: { type: String, default: '0.2' },\n    xAxisLabelInterval: { type: [Number, Function, String], default: 0 }, // 坐标轴刻度标签的显示间隔，在类目轴中有效，默认0强制显示所有标签，auto采用标签不重叠的策略间隔显示标签\n    dataZoomDisabled: { type: Boolean, default: true }, // 坐标轴滑动和缩放是否禁用\n    dataZoomMaxValueSpan: { type: Number, default: 12 }, // 坐标轴缩放显示最大个数\n    dataZoomDefaultValueRange: { type: Array, default: [] }, // 坐标轴默认显示范围\n  });\n\n  // 设置柱和折线的颜色\n  const barColor = props.colors?.[0]?.length === 2 ? props.colors[0] : ['#1890ff', '#18c8ff'];\n  const lineColor1 = props.colors?.[1]?.length === 2 ? props.colors[1] : ['#E59837', '#FAE895'];\n  const lineColor2 = props.colors?.[2]?.length === 2 ? props.colors[2] : ['#078C5D', '#68E4B8'];\n\n  const barData = ref([]);\n  const categories = ref([]);\n  const lineData = ref([]);\n  const cnameList = ref([]);\n  const pillarOption = ref({});\n\n  const noData = computed(() => {\n    if (props.data?.barData?.length || props.data?.lineData?.length) {\n      return false;\n    } else {\n      return true;\n    }\n  });\n\n  const handleOptions = () => {\n    pillarOption.value = {\n      backgroundColor: new echarts.graphic.LinearGradient(0, 0, 0, 1, [\n        {\n          offset: 0,\n          color: 'rgba(255,255,255,0.01)',\n        },\n        {\n          offset: 0.4,\n          color: 'rgba(255,255,255,0.01)',\n        },\n        {\n          offset: 0.6,\n          color: 'rgba(255,255,255,0.01)',\n        },\n        {\n          offset: 1,\n          color: 'rgba(255,255,255,0.01)',\n        },\n      ]),\n      xAxis: {\n        type: 'category',\n        nameTextStyle: {\n          color: '#333', //  字体颜色\n          fontSize: 26, //  字体大小\n          fontWeight: 'bolder',\n          padding: [10, -800, 66, 0], //标题位置调整 上 右 下 左\n        },\n        splitLine: {\n          show: false, //网格线\n        },\n        axisTick: {\n          show: false, //是否展示刻度线\n          inside: false, //刻度线朝内还是朝外\n        },\n        axisLine: {\n          //坐标轴轴线相关设置\n          show: ' ', //是否显示坐标轴轴线\n          onZero: ' ', //X 轴或者 Y 轴的轴线是否在另一个轴的 0 刻度\n          onZeroAxisIndex: '12', //当有双轴时，可以用这个属性手动指定，在哪个轴的 0 刻度上\n          symbol: ['none', 'none'], //轴线两边的箭头\n          symbolSize: [10, 10], //轴线两边的箭头的大小，第一个数字表示宽度（垂直坐标轴方向），第二个数字表示高度（平行坐标轴方向）\n          lineStyle: {\n            color: props.axisColor, //坐标轴线线的颜色\n            width: props.axisWidth, //坐标轴线线宽\n          },\n        },\n        axisLabel: {\n          color: 'rgba(255, 255, 255, 0.6)', // 设置文本颜色\n          fontSize: 14, // 设置字体大小\n          fontFamily: 'Arial', // 设置字体样式\n          interval: props.xAxisLabelInterval,\n          rotate: props.rotate,\n        },\n        data: [],\n      },\n      yAxis: [\n        {\n          type: 'value',\n          splitLine: {\n            show: true, //网格线\n            lineStyle: {\n              color: props.axisColor, //坐标轴线线的颜色\n              width: props.axisWidth, //坐标轴线线宽\n            },\n          },\n          axisLine: {\n            //坐标轴轴线相关设置\n            show: ' ', //是否显示坐标轴轴线\n            onZero: ' ', //X 轴或者 Y 轴的轴线是否在另一个轴的 0 刻度\n            onZeroAxisIndex: '12', //当有双轴时，可以用这个属性手动指定，在哪个轴的 0 刻度上\n            symbol: ['none', 'none'], //轴线两边的箭头\n            symbolSize: [10, 10], //轴线两边的箭头的大小，第一个数字表示宽度（垂直坐标轴方向），第二个数字表示高度（平行坐标轴方向）\n            lineStyle: {\n              color: props.axisColor, //坐标轴线线的颜色\n              width: props.axisWidth, //坐标轴线线宽\n            },\n          },\n          axisLabel: {\n            color: 'rgba(255, 255, 255, 0.6)', // 设置文本颜色\n            fontSize: 14, // 设置字体大小\n            fontFamily: 'Arial', // 设置字体样式\n          },\n        },\n        {\n          type: 'value',\n          splitLine: {\n            show: false,\n          },\n          axisLabel: {\n            color: 'rgba(255, 255, 255, 0.6)', // 设置文本颜色\n            fontSize: 14, // 设置字体大小\n            fontFamily: 'Arial', // 设置字体样式\n          },\n          axisLine: {\n            lineStyle: {\n              color: 'transparent',\n            },\n          },\n        },\n      ],\n      tooltip: {\n        trigger: 'axis',\n        align: 'left',\n        textStyle: {\n          color: props.tipsTextColor ? props.tipsTextColor : '#fff', //设置文字颜色\n        },\n        extraCssText: '100px;',\n        backgroundColor: props.tipsBgColor ? props.tipsBgColor : 'rgb(50,175,255, 15%)',\n        borderColor: 'transparent',\n        // appendToBody: true,\n        formatter: function (params) {\n          if (props.tipsFormat != null && typeof props.tipsFormat == 'function') {\n            return props.tipsFormat(params);\n          } else {\n            const units = props.data.units;\n            const name = cnameList.value || props.name;\n            let first = '';\n            if (params?.length > 0) {\n              first =\n                params[0].value || params[0].value === 0\n                  ? `${name[0]}：${params[0].value} ${units[0] || ''}`\n                  : `${name[0]}：--`;\n            }\n            const namelabel = params[0].name + '<br />';\n            try {\n              let second = '';\n              if (params?.length > 2) {\n                second =\n                  params[2].value || params[2].value === 0\n                    ? `<br /> ${name[1]}：${params[2].value} ${units[1] || ''}`\n                    : `<br /> ${name[1]}：--`;\n              }\n              let third = '';\n              if (params?.length > 3) {\n                third =\n                  params[3].value || params[3].value === 0\n                    ? `<br /> ${name[2]}：${params[3].value} ${units[2] || ''}`\n                    : `<br /> ${name[2]}：--`;\n              }\n              return namelabel + first + second + third;\n            } catch (e) {\n              return first;\n            }\n          }\n        },\n        position: function (point, params, dom, rect, size) {\n          var x = 0; // x坐标位置\n          var y = 0; // y坐标位置\n          var pointX = point[0];\n          var pointY = point[1];\n          var boxWidth = size.contentSize[0];\n          var boxHeight = size.contentSize[1];\n          if (boxWidth > pointX) {\n            x = pointX + 10;\n          } else {\n            x = pointX - boxWidth - 10;\n          }\n          if (boxHeight > pointY) {\n            y = 5;\n          } else {\n            y = pointY - boxHeight;\n          }\n          return [x, y];\n        },\n      },\n      series: [\n        {\n          data: [],\n          type: 'custom',\n          showBackground: true,\n          name: cnameList.value.length ? cnameList.value[0] : null,\n          color: new echarts.graphic.LinearGradient(\n            0,\n            1,\n            0,\n            0,\n            [\n              { offset: 0, color: barColor[0] },\n              { offset: 1, color: barColor[1] },\n            ],\n            false,\n          ),\n          backgroundStyle: {\n            width: '100%',\n            color: `${barColor[0]}15`,\n          },\n          renderItem: function (params, api) {\n            const location = api.coord([api.value(0), api.value(1)]);\n            return {\n              type: 'group',\n              children: [\n                {\n                  type: 'positiveShape',\n                  shape: {\n                    api,\n                    x: location[0],\n                    y: location[1],\n                    xAxisPoint: api.coord([api.value(0), 0]),\n                  },\n                  backgroundStyle: {\n                    width: '100%',\n                    color: `${barColor[0]}15`,\n                  },\n                  style: {\n                    fill: `${barColor[0]}95`,\n                  },\n                },\n                {\n                  type: 'rightShape',\n                  shape: {\n                    api,\n                    x: location[0],\n                    y: location[1],\n                    xAxisPoint: api.coord([api.value(0), 0]),\n                  },\n                  style: {\n                    fill: `${barColor[0]}40`,\n                  },\n                },\n                {\n                  // 顶部\n                  type: 'topShape',\n                  shape: {\n                    api,\n                    x: location[0],\n                    y: location[1],\n                    xAxisPoint: api.coord([api.value(0), 0]),\n                  },\n                  style: {\n                    fill: `${barColor[0]}70`,\n                  },\n                },\n              ],\n            };\n          },\n          itemStyle: {\n            // 每根柱子颜色设置\n            color: function (params) {\n              const colorList = [\n                new echarts.graphic.LinearGradient(\n                  0,\n                  1,\n                  0,\n                  0,\n                  [\n                    { offset: 0, color: barColor[1] },\n                    { offset: 1, color: barColor[0] },\n                  ],\n                  false,\n                ),\n              ];\n              return colorList[0];\n            },\n          },\n          areaStyle: {\n            color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [\n              {\n                offset: 0,\n                color: barColor[1],\n              },\n              {\n                offset: 1,\n                color: barColor[0],\n              },\n            ]),\n          },\n        },\n        {\n          data: [],\n          type: 'bar',\n          name: cnameList.value.length ? cnameList.value[0] : null,\n          showBackground: true,\n          barWidth: 20,\n          backgroundStyle: {\n            width: '100%',\n            color: `${barColor[0]}10`,\n          },\n          itemStyle: {\n            // 每根柱子颜色设置\n            color: function (params) {\n              const colorList = [\n                new echarts.graphic.LinearGradient(\n                  0,\n                  1,\n                  0,\n                  0,\n                  [\n                    { offset: 0, color: barColor[0] },\n                    { offset: 1, color: barColor[1] },\n                  ],\n                  false,\n                ),\n              ];\n              return colorList[0];\n            },\n          },\n          areaStyle: {\n            color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [\n              {\n                offset: 0,\n                color: barColor[0],\n              },\n              {\n                offset: 1,\n                color: barColor[1],\n              },\n            ]),\n          },\n          label: {\n            show: false,\n            position: 'top',\n            formatter: (value) => {\n              value.value = value.value;\n              value.data = value.data;\n              return value.value == '0.00' ? '' : `${parseFloat(value.value).toFixed(props.fixed)}`;\n            },\n            color: '#FFD200',\n          },\n        },\n        {\n          // 新增的折线图配置\n          data: [],\n          type: 'line',\n          name: cnameList.value.length ? cnameList.value[1] : null,\n          color: new echarts.graphic.LinearGradient(\n            0,\n            1,\n            0,\n            0,\n            [\n              { offset: 0, color: lineColor1[0] },\n              { offset: 1, color: lineColor1[1] },\n            ],\n            false,\n          ),\n          lineStyle: {\n            width: 2, // 折线宽度\n            color: new echarts.graphic.LinearGradient(\n              0,\n              1,\n              0,\n              0,\n              [\n                { offset: 0, color: lineColor1[0] },\n                { offset: 1, color: lineColor1[1] },\n              ],\n              false,\n            ),\n          },\n          areaStyle: {\n            color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [\n              { offset: 0, color: `${lineColor1[0]}30` },\n              { offset: 1, color: `${lineColor1[1]}10` },\n            ]),\n          },\n          yAxisIndex: 1,\n        },\n        {\n          // 新增的折线图配置\n          data: [],\n          type: 'line',\n          name: cnameList.value.length ? cnameList.value[2] : null,\n          color: new echarts.graphic.LinearGradient(\n            0,\n            1,\n            0,\n            0,\n            [\n              { offset: 0, color: lineColor2[0] },\n              { offset: 1, color: lineColor2[1] },\n            ],\n            false,\n          ),\n          lineStyle: {\n            width: 2, // 折线宽度\n            color: new echarts.graphic.LinearGradient(\n              0,\n              1,\n              0,\n              0,\n              [\n                { offset: 0, color: lineColor2[0] },\n                { offset: 1, color: lineColor2[1] },\n              ],\n              false,\n            ),\n          },\n          areaStyle: {\n            color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [\n              { offset: 0, color: `${lineColor2[0]}30` },\n              { offset: 1, color: `${lineColor2[1]}10` },\n            ]),\n          },\n          yAxisIndex: 1,\n        },\n      ],\n      grid: {\n        containLabel: true,\n        top: 25,\n        left: '1%',\n        right: '1%',\n        bottom: '3%',\n      },\n      legend: {\n        show: true,\n        top: 'top',\n        left: 'right',\n        textStyle: {\n          color: 'rgba(255, 255, 255, 0.6)',\n        },\n        itemWidth: 14,\n        itemHeight: 10,\n      },\n      dataZoom: [\n        {\n          type: 'inside',\n          disabled: props.dataZoomDisabled,\n          xAxisIndex: 0,\n          maxValueSpan: props.dataZoomMaxValueSpan - 1,\n          startValue: props.dataZoomDefaultValueRange[0] || 0,\n          endValue: props.dataZoomDefaultValueRange[1] || props.dataZoomMaxValueSpan - 1,\n        },\n      ],\n    };\n  };\n\n  // 查询初始化信息函数\n  const setupBarShape = async () => {\n    // 绘制正侧面\n    const positiveShape = echarts.graphic.extendShape({\n      shape: {\n        x: 0,\n        y: 0,\n      },\n      buildPath: function (ctx, shape) {\n        const xAxisPoint = shape.xAxisPoint;\n        ctx.moveTo(shape.x + 10, shape.y); //右上\n        ctx.lineTo(shape.x - 10, shape.y); //左上\n        ctx.lineTo(xAxisPoint[0] - 10, xAxisPoint[1]); //左下\n        ctx.lineTo(xAxisPoint[0] + 10, xAxisPoint[1]); //右下\n        ctx.closePath();\n      },\n    });\n\n    // 绘制右侧面\n    const rightShape = echarts.graphic.extendShape({\n      shape: {\n        x: 0,\n        y: 0,\n      },\n      buildPath: function (ctx, shape) {\n        const xAxisPoint = shape.xAxisPoint;\n        ctx.moveTo(shape.x + 15, shape.y - 7.7); // 右上\n        ctx.lineTo(shape.x + 10, shape.y);\n        ctx.lineTo(xAxisPoint[0] + 10, xAxisPoint[1]);\n        ctx.lineTo(xAxisPoint[0] + 15, xAxisPoint[1] - 7.7); //右下\n        ctx.closePath();\n      },\n    });\n\n    // 绘制顶部\n    const topShape = echarts.graphic.extendShape({\n      shape: {\n        x: 0,\n        y: 0,\n      },\n      buildPath: function (ctx, shape) {\n        ctx.moveTo(shape.x + 10, shape.y); //右下\n        ctx.lineTo(shape.x + 15, shape.y - 7.7); //右上\n        ctx.lineTo(shape.x - 5, shape.y - 7.7); //左上\n        ctx.lineTo(shape.x - 10, shape.y); //左下\n        ctx.closePath();\n      },\n    });\n\n    // 注册三个面图形\n    echarts.graphic.registerShape('positiveShape', positiveShape);\n    echarts.graphic.registerShape('rightShape', rightShape);\n    echarts.graphic.registerShape('topShape', topShape);\n  };\n\n  // 获取发电统计数据\n  const setupData = async () => {\n    const chartDom = document.getElementById('chart-pillar-container' + random);\n    if (!chartDom) return;\n    let myChart = echarts.getInstanceByDom(chartDom);\n    if (myChart == undefined) {\n      myChart = echarts.init(chartDom);\n    }\n\n    // 获取统计数据\n    barData.value = props.data.barData;\n    categories.value = props.data.categories;\n    lineData.value = props.data.lineData;\n    cnameList.value = props.name as [];\n    handleOptions();\n\n    // 设置统计数据\n    try {\n      pillarOption.value.xAxis.data = categories.value;\n      pillarOption.value.series[0].data = barData.value;\n      pillarOption.value.series[1].data = barData.value;\n      pillarOption.value.series[2].data = lineData.value?.length > 0 ? lineData.value[0] : [];\n      pillarOption.value.series[3].data = lineData.value?.length > 1 ? lineData.value[1] : [];\n      myChart.setOption(pillarOption.value, true);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const emit = defineEmits(['clickItem']);\n\n  watch(\n    () => props.data,\n    () => {\n      setupData();\n    },\n    {\n      deep: true,\n    },\n  );\n\n  watch(\n    () => props.name,\n    (val) => {\n      setupData();\n    },\n    {\n      deep: true,\n    },\n  );\n\n  watch(\n    () => props.height,\n    () => {\n      setTimeout(() => {\n        const chartDom = document.getElementById('chart-pillar-container' + random);\n        if (chartDom) {\n          const myChart = echarts.getInstanceByDom(chartDom);\n          myChart?.resize();\n        }\n      }, 100);\n    },\n  );\n\n  onMounted(() => {\n    setupBarShape();\n    setupData();\n    nextTick(() => {\n      const chartDom = document.getElementById('chart-pillar-container' + random);\n      if (chartDom) {\n        const myChart = echarts.getInstanceByDom(chartDom);\n\n        myChart?.on('click', (params) => {\n          try {\n            emit('clickItem', params);\n          } catch (error) {\n            //\n          }\n        });\n        /************************ 取消允许阴影点击\n        myChart?.getZr()?.on('click', (params) => {\n          try {\n            const pointInPixel = [params.offsetX, params.offsetY];\n            const pointInGrid = myChart.convertFromPixel({ seriesIndex: 0 }, pointInPixel);\n            const index = pointInGrid[0];\n            const data = props?.data?.barData[index];\n            emit('clickItem', { data, index });\n          } catch (error) {\n            //\n          }\n        }); \n        ************************/\n      }\n    });\n  });\n  onUnmounted(() => {});\n</script>\n<style lang=\"less\" scoped>\n  #chart-pillar-container {\n    z-index: 10000;\n    transform: scaleX(0.85);\n    transform-origin: left;\n    background: rgb(30 30 30 / 2%);\n    text-align: center;\n  }\n</style>\n"],"names":["random","barColor","_b","_a","props","lineColor1","_d","_c","lineColor2","_f","_e","barData","ref","categories","lineData","cnameList","pillarOption","noData","computed","handleOptions","echarts.graphic.LinearGradient","params","units","name","first","namelabel","second","third","e","point","dom","rect","size","x","y","pointX","pointY","boxWidth","boxHeight","api","location","value","setupBarShape","__async","positiveShape","echarts.graphic.extendShape","ctx","shape","xAxisPoint","rightShape","topShape","echarts.graphic.registerShape","setupData","chartDom","myChart","echarts.getInstanceByDom","echarts.init","error","watch","val","onMounted","nextTick","emit","onUnmounted"],"mappings":"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"}