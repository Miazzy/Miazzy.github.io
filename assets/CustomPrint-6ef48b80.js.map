{"version":3,"mappings":"4tBAsBQA,EAAY,IAAYC,EAAA,sBAE5B,MAAMC,EAAe,MAAMC,izBAErBC,EAAM,MAAMC,EAAUH,EAAa,QAAS,CAAE,OAAQI,EAAM,OAAQ,EAC1EF,EAAI,MAAM,iBAAiB,EAE3B,MAAMG,EAAS,EAEPC,EAAA,CACN,UAAWF,EAAM,UACjB,KAAM,OACN,WAAY,GACZ,IAAK,uBACL,MACE,gGACH,EAEDF,EAAI,QAAQ","names":["printPage","__async","printContent","__variableDynamicImportRuntimeHelper","app","createApp","props","nextTick","printJS"],"sources":["../../src/views/po/ticket/components/CustomPrint.vue"],"sourcesContent":["<template>\n  <a-button class=\"print-btn\" @click=\"printPage\">打印</a-button>\n  <div id=\"printContainer\" style=\"display: none\"></div>\n</template>\n<script lang=\"ts\" setup>\n  import { createApp, nextTick } from 'vue';\n  import printJS from 'print-js';\n\n  const props = defineProps({\n    path: {\n      type: String,\n      required: true,\n      default: () => '',\n    },\n    params: Object,\n    printable: {\n      type: String,\n      required: true,\n      default: () => 'printContent',\n    },\n  });\n\n  const printPage = async () => {\n    // 动态导入组件\n    const printContent = await import(`../print/${props.path}.vue`);\n    // 渲染组件到隐藏的容器中\n    const app = await createApp(printContent.default, { params: props.params });\n    app.mount('#printContainer');\n    // 等待DOM更新\n    await nextTick();\n    // 使用print-js进行打印\n    printJS({\n      printable: props.printable,\n      type: 'html',\n      scanStyles: false, // 设置为false时，库不会处理应用于正在打印的html的样式。使用css参数时很有用。\n      css: '/css/customPrint.css',\n      style:\n        '@page { size: A4; margin: 1cm; @bottom-center { content: counter(page)  /  counter(pages);} }', // 自定义打印样式\n    });\n    // 清理，卸载组件\n    app.unmount();\n  };\n</script>\n<style scoped>\n  .print-btn {\n    margin-left: 10px;\n  }\n</style>\n"],"file":"assets/CustomPrint-6ef48b80.js"}