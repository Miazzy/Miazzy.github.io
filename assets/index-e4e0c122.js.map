{"version":3,"mappings":"qRAE0BA,EAAqB,IAAMC,EAAA,WAAO,0BAAkB,EAAC,sKAC/CD,EAAqB,IAAMC,EAAA,WAAO,gCAAwB,EAAC,yOAC9DD,EAAqB,IAAMC,EAAA,WAAO,6BAAqB,EAAC,4KAC3DD,EAAqB,IAAMC,EAAA,WAAO,0BAAkB,EAAC,6NACrDD,EAAqB,IAAMC,EAAA,WAAO,0BAAkB,EAAC,6NAChDD,EAAqB,IAAMC,EAAA,WAAO,+BAAuB,EAAC,uOAClF,MAAMC,EAAcF,EAAqB,IAAMC,EAAA,WAAO,2BAAmB,EAAC,kMCF3EE,EAAaC,EAAI,EAAK,EAEbC,IAAgB,CAC7BC,KAAM,gBACNC,MAAMC,EAAG,CAAEC,OAAM,EAAG,CAClB,SAASC,EAAkBC,EAAMC,EAAQ,CACvCT,EAAWU,MAAQD,CACrB,CAEA,MAAO,IAAAE,EAAAC,EAAAC,EACYP,EAAK,oBAAsB,IAAG,0BAAAQ,YAAAH,GAAAI,EAAA,MAAAD,YAAA,CAAAE,EAAA,OAAAL,IAAAM,EAAA,0BAECV,CAAiBI,UAAAZ,EAAA,WAAAY,EAAAI,aAAAJ,EAAA,0DAAAA,QAAAO,EAAA,UAI/ClB,EAAWU,KAAK,GAAAI,YAAA,CAAAH,EAAA,uCAInC,CACH,CACF,CAAC,ECfCQ,EAAejB,EAAgB,CAC7B,KAAM,gBACN,WAAY,CAAE,cAAAkB,EAAe,KAAAC,CAAK,EAClC,OAAQ,CACN,KAAM,CAACC,EAAU,CAAE,WAAAC,CAAW,CAAC,EAAIC,EAAU,EAEtC,OACL,SAAAF,EACA,WAAAC,CAAA,CAEJ,CACF,CAAC,8CAvBDE,EAGM,qCAFJ,QAAoCC,EAAA,KAAAA,EAAA,MAAzBC,EAAsB,iBACjC,CAAAhB,EAAAiB,EAAA","names":["createAsyncComponent","__vitePreload","ThemePicker","spinStatus","ref","defineComponent","name","setup","_","attrs","handleThemeChange","mode","status","value","_createVNode","BasicDrawer","_mergeProps","default","Divider","_createTextVNode","AppDarkModeToggle","Spin","_sfc_main","SettingDrawer","Icon","register","openDrawer","useDrawer","_resolveComponent","_cache","_ctx","_component_Icon"],"sources":["../../src/layouts/default/setting/components/index.ts","../../src/layouts/default/setting/SettingDrawer.tsx","../../src/layouts/default/setting/index.vue"],"sourcesContent":["import { createAsyncComponent } from '/@/utils/factory/createAsyncComponent';\n\nexport const TypePicker = createAsyncComponent(() => import('./TypePicker.vue'));\nexport const ThemeColorPicker = createAsyncComponent(() => import('./ThemeColorPicker.vue'));\nexport const SettingFooter = createAsyncComponent(() => import('./SettingFooter.vue'));\nexport const SwitchItem = createAsyncComponent(() => import('./SwitchItem.vue'));\nexport const SelectItem = createAsyncComponent(() => import('./SelectItem.vue'));\nexport const InputNumberItem = createAsyncComponent(() => import('./InputNumberItem.vue'));\nexport const ThemePicker = createAsyncComponent(() => import('./ThemePicker.vue'));\n","import { defineComponent, ref } from 'vue';\nimport { BasicDrawer } from '/@/components/Drawer/index';\nimport { Divider, Spin } from 'ant-design-vue';\nimport { ThemePicker } from './components';\nimport { AppDarkModeToggle } from '/@/components/Application';\n\nconst spinStatus = ref(false);\n\nexport default defineComponent({\n  name: 'SettingDrawer',\n  setup(_, { attrs }) {\n    function handleThemeChange(mode, status) {\n      spinStatus.value = status;\n    }\n\n    return () => (\n      <BasicDrawer {...attrs} title=\"项目配置\" width={330} class=\"setting-drawer\">\n        {<Divider>主题</Divider>}\n        {<AppDarkModeToggle class=\"mx-auto\" onChange={handleThemeChange} />}\n        {<ThemePicker />}\n        <Divider />\n        <div style=\"width: 100%; height: calc(50vh - 260px); \"></div>\n        <Spin spinning={spinStatus.value}>\n          <div style=\"width: 100%;\"></div>\n        </Spin>\n      </BasicDrawer>\n    );\n  },\n});\n","<template>\n  <div @click=\"openDrawer(true)\">\n    <Icon icon=\"ion:settings-outline\" />\n    <SettingDrawer @register=\"register\" />\n  </div>\n</template>\n<script lang=\"ts\">\n  import { defineComponent } from 'vue';\n  import SettingDrawer from './SettingDrawer';\n  import Icon from '@/components/Icon/Icon.vue';\n\n  import { useDrawer } from '/@/components/Drawer';\n\n  export default defineComponent({\n    name: 'SettingButton',\n    components: { SettingDrawer, Icon },\n    setup() {\n      const [register, { openDrawer }] = useDrawer();\n\n      return {\n        register,\n        openDrawer,\n      };\n    },\n  });\n</script>\n"],"file":"assets/index-e4e0c122.js"}