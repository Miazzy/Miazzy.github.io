{"version":3,"file":"index-4a9126bb.js","sources":["../../src/views/bi/elec/gridCapacity/data.ts","../../src/views/bi/elec/gridCapacity/index.vue"],"sourcesContent":["import { defHttp } from '/@/utils/http/axios';\nimport { FormSchema } from '@/components/Form';\nimport dayjs from 'dayjs';\nimport { ref } from 'vue';\nimport { useUserStore } from '/@/store/modules/user';\nimport { BasicColumn } from '/@/components/Table';\n\nenum Api {\n  getOrgInfoUrl = '/bi/common/org/info',\n  getStationUrl = '/baseset/common/list-station',\n\n  getGridCapacityUrl = '/bi/grid/org/capacity',\n  getStationCapacityUrl = '/bi/grid/station/capacity',\n\n  getChartUrl = '/bi/grid/capacity/echar',\n\n  exportOrgExcelUrl = '/bi/grid/export-org-capacity',\n\n  exportStationExcelUrl = '/bi/grid/export-station-capacity',\n}\n\n//导出\nexport const exportStationExcel = (params) =>\n  defHttp.post(\n    { url: Api.exportStationExcelUrl, params, responseType: 'blob' },\n    { isReturnNativeResponse: true },\n  );\n\nexport const exportOrgExcel = (params) =>\n  defHttp.post(\n    { url: Api.exportOrgExcelUrl, params, responseType: 'blob' },\n    { isReturnNativeResponse: true },\n  );\n\nexport const getOrgInfoList = (params) =>\n  defHttp.get({ url: Api.getOrgInfoUrl, params }, { isOnlyResult: true });\n\nexport const getStationData = (params) => {\n  return defHttp.post({ url: Api.getStationUrl, params });\n};\n\n//公司维度并网容量\nexport const getGridCapacityData = (params) =>\n  defHttp.get({ url: Api.getGridCapacityUrl, params }, {});\n\nexport const getStationCapacityData = (params) =>\n  defHttp.get({ url: Api.getStationCapacityUrl, params }, {});\n\nexport const getChartData = (params) => defHttp.get({ url: Api.getChartUrl, params }, {});\n\n// 配置表格表头字段\nexport const summaryColumns = ref([\n  {\n    title: '所属公司',\n    dataIndex: 'name',\n    width: 150,\n    resizable: true,\n  },\n  {\n    title: '地面',\n    dataIndex: 'dm',\n    children: [\n      { title: '光伏并网容量(MW)', dataIndex: 'dmConnectCapacity', width: 100, resizable: true },\n      { title: '数量(座)', dataIndex: 'dmStationNum', width: 100, resizable: true },\n      { title: '占比(%)', dataIndex: 'dmRate', width: 100, resizable: true },\n    ],\n  },\n  {\n    title: '渔光',\n    dataIndex: 'yg',\n    children: [\n      { title: '光伏并网容量(MW)', dataIndex: 'ygConnectCapacity', width: 100, resizable: true },\n      { title: '数量(座)', dataIndex: 'ygStationNum', width: 100, resizable: true },\n      { title: '占比(%)', dataIndex: 'ygRate', width: 100, resizable: true },\n    ],\n  },\n  {\n    title: '农光',\n    dataIndex: 'ng',\n    children: [\n      { title: '光伏并网容量(MW)', dataIndex: 'ngConnectCapacity', width: 100, resizable: true },\n      { title: '数量(座)', dataIndex: 'ngStationNum', width: 100, resizable: true },\n      { title: '占比(%)', dataIndex: 'ngRate', width: 100, resizable: true },\n    ],\n  },\n  {\n    title: '分布式',\n    dataIndex: 'fbs',\n    children: [\n      { title: '光伏并网容量(MW)', dataIndex: 'fbsConnectCapacity', width: 100, resizable: true },\n      { title: '数量(座)', dataIndex: 'fbsStationNum', width: 100, resizable: true },\n      { title: '占比(%)', dataIndex: 'fbsRate', width: 100, resizable: true },\n    ],\n  },\n  {\n    title: '小计',\n    dataIndex: 'total',\n    children: [\n      { title: '光伏并网容量(MW)', dataIndex: 'totalConnectCapacity', width: 100, resizable: true },\n      { title: '数量(座)', dataIndex: 'totalNum', width: 100, resizable: true },\n    ],\n  },\n]);\n\nexport const detailColumns = (params): BasicColumn[] => {\n  const dataColumns = [\n    {\n      title: '所属公司',\n      dataIndex: 'orgName',\n      width: 150,\n      customCell: (record) => ({\n        rowSpan: record.rowOrgSpan,\n      }),\n      resizable: true,\n    },\n    {\n      title: '电站名称',\n      dataIndex: 'stationName',\n      width: 150,\n      customCell: (record) => ({\n        rowSpan: record.rowStationSpan,\n      }),\n      resizable: true,\n    },\n    {\n      title: '期数',\n      dataIndex: 'periodName',\n      width: 150,\n      resizable: true,\n    },\n    { title: '电站类型', dataIndex: 'stationType', width: 150, resizable: true },\n    { title: '是否全容量', dataIndex: 'isGridAll', width: 150, resizable: true },\n    { title: '建设规模(MW)', dataIndex: 'buildScale', width: 150, resizable: true },\n    // { title: '指标容量(MW)', dataIndex: 'indexCapacity', width: 150, resizable: true },\n    { title: '光伏并网容量(MW)', dataIndex: 'connectCapacity', width: 150, resizable: true },\n    { title: '储能并网容量(MW)', dataIndex: 'accessCapacity', width: 150, resizable: true },\n  ];\n  if (!useUserStore().isMultiOrganization) {\n    dataColumns.shift();\n  }\n  return dataColumns;\n};\n\nexport const getFormSearchSchemas = (params): FormSchema[] => {\n  return [\n    {\n      field: `dateCycle`,\n      label: `时间维度`,\n      component: 'Select',\n      required: true,\n      defaultValue: 'year',\n      componentProps: {\n        options: [\n          { value: 'year', label: '年份' },\n          { value: 'month', label: '月份' },\n          { value: 'day', label: '自然日' },\n        ],\n      },\n    },\n    {\n      field: `yearValue`,\n      label: `年份`,\n      component: 'YearPicker',\n      defaultValue: dayjs(new Date()).format('YYYY'),\n      componentProps: {\n        format: 'YYYY',\n        valueFormat: 'YYYY',\n        style: { width: '100%' },\n      },\n      show: ({ values }) => {\n        return values.dateCycle == 'year';\n      },\n      dynamicRules: ({ values }) => {\n        return values.dateCycle == 'year' ? [{ required: true, message: '年份必填' }] : [];\n      },\n    },\n    {\n      field: `[startMonth, endMonth]`,\n      label: `月份`,\n      component: 'RangePicker',\n      componentProps: {\n        picker: 'month',\n        format: 'YYYY-MM',\n        valueFormat: 'YYYY-MM',\n        style: { width: '100%' },\n        placeholder: ['开始月份', '结束月份'],\n      },\n      show: ({ values }) => {\n        return values.dateCycle == 'month';\n      },\n      dynamicRules: ({ values }) => {\n        return values.dateCycle == 'month' ? [{ required: true, message: '月份必填' }] : [];\n      },\n    },\n    {\n      field: `[startDate, endDate]`,\n      label: `时间段`,\n      component: 'RangePicker',\n      componentProps: {\n        format: 'YYYY-MM-DD',\n        style: { width: '100%' },\n        valueFormat: 'YYYY-MM-DD',\n        placeholder: ['开始时间', '结束时间'],\n      },\n      show: ({ values }) => {\n        return values.dateCycle == 'day';\n      },\n      dynamicRules: ({ values }) => {\n        return values.dateCycle == 'day' ? [{ required: true, message: '时间段必填' }] : [];\n      },\n    },\n    {\n      field: `orgId`,\n      label: `所属公司`,\n      component: 'ApiSelect',\n      componentProps: {\n        options: [],\n        api: getOrgInfoList,\n        placeholder: '请选择所属公司',\n      },\n      show: useUserStore().isMultiOrganization,\n    },\n    {\n      field: `stationId`,\n      label: `电站名称`,\n      component: 'ApiSelect',\n      componentProps: {\n        options: [],\n        api: async () => {\n          const sts = await getStationData({});\n          const map: any = [];\n          sts.result.forEach((e) => {\n            map.push({ value: e.powerStationId, label: e.powerStationName });\n          });\n\n          return map;\n        },\n        placeholder: '请输入电站名称',\n      },\n    },\n  ];\n};\n","<template>\n  <div class=\"tab-model\">\n    <div class=\"tab-button-div\">\n      <BasicForm @register=\"formRegister\" />\n    </div>\n    <div id=\"grid-table-tab-content\" class=\"tab-table-div\">\n      <a-tabs v-model:activeKey=\"activeKey\" @change=\"handleTabsChange\">\n        <a-tab-pane v-if=\"useUserStore().isMultiOrganization\" key=\"summary\" tab=\"统计报表\">\n          <div class=\"tab-content\">\n            <div class=\"tab-content-top\">\n              <BasicTable @register=\"registerTable\" @resize-column=\"(w, col) => (col.width = w)\">\n                <template #toolbar>\n                  <a-button class=\"yellow-btn\" :preIcon=\"IconEnum.EXPORT\" @click=\"handleExport\">{{\n                    t('common.action.export')\n                  }}</a-button>\n                </template>\n              </BasicTable>\n            </div>\n            <div class=\"tab-content-bottom\">\n              <div v-if=\"isShowChart\" class=\"chart\">\n                <div id=\"left-chart\" class=\"left-chart\">\n                  <h3>项目规模分布(MW)</h3>\n                  <NtgaleChart\n                    id=\"omChart\"\n                    :width=\"450\"\n                    :height=\"350\"\n                    :data=\"NtgaleData\"\n                    showLabel\n                    v-if=\"NtgaleData.length\"\n                    :roseType=\"false\"\n                  />\n                </div>\n                <div id=\"right-chart\" class=\"right-chart\">\n                  <h3>在运电站规模</h3>\n                  <EchartLineBarChart\n                    :data=\"pchartData\"\n                    :width=\"`40rem`\"\n                    :height=\"`20rem`\"\n                    :category=\"pchartData.categories\"\n                    :name=\"pchartData.seriesName\"\n                    :rotate=\"0\"\n                    ybgcolor=\"#c0c0c060\"\n                    txtColor=\"#c0c0c0\"\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </a-tab-pane>\n        <a-tab-pane key=\"detail\" tab=\"电站明细\" force-render>\n          <BasicTable @register=\"registerStationTable\" @resize-column=\"(w, col) => (col.width = w)\">\n            <template #toolbar>\n              <a-button class=\"yellow-btn\" :preIcon=\"IconEnum.EXPORT\" @click=\"handleExport\">{{\n                t('common.action.export')\n              }}</a-button>\n            </template>\n          </BasicTable>\n        </a-tab-pane>\n      </a-tabs>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\" setup>\n  import { onMounted, ref, reactive, unref } from 'vue';\n  import { useMessage } from '/@/hooks/web/useMessage';\n  import { useI18n } from '/@/hooks/web/useI18n';\n  import { IconEnum } from '/@/enums/appEnum';\n  import { BasicForm, useForm } from '@/components/Form';\n  import { BasicTable, useTable } from '/@/components/Table';\n  import { exportExcelFile } from '/@/utils/file/download';\n  import * as DateUtil from '/@/utils/dateUtil';\n  import {\n    summaryColumns,\n    detailColumns,\n    getGridCapacityData,\n    getStationCapacityData,\n    getChartData,\n    getFormSearchSchemas,\n    exportStationExcel,\n    exportOrgExcel,\n  } from './data';\n  import NtgaleChart from '/@/components/Framework/Chart/NtgaleChart.vue';\n  import EchartLineBarChart from '/@/components/Framework/Chart/EchartLineBarChart.vue';\n  import { useUserStore } from '/@/store/modules/user';\n  import { useRouter } from 'vue-router';\n\n  const { t } = useI18n();\n  const { createConfirm, createMessage } = useMessage();\n  const router = useRouter();\n  const { currentRoute } = router;\n  const route = unref(currentRoute);\n  const query = route.query;\n  const activeKey = ref('summary');\n  const queryParam: any = reactive({});\n  const isShowChart = ref(true);\n\n  const NtgaleData = ref([]);\n\n  const pchartData = ref({\n    barData: [[]],\n    lineData: [[]],\n    // colors: [\n    //   ['#488FF6', '#60D1F3'],\n    //   ['#078C5D', '#68E4B8'],\n    //   ['#E59837', '#FAE895'],\n    //   '#f39c12',\n    //   '#f39c12',\n    // ],\n    categories: [],\n    seriesName: [['在运规模(MW)'], ['个数(座)']],\n  });\n\n  onMounted(() => {\n    if (query) {\n      const values = getFieldsValue();\n      //针对穿透赋值\n      if (query.startDate) {\n        values.dateCycle = query.dateType;\n        values.startMonth = query.startDate;\n        values.endMonth = query.endDate;\n        setFieldsValue(values);\n      }\n      if (query.stationId) {\n        values.stationId = query.stationId;\n        setFieldsValue(values);\n      }\n\n      if (query.activeKey) {\n        activeKey.value = query.activeKey;\n      }\n      if (!useUserStore().isMultiOrganization) {\n        activeKey.value = 'detail';\n      }\n    }\n    // setTimeout(() => {\n    //   reload();\n    //   reloadStation();\n    // }, 100);\n  });\n\n  const handleTabsChange = (activeKey) => {\n    if (activeKey === 'summary') {\n      reload();\n      isShowChart.value = true;\n    } else if (activeKey === 'detail') {\n      reloadStation();\n      isShowChart.value = false;\n    }\n  };\n\n  const [formRegister, { resetFields, getFieldsValue, setFieldsValue }] = useForm({\n    labelWidth: 120,\n    baseColProps: { span: 8 },\n    actionColOptions: {\n      span: 24,\n    },\n    autoAdvancedLine: 1,\n    schemas: getFormSearchSchemas({}),\n    compact: true,\n    showAdvancedButton: true,\n    resetButtonOptions: {\n      onClick: async () => {\n        await resetFields();\n        reload();\n        reloadStation();\n      },\n    },\n    submitFunc: () => {\n      reload();\n      reloadStation();\n      return Promise.resolve();\n    },\n  });\n\n  //汇总报表\n  const [registerTable, { reload }] = useTable({\n    api: async () => {\n      const params = getFieldsValue();\n      //针对穿透赋值后存在时分秒\n      if (params.dateCycle == 'month') {\n        params.startMonth = DateUtil.formatToDate(params.startMonth, 'YYYY-MM');\n        params.endMonth = DateUtil.formatToDate(params.endMonth, 'YYYY-MM');\n        setFieldsValue(params);\n      }\n      Object.assign(queryParam, params);\n      let dataObj = await getGridCapacityData(queryParam);\n      let charData = await getChartData(params);\n      if (charData.result) {\n        NtgaleData.value = charData.result.pieData;\n        pchartData.value.lineData[0] = charData.result.lineData;\n        pchartData.value.barData[0] = charData.result.barData;\n        pchartData.value.categories = charData.result.categories;\n      }\n      return dataObj.result;\n    },\n    target: '#grid-table-tab-content',\n    targetTabKey: 'summary',\n    targetTabValue: activeKey,\n    columns: summaryColumns,\n    useSearchForm: false,\n    bordered: true,\n    pagination: false,\n    showTableSetting: false,\n    maxHeight: 220,\n    scroll: { y: 220 },\n    tableSetting: { fullScreen: true },\n    showIndexColumn: true,\n  });\n\n  //电站明细\n  const [registerStationTable, { reload: reloadStation }] = useTable({\n    api: async () => {\n      const params = getFieldsValue();\n      //针对穿透赋值后存在时分秒\n      if (params.dateCycle == 'month') {\n        params.startMonth = DateUtil.formatToDate(params.startMonth, 'YYYY-MM');\n        params.endMonth = DateUtil.formatToDate(params.endMonth, 'YYYY-MM');\n        setFieldsValue(params);\n      }\n      Object.assign(queryParam, params);\n      let dataObj = await getStationCapacityData(queryParam);\n      return dataObj.result;\n    },\n    target: '#grid-table-tab-content',\n    targetTabKey: 'detail',\n    targetTabValue: activeKey,\n    columns: detailColumns({}),\n    useSearchForm: false,\n    bordered: true,\n    pagination: false,\n    showTableSetting: false,\n    tableSetting: { fullScreen: true },\n    showIndexColumn: true,\n    afterFetch: function (data) {\n      const count = {};\n      for (let index = 0; index < data.length; index++) {\n        const element = data[index];\n        if (count[element.orgId]) {\n          count[element.orgId]++;\n        }\n        if (count[element.stationId]) {\n          count[element.stationId]++;\n        }\n\n        if (!count[element.orgId]) {\n          count[element.orgId] = 1;\n        }\n        if (!count[element.stationId]) {\n          count[element.stationId] = 1;\n        }\n      }\n      for (let index = 0; index < data.length; index++) {\n        const element = data[index];\n        for (const key in count) {\n          if (element.orgId === key) {\n            element.rowOrgSpan = count[key];\n            count[key] = 0;\n          }\n          if (element.stationId === key) {\n            element.rowStationSpan = count[key];\n            count[key] = 0;\n          }\n        }\n      }\n      return data;\n    },\n  });\n\n  //导出\n  function handleExport() {\n    createConfirm({\n      title: '提示',\n      iconType: 'warning',\n      content: '确定要导出所有记录？',\n      async onOk() {\n        Object.assign(queryParam, getFieldsValue());\n        if (activeKey.value == 'summary') {\n          queryParam.filename = '并网容量统计.xls';\n          queryParam.excelList = summaryColumns;\n          await exportOrgExcel(queryParam).then((res) => {\n            exportExcelFile(res?.data, queryParam.filename);\n          });\n        } else if (activeKey.value == 'detail') {\n          queryParam.filename = '并网容量电站明细.xls';\n          queryParam.excelList = detailColumns({});\n          await exportStationExcel(queryParam).then((res) => {\n            exportExcelFile(res?.data, queryParam.filename);\n          });\n        }\n        // queryParam.filename = null;\n        // queryParam.excelList = null;\n        createMessage.success(t('common.exportSuccessText'));\n      },\n    });\n  }\n</script>\n<style lang=\"less\" scoped>\n  @import '/@/design/biz/bizList.less';\n\n  :deep(.ant-tabs-nav) {\n    margin-bottom: 5px;\n  }\n\n  .tab-content {\n    display: flex;\n    flex-direction: column;\n    height: calc(100vh - 150px);\n\n    .tab-content-top {\n      flex: 0 0 45%;\n      overflow: auto;\n    }\n\n    .tab-content-bottom {\n      display: flex;\n      flex: 0 0 55%;\n      justify-content: space-between;\n      padding: 5px;\n\n      .chart {\n        display: flex;\n        justify-content: space-between;\n        width: 100%;\n\n        .left-chart,\n        .right-chart {\n          width: calc(50% - 15px);\n        }\n      }\n    }\n  }\n\n  .tab-model {\n    height: 100%;\n    padding: 10px;\n  }\n</style>\n"],"names":["exportStationExcel","params","defHttp","exportOrgExcel","getOrgInfoList","getStationData","getGridCapacityData","getStationCapacityData","getChartData","summaryColumns","ref","detailColumns","dataColumns","record","useUserStore","getFormSearchSchemas","dayjs","values","__async","sts","map","e","t","useI18n","createConfirm","createMessage","useMessage","router","useRouter","currentRoute","query","unref","activeKey","queryParam","reactive","isShowChart","NtgaleData","pchartData","onMounted","getFieldsValue","setFieldsValue","handleTabsChange","reload","reloadStation","formRegister","resetFields","useForm","registerTable","useTable","DateUtil.formatToDate","dataObj","charData","registerStationTable","data","count","index","element","key","handleExport","res","exportExcelFile"],"mappings":"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"}