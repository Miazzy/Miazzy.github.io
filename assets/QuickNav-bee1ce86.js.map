{"version":3,"file":"QuickNav-bee1ce86.js","sources":["../../src/views/workbench/QuickNav.vue"],"sourcesContent":["<template>\n  <a-card style=\"height: 326px\" title=\"快捷导航\" :bordered=\"false\">\n    <template #extra>\n      <Icon icon=\"ion:settings-outline\" :size=\"17\" @click=\"handleOpenDialog()\" />\n    </template>\n    <div class=\"card-content\">\n      <a-carousel :after-change=\"onChange\" dotsClass=\"carousel-dots\">\n        <div class=\"nav-page\" v-for=\"(pageItem, pageIndex) in menuBoard\" :key=\"pageIndex\">\n          <div class=\"nav-item-container\">\n            <div class=\"nav-item\" v-for=\"(n, index) in pageItem\" :key=\"index\" @click=\"toPath(n)\">\n              <div class=\"nav-icon-box\" :style=\"{ backgroundColor: colors[index] }\">\n                <Icon :icon=\"n.icon || 'ion:logo-windows'\" :size=\"32\" />\n              </div>\n              <div class=\"nav-label\">{{ n.name }}</div>\n            </div>\n          </div>\n        </div>\n      </a-carousel>\n    </div>\n  </a-card>\n\n  <DataSelectDialog\n    title=\"快捷导航设置\"\n    v-model:visible=\"openDialog\"\n    :value=\"formState.menuBoardDetail\"\n    :tdata=\"menuTreeData\"\n    :tfields=\"{ key: 'value', title: 'label' }\"\n    :width=\"800\"\n    :height=\"600\"\n    :scolumns=\"menuTableColumn\"\n    @cancel=\"receiverCancel\"\n    @confirm=\"receiverConfirm\"\n    :max=\"30\"\n  />\n</template>\n<script lang=\"ts\" setup>\n  import Icon from '@/components/Icon/Icon.vue';\n  import { ref, reactive, onMounted } from 'vue';\n  import DataSelectDialog from '@/components/Framework/Modal/DataSelectDialog.vue';\n  import { TreeSelectProps, message } from 'ant-design-vue';\n  import { addTabPage } from '@/utils/route';\n  import { getMenuTreeData, saveMenuBoard, getMenuBoard, getMenuBoardResult } from './data';\n  import { dialogMaskInit } from '@/utils/mask';\n\n  const openDialog = ref(false);\n  const menuTreeData = ref<TreeSelectProps['treeData']>();\n  const menuTableColumn = ref([\n    {\n      title: '所属模块',\n      dataIndex: '',\n      customRender: ({ record }) => {\n        return record.parent_node.label;\n      },\n    },\n    { title: '功能名称', dataIndex: 'title' },\n  ]);\n\n  const menuBoard = ref([]);\n\n  const formState: any = reactive({\n    menuBoardDetail: [],\n  });\n\n  const colors = [\n    '#FBCC5A',\n    '#3FD3A6',\n    '#F28E27',\n    '#38BBFE',\n    '#4799F5',\n    '#F57C47',\n    '#6880FA',\n    '#58DD96',\n    '#4799F5',\n    '#379EFF',\n  ];\n\n  onMounted(async () => {\n    queryMenuBoardByUserId();\n  });\n\n  //当前登录人的数据设置\n  const queryMenuBoardByUserId = async () => {\n    await getMenuBoardResult({}).then((rsp) => {\n      if (rsp) {\n        menuBoard.value = rsp;\n      }\n    });\n\n    await getMenuBoard({}).then((rsp) => {\n      if (rsp) {\n        formState.menuBoardDetail = [];\n        rsp.forEach((e) => {\n          formState.menuBoardDetail.push({\n            value: e.parentId,\n            label: e.name,\n            parentId: e.parentId,\n            name: e.name,\n            icon: e.icon,\n            url: e.url,\n          });\n        });\n      }\n    });\n  };\n\n  //查询树\n  const queryIndexTreeData = async () => {\n    const typeSubList = await getMenuTreeData({});\n    menuTreeData.value = dig(typeSubList.result, true);\n  };\n\n  function dig(data, selectIndex) {\n    const list: TreeSelectProps['treeData'] = [];\n    for (let i = 0; i < data.length; i++) {\n      const item = data[i];\n      if (item.openWindowModel == 'hidden') {\n        continue;\n      }\n      const treeNode: TreeSelectProps['treeData'][number] = {\n        label: item.name,\n        value: item.id,\n        parentId: item.parentId,\n        disabled: selectIndex ? item.nodeKind != 'fun' : false,\n      };\n\n      if (item.children && item.children.length > 0) {\n        treeNode.children = dig(item.children, selectIndex);\n      }\n      list.push(treeNode);\n    }\n    return list;\n  }\n\n  //打开\n  const handleOpenDialog = () => {\n    dialogMaskInit();\n    openDialog.value = true;\n    queryIndexTreeData();\n  };\n\n  //清空\n  const receiverCancel = () => {\n    openDialog.value = false; // 关闭弹框\n  };\n\n  //保存\n  const receiverConfirm = (nodeList, allList) => {\n    openDialog.value = false;\n    let dataList: any = [];\n    if (nodeList && nodeList.length > 0) {\n      nodeList.forEach((e) => {\n        dataList.push({\n          menuId: e.value,\n        });\n      });\n    }\n    saveMenuBoard(dataList).then(() => {\n      message.success('操作成功');\n      queryMenuBoardByUserId();\n    });\n  };\n\n  const onChange = (current: number) => {\n    console.log(current);\n  };\n\n  const toPath = (item) => {\n    addTabPage(item.url, item.label);\n  };\n</script>\n<style lang=\"less\" scoped>\n  .card-content {\n    height: 278px;\n\n    .nav-page {\n      height: 278px;\n      padding: 16px 0;\n    }\n\n    .nav-item-container {\n      display: flex;\n      flex-wrap: wrap;\n      width: 100%;\n    }\n\n    .nav-item {\n      width: 20%;\n      height: 88px;\n\n      &:first-child {\n        margin-bottom: 45px;\n      }\n\n      .nav-icon-box {\n        width: 58px;\n        height: 58px;\n        margin: 0 auto;\n        padding: 13px 0;\n        border-radius: 16px;\n        text-align: center;\n        cursor: pointer;\n      }\n\n      .nav-label {\n        width: 100%;\n        padding-top: 16px;\n        overflow: hidden;\n        font-size: 14px;\n        line-height: 1;\n        text-align: center;\n        text-overflow: ellipsis;\n        white-space: nowrap;\n        cursor: pointer;\n      }\n    }\n\n    :deep(.carousel-dots) {\n      bottom: 0;\n    }\n\n    :deep(.carousel-dots > li) {\n      width: 32px;\n      height: 4px;\n      border-radius: 2px;\n\n      button {\n        background-color: transparent;\n      }\n\n      &.slick-active {\n        background-color: #1890ff;\n\n        button {\n          background-color: transparent;\n        }\n      }\n    }\n  }\n</style>\n"],"names":["openDialog","ref","menuTreeData","menuTableColumn","record","menuBoard","formState","reactive","colors","onMounted","__async","queryMenuBoardByUserId","getMenuBoardResult","rsp","getMenuBoard","e","queryIndexTreeData","typeSubList","getMenuTreeData","dig","data","selectIndex","list","item","treeNode","handleOpenDialog","dialogMaskInit","receiverCancel","receiverConfirm","nodeList","allList","dataList","saveMenuBoard","message","onChange","current","toPath","addTabPage"],"mappings":"+rBA4CQ,MAAAA,EAAaC,EAAI,EAAK,EACtBC,EAAeD,IACfE,EAAkBF,EAAI,CAC1B,CACE,MAAO,OACP,UAAW,GACX,aAAc,CAAC,CAAE,OAAAG,KACRA,EAAO,YAAY,KAE9B,EACA,CAAE,MAAO,OAAQ,UAAW,OAAQ,CAAA,CACrC,EAEKC,EAAYJ,EAAI,CAAA,CAAE,EAElBK,EAAiBC,EAAS,CAC9B,gBAAiB,CAAC,CAAA,CACnB,EAEKC,EAAS,CACb,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,SAAA,EAGFC,EAAU,IAAYC,EAAA,sBACGC,GAAA,EACxB,EAGD,MAAMA,EAAyB,IAAYD,EAAA,sBACzC,MAAME,EAAqB,EAAE,KAAMC,GAAQ,CACrCA,IACFR,EAAU,MAAQQ,EACpB,CACD,EAED,MAAMC,EAAe,EAAE,KAAMD,GAAQ,CAC/BA,IACFP,EAAU,gBAAkB,GACxBO,EAAA,QAASE,GAAM,CACjBT,EAAU,gBAAgB,KAAK,CAC7B,MAAOS,EAAE,SACT,MAAOA,EAAE,KACT,SAAUA,EAAE,SACZ,KAAMA,EAAE,KACR,KAAMA,EAAE,KACR,IAAKA,EAAE,GAAA,CACR,CAAA,CACF,EACH,CACD,CAAA,GAIGC,EAAqB,IAAYN,EAAA,sBACrC,MAAMO,EAAc,MAAMC,EAAgB,CAAA,CAAE,EAC5ChB,EAAa,MAAQiB,EAAIF,EAAY,OAAQ,EAAI,CAAA,GAG1C,SAAAE,EAAIC,EAAMC,EAAa,CAC9B,MAAMC,EAAoC,CAAA,EAC1C,QAAS,EAAI,EAAG,EAAIF,EAAK,OAAQ,IAAK,CAC9B,MAAAG,EAAOH,EAAK,CAAC,EACf,GAAAG,EAAK,iBAAmB,SAC1B,SAEF,MAAMC,EAAgD,CACpD,MAAOD,EAAK,KACZ,MAAOA,EAAK,GACZ,SAAUA,EAAK,SACf,SAAUF,EAAcE,EAAK,UAAY,MAAQ,EAAA,EAG/CA,EAAK,UAAYA,EAAK,SAAS,OAAS,IAC1CC,EAAS,SAAWL,EAAII,EAAK,SAAUF,CAAW,GAEpDC,EAAK,KAAKE,CAAQ,CACpB,CACO,OAAAF,CACT,CAGA,MAAMG,EAAmB,IAAM,CACdC,IACf1B,EAAW,MAAQ,GACAgB,GAAA,EAIfW,EAAiB,IAAM,CAC3B3B,EAAW,MAAQ,EAAA,EAIf4B,EAAkB,CAACC,EAAUC,IAAY,CAC7C9B,EAAW,MAAQ,GACnB,IAAI+B,EAAgB,CAAA,EAChBF,GAAYA,EAAS,OAAS,GACvBA,EAAA,QAASd,GAAM,CACtBgB,EAAS,KAAK,CACZ,OAAQhB,EAAE,KAAA,CACX,CAAA,CACF,EAEWiB,EAAAD,CAAQ,EAAE,KAAK,IAAM,CACjCE,EAAQ,QAAQ,MAAM,EACCtB,GAAA,CACxB,CAAA,EAGGuB,EAAYC,GAAoB,CACpC,QAAQ,IAAIA,CAAO,CAAA,EAGfC,EAAUb,GAAS,CACZc,EAAAd,EAAK,IAAKA,EAAK,KAAK,CAAA"}