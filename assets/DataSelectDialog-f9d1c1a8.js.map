{"version":3,"file":"DataSelectDialog-f9d1c1a8.js","sources":["../../src/components/Framework/Modal/DataSelectDialog.vue"],"sourcesContent":["<template>\n  <Dialog\n    :title=\"title\"\n    :visible=\"modalVisible\"\n    @update:visible=\"updateVisible\"\n    :width=\"props.width\"\n    :height=\"props.height\"\n    @close=\"handleClose\"\n  >\n    <template #default>\n      <div class=\"dialog-content\" :style=\"`height: calc(${props.height}px - 90px)`\">\n        <!-- 左侧分类树 -->\n        <div class=\"category-tree\">\n          <div class=\"category-content\" :style=\"`height: calc(${props.height}px - 130px)`\">\n            <div class=\"category-search-box\" style=\"position: relative\">\n              <span class=\"search-title\" style=\"\">搜索</span>\n              <a-input-search\n                v-model:value=\"searchText\"\n                class=\"search-input\"\n                placeholder=\"请输入搜索内容\"\n                enter-button\n                @change=\"handleSearch\"\n                @search=\"handleSearch\"\n                @keydown.prevent.enter=\"preventEnter\"\n              />\n              <span class=\"search-icon\" style=\"left: 300px\">\n                <Icon icon=\"mdi:arrow-up\" size=\"22\" class=\"rotate-left\" @click=\"handleNode\" />\n              </span>\n              <span class=\"search-icon\" style=\"left: 340px\">\n                <Icon icon=\"material-symbols:delete-outline\" size=\"22\" @click=\"handleDelete\" />\n              </span>\n            </div>\n            <div class=\"tree-value\" :style=\"`height: calc(${props.height}px - 200px);`\">\n              <!-- 基础Tree组件 -->\n              <a-tree\n                v-if=\"searchText.length <= 0\"\n                :tree-data=\"treeData\"\n                show-icon\n                :default-expand-all=\"false\"\n                checkable\n                checkStrictly\n                :selectable=\"false\"\n                v-model:checkedKeys=\"checkedKeys\"\n                @check=\"handleCheck\"\n              >\n                <template #switcherIcon=\"{ switcherCls }\">\n                  <Icon :icon=\"props.ticons.parent\" size=\"14\" :class=\"switcherCls\" />\n                </template>\n                <template #icon=\"{ key, isLeaf }\">\n                  <Icon v-if=\"isLeaf && !isTopNode(key)\" :icon=\"props.ticons.leaf\" size=\"14\" />\n                  <Icon v-if=\"!isLeaf && !isTopNode(key)\" :icon=\"props.ticons.middle\" size=\"14\" />\n                </template>\n              </a-tree>\n\n              <a-table\n                v-if=\"searchText.length > 0\"\n                size=\"small\"\n                :columns=\"scolumns\"\n                :data-source=\"xdataList\"\n                :pagination=\"false\"\n                :scroll=\"{ x: (props.width - 30) / 2, y: props.height - 220 }\"\n                style=\"overflow-x: hidden\"\n                :customRow=\"handleTableClick\"\n              />\n            </div>\n          </div>\n        </div>\n\n        <!-- 右侧表格 -->\n        <div class=\"employee-table\">\n          <div class=\"employee-content\">\n            <div\n              position=\"center\"\n              class=\"layout-content\"\n              :style=\"`height: calc(${props.height}px - 120px);`\"\n            >\n              <div class=\"component-wrap\">\n                  <a-table\n                    size=\"small\"\n                    :columns=\"selectedDataColumns\"\n                    :data-source=\"allNodes\"\n                    :pagination=\"false\"\n                    :scroll=\"{ y: props.height - 190 }\"\n                    :style=\"`height: calc(${props.height}px - 130px);overflow-x: hidden;`\"\n                  >\n                    <template #bodyCell=\"{ record, index, column }\">\n                      <template v-if=\"column.dataIndex === 'index'\">\n                        <span>{{ index + 1 }}</span>\n                      </template>\n                      <template v-else-if=\"isEdit && column.dataIndex === 'sort'\">\n                        <div class=\"sort-cell\">\n                          <div\n                            v-if=\"sortIndex[record[props.tfields.key]]\"\n                            class=\"editable-cell-input-wrapper\"\n                          >\n                            <a-input-number\n                              v-model:value=\"sortIndex[record[props.tfields.key]].index\"\n                              :min=\"1\"\n                              :max=\"allNodes.length\"\n                              size=\"small\"\n                            />\n                            <Icon\n                              icon=\"ant-design:check-outlined\"\n                              size=\"12\"\n                              style=\"margin-left: 4px\"\n                              @click=\"save(record, index)\"\n                            />\n                          </div>\n                          <Icon\n                            v-else\n                            icon=\"ant-design:drag-outlined\"\n                            size=\"12\"\n                            @click=\"edit(record, index)\"\n                          />\n                        </div>\n                      </template>\n                      <template v-else-if=\"isEdit && column.dataIndex === 'action'\">\n                        <a>\n                          <Icon\n                            icon=\"ant-design:delete-filled\"\n                            size=\"12\"\n                            color=\"#ED6F6F\"\n                            @click=\"handleDeleteNode(record, index)\"\n                          />\n                        </a>\n                      </template>\n                      <template v-if=\"column.type === 'select'\">\n                        <a-select\n                          size=\"small\"\n                          style=\"width: 100%\"\n                          v-model:value=\"record[column.dataIndex]\"\n                          allow-clear\n                          :options=\"column.selectOptions\"\n                        />\n                      </template>\n                    </template>\n                  </a-table>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </template>\n\n    <template #footer>\n      <a-button v-if=\"extraFooterBtn\" class=\"btn-margin\" type=\"primary\" @click=\"handleExtra\">{{\n        extraFooterBtn\n      }}</a-button>\n      <a-button v-if=\"isEdit\" class=\"btn-margin\" @click=\"cancel\">取消</a-button>\n      <a-button v-if=\"isEdit\" class=\"btn-margin\" type=\"primary\" @click=\"confirm\">确定</a-button>\n    </template>\n  </Dialog>\n</template>\n\n<script lang=\"ts\" setup>\n  import Dialog from '@/components/Framework/Modal/Dialog.vue';\n  import Icon from '@/components/Icon/Icon.vue';\n  import { ref, defineProps, defineEmits, onMounted, watch, unref, reactive, computed } from 'vue';\n  import { TreeItem } from '@/components/Tree';\n  import { Modal } from 'ant-design-vue';\n  import { SysMessage } from '/@/hooks/web/useMessage';\n  import { getOrganTree } from '/@/api/sys/user';\n  import { message } from 'ant-design-vue';\n  import type { Ref, UnwrapRef } from 'vue';\n  import { cloneDeep } from 'lodash-es';\n\n  const modalVisible = ref(false);\n  const treeData = ref([]);\n  const searchText = ref('');\n  const selectedNode = ref(null);\n  const checkedKeys = ref({});\n  const checkedNodes = ref([]);\n  const allNodes = ref<any>([]);\n  const treeMap = ref<any>();\n  const tdataList = ref<any>([]);\n  const xdataList = ref<any>([]);\n  const searchTableRef = ref<HTMLElement>();\n  type fieldType = { key: String; title: String; dept: String; postion: String };\n  type tIconsType = { parent: String; leaf: String };\n  type messageType = { double: String; delete: String };\n\n  const props = defineProps({\n    visible: Boolean, // 是否显示弹框\n    title: String, // 弹框标题\n    width: { type: Number, default: 700 }, // 弹框宽度\n    height: { type: Number, default: 500 }, // 弹框高度\n    value: { type: Array, default: [] },\n    tdata: { type: Array }, // Tree数据\n    tfields: {\n      type: Object,\n      default: {\n        key: 'id',\n        title: 'title',\n        dept: 'dept',\n        postion: 'postion',\n      } as fieldType,\n    }, // Tree数据的对应字段解析\n    ticons: {\n      type: Object,\n      default: {\n        parent: 'ant-design:down-outlined',\n        middle: 'mingcute:department-line',\n        leaf: 'gridicons:multiple-users',\n      } as tIconsType,\n    },\n    message: {\n      type: Object,\n      default: {\n        none: '当前没有被选数据，无法删除！',\n        double: '该节点已经被选中！',\n        delete: '请您确认是否删除所有勾选节点？',\n      } as messageType,\n    },\n    extraFooterBtn: {\n      type: String,\n      default: '',\n    }, // 自定义的其他操作按钮\n    max: { type: Number, default: 99 }, // 最多可选的数据个数\n    scolumns: {\n      type: Array,\n      default: [\n        { title: '名称', dataIndex: 'title', key: 'title', fixed: true, width: 80 },\n        { title: '公司', dataIndex: 'company', key: 'company', fixed: false, width: 200 },\n        { title: '部门', dataIndex: 'dept', key: 'dept', fixed: false, width: 150 },\n        { title: '岗位', dataIndex: 'postion', key: 'postion', fixed: false, width: 150 },\n      ],\n    },\n    rightColumns: {\n      type: Array,\n      default: [],\n    },\n    isEdit: { type: Boolean, default: true }, // 是否可编辑\n  });\n\n  const emit = defineEmits([\n    'update:visible',\n    'update:value',\n    'cancel',\n    'confirm',\n    'close',\n    'extra',\n  ]); // 定义事件\n\n  const cancel = () => {\n    emit('cancel'); // 发送取消事件\n  };\n\n  const confirm = () => {\n    if (props.max && allNodes.value?.length > props.max) {\n      message.warning(`最多选择${props.max}个！`);\n      return;\n    }\n    const rule = props?.tfields as fieldType;\n    const data = transformRespData(allNodes.value, rule);\n    emit('confirm', data, allNodes.value); // 发送确定事件\n  };\n\n  const handleClose = () => {\n    emit('cancel'); // 发送取消事件\n  };\n\n  const handleExtra = () => {\n    emit('extra');\n  }; // 自定义其他操作按钮事件\n\n  const updateVisible = ($event) => {\n    modalVisible.value = $event;\n    emit('update:visible', false); // 关闭弹框\n  };\n\n  // 判断是否为顶层节点\n  const isTopNode = (key) => {\n    return !!treeMap.value.get(key);\n  };\n\n  const handleSelect = (nodeKey, event) => {\n    const node = event.node;\n    selectedNode.value = node;\n  };\n\n  // const handleNode = () => {\n  //   const snode = selectedNode.value || {};\n  //   console.log('snode', snode);\n  //   if (typeof allNodes.value == 'undefined' || allNodes.value == null) {\n  //     allNodes.value = [];\n  //   }\n  //   const findex = allNodes.value\n  //     ? allNodes.value.findIndex((x) => {\n  //         return (\n  //           x[props.tfields.key] === snode[props.tfields.key] &&\n  //           x[props.tfields.title] === snode[props.tfields.title]\n  //         );\n  //       })\n  //     : -1;\n  //   if (findex < 0) {\n  //     // 将选中节点推入allNodes节点中\n  //     allNodes.value.push(selectedNode.value);\n  //     // 去除掉nodeId相同的节点\n  //     const list = allNodes.value.filter((node, index, list) => {\n  //       const findIndexValue = list.findIndex((x) => {\n  //         return (\n  //           x[props.tfields.key] === node[props.tfields.key] &&\n  //           x[props.tfields.title] === node[props.tfields.title]\n  //         );\n  //       });\n  //       return findIndexValue === index;\n  //     });\n  //     allNodes.value = list;\n  //   } else {\n  //     // message.warning(props.message.double);\n  //     SysMessage.getInstance().warning(props.message.double);\n  //   }\n  //   emit('update:value', allNodes.value);\n  // };\n\n  const handleDelete = () => {\n    if (allNodes.value && allNodes.value.length > 0) {\n      Modal.confirm({\n        title: props.message.delete,\n        wrapClassName: 'dialog-modal-confirm',\n        zIndex: 10010,\n        onOk() {\n          allNodes.value = [];\n          checkedKeys.value.checked = [];\n          checkedNodes.value = [];\n        },\n      });\n    } else {\n      Modal.warning({\n        wrapClassName: 'dialog-modal-warning',\n        zIndex: 10010,\n        title: props.message.none,\n      });\n    }\n  };\n\n  const handleDeleteNode = (item, index) => {\n    allNodes.value = allNodes.value.filter((node, tindex) => tindex !== index);\n    let deletedNode = getCheckedNodesByValues(treeData.value, item[[props.tfields.key]])[0];\n    checkedKeys.value.checked = checkedKeys.value.checked.filter(\n      (node, tindex) => node !== deletedNode.key,\n    );\n    checkedNodes.value = checkedNodes.value.filter((node, tindex) => node.key !== deletedNode.key);\n  };\n\n  // 按tfields生成转换规则\n  const reverseRule = (rule) => {\n    const reversedRule = {};\n    for (const key in rule) {\n      reversedRule[rule[key]] = key;\n    }\n    return reversedRule;\n  };\n\n  // 按tfields的设置转换tree的数据\n  const transformRespData = (data, rule) => {\n    const rules = reverseRule(rule);\n    return data.map((item) => {\n      const newItem = {};\n      for (const key in item) {\n        if (key in rules) {\n          if (rules[key] == 'title' || rules[key] == 'dept' || rules[key] == 'postion') {\n            newItem[rules[key]] = item[key];\n            newItem[key] = item[key];\n          } else if (rules[key] == 'key') {\n            newItem[rules[key]] = parseInt(Math.random() * 100) + '@' + item[key];\n            newItem[key] = item[key];\n          }\n        }\n      }\n      return newItem;\n    });\n  };\n\n  // 按tfields的设置转换tree的数据\n  const transformTableData = (data, rule, flag = 'top', pnode) => {\n    // 获取字段规则\n    const rules = reverseRule(rule);\n    // 数组遍历\n    data.map((item) => {\n      const newObj = {};\n      for (const key in item) {\n        if (key in rules) {\n          if (rules[key] == 'title' || rules[key] == 'dept' || rules[key] == 'postion') {\n            newObj[rules[key]] = item[key];\n            newObj[key] = item[key];\n          } else if (rules[key] == 'id') {\n            newObj[key] = parseInt(Math.random() * 100) + '@' + item[key];\n            newObj[key] = item[key];\n          } else if (rules[key] == 'key') {\n            newObj[rules[key]] = parseInt(Math.random() * 100) + '@' + item[key];\n            newObj[key] = item[key];\n          }\n        }\n        newObj[key] = item[key];\n        if (pnode) {\n          newObj['parent_node'] = pnode;\n        }\n      }\n      treeMap.value.set(item[props.tfields.key], item);\n      tdataList.value.push(newObj);\n      if (item.children && item.children.length > 0) {\n        transformTableData(item.children, rule, 'none', item);\n      }\n    });\n    // 顶级数组去重\n    if (flag == 'top') {\n      const list = tdataList.value.filter((node, index, list) => {\n        const findIndexValue = list.findIndex((x) => {\n          return (\n            x[props.tfields.key] === node[props.tfields.key] &&\n            x[props.tfields.title] === node[props.tfields.title]\n          );\n        });\n        return findIndexValue === index;\n      });\n      tdataList.value = list;\n    }\n  };\n\n  // 按tfields的设置转换tree的数据\n  const transformData = (data, rule) => {\n    const rules = reverseRule(rule);\n    return data.map((item) => {\n      const newItem = {};\n      for (const key in item) {\n        if (key in rules) {\n          if (rules[key] == 'title' || rules[key] == 'dept' || rules[key] == 'postion') {\n            newItem[rules[key]] = item[key];\n            newItem[key] = item[key];\n          } else if (rules[key] == 'id') {\n            newItem[rules[key]] = parseInt(Math.random() * 100) + '@' + item[key];\n            newItem[key] = item[key];\n          } else if (rules[key] == 'key') {\n            newItem[rules[key]] = parseInt(Math.random() * 100) + '@' + item[key];\n            newItem[key] = item[key];\n          }\n        } else {\n          newItem[key] = item[key];\n        }\n      }\n      if (item.children && item.children.length > 0) {\n        newItem.children = transformData(item.children, rule);\n      }\n      return newItem;\n    });\n  };\n\n  // 将数据节点转换为Map\n  const transformMap = (data, rule) => {\n    const treeMap = new Map();\n    data.forEach((item) => {\n      const key = item[rule['key']];\n      treeMap.set(key, item);\n    });\n    return treeMap;\n  };\n\n  const handleSearch = () => {\n    const text = searchText.value ? searchText.value.trim() : '';\n    const list = tdataList.value.filter((node) => {\n      return !node.disabled && node[props.tfields.title].includes(text);\n    });\n    xdataList.value = list;\n    if (text.length === 0) {\n      selectedNode.value = null;\n    }\n  };\n\n  // 表格点击事件\n  const handleTableClick = (record, index) => {\n    const clickFunc = (event) => {\n      // 获取当前点击的行\n      const currentRow = event.currentTarget;\n      // 获取所有兄弟节点\n      const siblingRows = currentRow.parentElement.querySelectorAll('.ant-table-row');\n      // 移除兄弟节点中的 selected 类样式\n      siblingRows.forEach((siblingRow) => {\n        siblingRow.classList.remove('selected');\n      });\n      // 为当前行添加 selected 类样式\n      currentRow.classList.add('selected');\n      // 设置选中的节点\n      selectedNode.value = record;\n    };\n    return {\n      onclick: clickFunc,\n    };\n  };\n\n  const preventEnter = (event) => {\n    if (event.key === 'Enter') {\n      event.preventDefault();\n    }\n  };\n\n  const handleCheck = (checkedKeys, e) => {\n    checkedNodes.value = e.checkedNodes;\n  };\n  const handleNode = () => {\n    if (selectedNode.value?.key) {\n      let flag = true;\n      allNodes.value.forEach((i) => {\n        if (selectedNode.value[props.tfields.key] === i[props.tfields.key]) {\n          flag = false;\n          message.warning(props.message.double);\n        }\n      });\n      if (flag) {\n        let selectedNodeInTree = getCheckedNodesByValues(treeData.value, [\n          selectedNode.value[props.tfields.key],\n        ])[0];\n        checkedKeys.value.checked.push(selectedNodeInTree.key);\n        checkedNodes.value.push(selectedNodeInTree);\n      }\n    }\n    allNodes.value = checkedNodes.value;\n  };\n\n  // 右侧表格\n  const selectedDataColumns = computed(() => {\n    if (props.isEdit) {\n      if (props.rightColumns.length) {\n        return props.rightColumns;\n      } else {\n        return [\n          { title: '序号', dataIndex: 'index', key: 'index', width: 60 },\n          { title: '名称', dataIndex: props.tfields.title, key: props.tfields.title },\n          { title: '排序', dataIndex: 'sort', key: 'sort', width: 80 },\n          { title: '操作', dataIndex: 'action', key: 'action', width: 80 },\n        ];\n      }\n    } else {\n      return props.rightColumns.filter((item) => {\n        return item.dataIndex !== 'action' && item.dataIndex !== 'sort';\n      });\n    }\n  });\n  const selectedDataList = ref<any>([]);\n\n  function getValueArr(data) {\n    let valueArr = [];\n    if (data?.length) {\n      data.forEach((item) => {\n        valueArr.push(item[props.tfields.key]);\n      });\n    }\n\n    return valueArr;\n  }\n  function getCheckedKeysByValues(treeData, valueArr) {\n    let keyArr = [];\n    if (valueArr?.length) {\n      treeData.forEach((item) => {\n        if (valueArr.includes(item[props.tfields.key])) {\n          keyArr.push(item.key);\n        }\n        if (item.children?.length) {\n          keyArr.push(...getCheckedKeysByValues(item.children, valueArr));\n        }\n      });\n    }\n    return keyArr;\n  }\n  function getCheckedNodesByValues(treeData, valueArr) {\n    let nodeArr = [];\n    if (valueArr?.length) {\n      treeData.forEach((item) => {\n        if (valueArr.includes(item[props.tfields.key])) {\n          nodeArr.push(item);\n        }\n        if (item.children?.length) {\n          nodeArr.push(...getCheckedNodesByValues(item.children, valueArr));\n        }\n      });\n    }\n    return nodeArr;\n  }\n  function getCheckedNodesByKeys(treeData, keyArr) {\n    let nodeArr = [];\n    if (keyArr?.length) {\n      treeData.forEach((item) => {\n        if (keyArr.includes(item.key)) {\n          nodeArr.push(item);\n        }\n        if (item.children?.length) {\n          nodeArr.push(...getCheckedNodesByKeys(item.children, keyArr));\n        }\n      });\n    }\n    return nodeArr;\n  }\n\n  // 排序\n  const sortIndex = reactive({});\n\n  const edit = (record, index) => {\n    sortIndex[record[props.tfields.key]] = { index: index + 1 };\n  };\n\n  const save = (record, index) => {\n    let arr = [...allNodes.value];\n    arr.splice(sortIndex[record[props.tfields.key]].index - 1, 0, arr.splice(index, 1)[0]);\n    allNodes.value = arr;\n    delete sortIndex[record[props.tfields.key]];\n  };\n\n  watch(\n    () => props.value,\n    (newValue) => {\n      if (allNodes.value && newValue && allNodes.value.length != newValue.length) {\n        allNodes.value = newValue;\n      } else if (!allNodes.value && newValue) {\n        allNodes.value = newValue;\n      }\n    },\n  );\n\n  watch(\n    () => props.visible,\n    (newValue) => {\n      modalVisible.value = newValue;\n      if (!newValue) {\n        searchText.value = '';\n      } else {\n        if (allNodes.value && props.value && allNodes.value.length != props.value.length) {\n          allNodes.value = props.value;\n        }\n      }\n    },\n    {\n      deep: true,\n    },\n  );\n\n  watch(\n    () => props.tdata,\n    (newValue) => {\n      const rule = props?.tfields as fieldType;\n      const data = unref(props.tdata as unknown[] as TreeItem[]);\n      treeData.value = transformData(data, rule);\n      treeMap.value = transformMap(data, rule);\n      transformTableData(data, rule, 'top', null);\n      let checkedValues = getValueArr(props.value);\n      checkedKeys.value.checked = getCheckedKeysByValues(treeData.value, checkedValues);\n      checkedNodes.value = getCheckedNodesByValues(treeData.value, checkedValues);\n    },\n  );\n\n  onMounted(() => {\n    modalVisible.value = props.visible;\n    allNodes.value = props.value;\n  });\n</script>\n<style lang=\"less\">\n  .ant-modal-root {\n    display: flex;\n    z-index: 10010;\n  }\n</style>\n<style lang=\"less\" scoped>\n  .dialog-content {\n    display: flex; /* 使用 flex 布局 */\n    align-items: stretch; /* 垂直方向拉伸填充 */\n    justify-content: flex-start; /* 左对齐 */\n  }\n\n  .category-tree {\n    width: 50%;\n    padding: 10px;\n\n    text-align: left;\n\n    span.category-title {\n      display: block;\n      width: calc(100% + 25px);\n      margin-left: -17.5px;\n      padding-bottom: 5px;\n      border-bottom: 1px solid rgb(240 240 240);\n      text-align: left;\n\n      span {\n        margin-left: 20px;\n      }\n    }\n\n    div.category-content {\n      width: calc(100% + 25px);\n      margin-left: -17.5px;\n\n      div.category-search-box {\n        width: 100%;\n        height: 45px;\n\n        .search-title {\n          height: 45px;\n          margin: 0 10px 0 20px;\n          line-height: 45px;\n        }\n\n        .search-input {\n          width: 220px;\n          height: 45px;\n          margin: 5px 0 0;\n          line-height: 45px;\n        }\n\n        .search-icon {\n          display: block;\n          position: absolute;\n          top: 4px;\n          width: 36px;\n          height: 35px;\n          margin: 0 3px;\n          padding-top: 2px;\n          border-radius: 4px;\n          line-height: 35px;\n          text-align: center;\n          cursor: pointer;\n\n          .app-iconify.anticon.rotate-left {\n            transform: rotate(90deg);\n            transform: rotate(90deg);\n          }\n        }\n      }\n\n      div.tree-value {\n        margin: 10px 0 0;\n        overflow-y: scroll;\n        :deep(.ant-table-pagination.ant-pagination) {\n          margin: 10px 0 0;\n        }\n        :deep(.ant-table-body) {\n          height: 100vh;\n        }\n        :deep(.ant-table-body .ant-table-row.selected) {\n          background: #00427d;\n        }\n        :deep(.ant-table-body .ant-table-row.selected td) {\n          background: #00427d;\n        }\n        :deep(.ant-table-body) {\n          overflow-x: hidden;\n        }\n      }\n\n      :deep(.ant-btn .anticon) {\n        margin-top: 7.5px;\n      }\n    }\n  }\n\n  .employee-table {\n    width: 50%;\n    padding: 10px;\n    text-align: left;\n\n    span.employee-title {\n      display: block;\n      width: calc(100% + 25px);\n      margin-left: -17.5px;\n      padding-bottom: 5px;\n      border-bottom: 1px solid rgb(240 240 240);\n      text-align: left;\n\n      span {\n        margin-left: 30px;\n      }\n    }\n\n    div.employee-content {\n      .layout-content {\n        width: 100%;\n        height: auto;\n        padding-right: 5px;\n        padding-left: 5px;\n        overflow-x: hidden;\n        overflow-y: auto;\n        -webkit-overflow-scrolling: touch;\n\n        .component-wrap {\n          width: auto;\n          padding: 5px;\n          float: none;\n          overflow: hidden;\n\n          a.component-item {\n            display: inline-block;\n            height: 30px;\n            margin: 5px 4px 0;\n            padding: 0 15px;\n            float: left;\n            border: 1px dashed #cdcdcd;\n            background-color: #fff;\n            color: #303030;\n            line-height: 30px;\n            text-decoration: none;\n            white-space: nowrap;\n            cursor: pointer;\n\n            span.ui-component-text {\n              margin: 0 8px 0 0;\n            }\n\n            i.icon-close {\n              position: absolute;\n              margin: 0 2px 0 -5px;\n              cursor: pointer;\n\n              span.anticon {\n                position: relative;\n                top: 2px;\n                color: #303030;\n\n                &:hover {\n                  position: relative;\n                  top: 1px;\n                  box-shadow: 0 0 1px 0 rgb(0 0 0 / 10%);\n                  color: #6f6f6f;\n                }\n              }\n            }\n          }\n        }\n\n        :deep(.ant-table-container) {\n          height: 100%;\n          .ant-table-body {\n            height: calc(100% - 40px);\n          }\n        }\n      }\n    }\n  }\n\n  .btn-margin {\n    margin: 1px 0 1px 10px;\n  }\n\n  .editable-cell-input-wrapper {\n    display: flex;\n    align-items: center;\n  }\n</style>\n"],"names":["modalVisible","ref","treeData","searchText","selectedNode","checkedKeys","checkedNodes","allNodes","treeMap","tdataList","xdataList","cancel","emit","confirm","props","_a","message","rule","data","transformRespData","handleClose","handleExtra","updateVisible","$event","isTopNode","key","handleDelete","Modal","handleDeleteNode","item","index","node","tindex","deletedNode","getCheckedNodesByValues","reverseRule","reversedRule","rules","newItem","transformTableData","flag","pnode","newObj","list","x","transformData","transformMap","handleSearch","text","handleTableClick","record","event","currentRow","siblingRow","preventEnter","handleCheck","e","handleNode","i","selectedNodeInTree","selectedDataColumns","computed","getValueArr","valueArr","getCheckedKeysByValues","keyArr","nodeArr","sortIndex","reactive","edit","save","arr","watch","newValue","unref","checkedValues","onMounted"],"mappings":"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"}