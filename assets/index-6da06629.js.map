{"version":3,"file":"index-6da06629.js","sources":["../../src/views/sys/iframe/index.vue"],"sourcesContent":["<template>\n  <div :class=\"prefixCls\" :style=\"getWrapStyle\">\n    <Spin :spinning=\"loading\" size=\"large\" :style=\"getWrapStyle\">\n      <iframe\n        :src=\"iframeURL\"\n        :class=\"`${prefixCls}__main`\"\n        ref=\"frameRef\"\n        @load=\"hideLoading\"\n      ></iframe>\n    </Spin>\n  </div>\n</template>\n<script lang=\"ts\" setup>\n  import type { CSSProperties } from 'vue';\n  import { ref, unref, computed, onMounted, watch } from 'vue';\n  import { Spin } from 'ant-design-vue';\n  import { useWindowSizeFn } from '@vben/hooks';\n  import { propTypes } from '/@/utils/propTypes';\n  import { useDesign } from '/@/hooks/web/useDesign';\n  import { useLayoutHeight } from '/@/layouts/default/content/useContentViewHeight';\n  import { urlToPath } from '@/utils/route';\n\n  const props = defineProps({\n    frameSrc: propTypes.string.def(''),\n  });\n\n  const loading = ref(true);\n  const topRef = ref(50);\n  const heightRef = ref(window.innerHeight);\n  const frameRef = ref<HTMLFrameElement>();\n  const { headerHeightRef } = useLayoutHeight();\n  const iframeURL = ref('');\n\n  const { prefixCls } = useDesign('iframe-page');\n  useWindowSizeFn(calcHeight, { wait: 150, immediate: true });\n\n  const getWrapStyle = computed((): CSSProperties => {\n    return {\n      height: `${unref(heightRef)}px`,\n    };\n  });\n\n  function calcHeight() {\n    const iframe = unref(frameRef);\n    if (!iframe) {\n      return;\n    }\n    const top = headerHeightRef.value;\n    topRef.value = top;\n    heightRef.value = window.innerHeight - top;\n    const clientHeight = document.documentElement.clientHeight - top;\n    iframe.style.height = `${clientHeight}px`;\n  }\n\n  function hideLoading() {\n    loading.value = false;\n    calcHeight();\n  }\n\n  watch(\n    () => props.frameSrc,\n    () => {\n      iframeURL.value = props.frameSrc;\n    },\n  );\n\n  onMounted(() => {\n    const { params } = urlToPath();\n    iframeURL.value = params?.iframeurl ? decodeURIComponent(params?.iframeurl) : props.frameSrc;\n    iframeURL.value = decodeURIComponent(iframeURL.value);\n  });\n</script>\n<style lang=\"less\" scoped>\n  @prefix-cls: ~'@{namespace}-iframe-page';\n\n  .@{prefix-cls} {\n    .ant-spin-nested-loading {\n      position: relative;\n      height: 100%;\n\n      .ant-spin-container {\n        width: 100%;\n        height: 100%;\n        padding: 10px;\n      }\n    }\n\n    &__mask {\n      position: absolute;\n      top: 0;\n      left: 0;\n      width: 100%;\n      height: 100%;\n    }\n\n    &__main {\n      box-sizing: border-box;\n      width: 100%;\n      height: 100%;\n      overflow: hidden;\n      border: 0;\n      background-color: @component-background;\n    }\n  }\n</style>\n"],"names":["loading","ref","topRef","heightRef","frameRef","headerHeightRef","useLayoutHeight","iframeURL","prefixCls","useDesign","useWindowSizeFn","calcHeight","getWrapStyle","computed","unref","iframe","top","clientHeight","hideLoading","watch","props","onMounted","params","urlToPath"],"mappings":"4ZA0BQA,EAAUC,EAAI,EAAI,EAClBC,EAASD,EAAI,EAAE,EACfE,EAAYF,EAAI,OAAO,WAAW,EAClCG,EAAWH,IACX,CAAE,gBAAAI,GAAoBC,IACtBC,EAAYN,EAAI,EAAE,EAElB,CAAE,UAAAO,CAAA,EAAcC,EAAU,aAAa,EAC7CC,EAAgBC,EAAY,CAAE,KAAM,IAAK,UAAW,GAAM,EAEpD,MAAAC,EAAeC,EAAS,KACrB,CACL,OAAQ,GAAGC,EAAMX,CAAS,CAAC,IAAA,EAE9B,EAED,SAASQ,GAAa,CACd,MAAAI,EAASD,EAAMV,CAAQ,EAC7B,GAAI,CAACW,EACH,OAEF,MAAMC,EAAMX,EAAgB,MAC5BH,EAAO,MAAQc,EACLb,EAAA,MAAQ,OAAO,YAAca,EACjC,MAAAC,EAAe,SAAS,gBAAgB,aAAeD,EACtDD,EAAA,MAAM,OAAS,GAAGE,CAAY,IACvC,CAEA,SAASC,GAAc,CACrBlB,EAAQ,MAAQ,GACLW,GACb,CAEA,OAAAQ,EACE,IAAMC,EAAM,SACZ,IAAM,CACJb,EAAU,MAAQa,EAAM,QAC1B,CAAA,EAGFC,EAAU,IAAM,CACR,KAAA,CAAE,OAAAC,GAAWC,IACnBhB,EAAU,MAAQe,GAAA,MAAAA,EAAQ,UAAY,mBAAmBA,GAAA,YAAAA,EAAQ,SAAS,EAAIF,EAAM,SAC1Eb,EAAA,MAAQ,mBAAmBA,EAAU,KAAK,CAAA,CACrD"}