{"version":3,"file":"index-5383790c.js","sources":["../../src/views/po/integrated/assessmentevaluation/template/index.vue"],"sourcesContent":["<template>\n  <PageWrapper dense contentFullHeight fixedHeight contentClass=\"flex\" style=\"position: relative\">\n    <!-- 数据表格 -->\n    <BasicTable\n      class=\"fix-basic-table\"\n      @register=\"registerTable\"\n      :searchInfo=\"searchInfo\"\n      @resize-column=\"(w, col) => (col.width = w)\"\n      @row-db-click=\"(record) => handleReadOnlyView(record)\"\n      @selection-change=\"handleSelectChange\"\n    >\n      <template #toolbar>\n        <a-button type=\"primary\" :preIcon=\"IconEnum.ADD\" @click=\"handleAdd\">添加</a-button>\n        <a-button\n          class=\"red-btn\"\n          :disabled=\"selectedRowId == ''\"\n          :preIcon=\"IconEnum.DELETE\"\n          @click=\"handleDelete\"\n          >删除</a-button\n        >\n      </template>\n      <template #bodyCell=\"{ column, text, record }\"> </template>\n    </BasicTable>\n  </PageWrapper>\n</template>\n<script lang=\"ts\" setup>\n  import { onMounted, reactive, ref } from 'vue';\n  import { useI18n } from '@/hooks/web/useI18n';\n  import { ElMessageBox } from 'element-plus';\n  import { BasicTable, useTable, TableAction } from '/@/components/Table';\n  import { useRouter } from 'vue-router';\n  import { PageWrapper } from '/@/components/Page';\n  import { IconEnum } from '@/enums/appEnum';\n  import { cancelProcessInstance } from '@/api/bpm/processInstance';\n  import { message } from 'ant-design-vue';\n  import { columns, getDataList, searchFormSchema, getTemplate } from './template.ts';\n  import { addTabPage } from '@/utils/route';\n  import { MsgManager } from '/@/message/MsgManager';\n  import * as ProcessInstanceApi from '@/api/bpm/processInstance';\n  import { useMessage } from '@/hooks/web/useMessage';\n  import * as CommonUtil from '/@/utils/common';\n  const { createConfirm } = useMessage();\n\n  const router = useRouter();\n  let selectedRowId = ref('');\n  let isManuScript = ref(false);\n  let selectedRow = reactive({});\n  let searchPageInfo = reactive({});\n  const { t } = useI18n();\n  const getPageByParam = async () => {\n    const paginationRef = getPaginationRef() as any;\n    let formData = getForm().getFieldsValue();\n    formData.pageNo = paginationRef.current;\n    formData.pageSize = paginationRef.pageSize;\n    formData.sortField = searchPageInfo.sortField;\n    formData.sortOrder = searchPageInfo.sortOrder;\n    let pageList = await getDataList(formData);\n    return pageList.list;\n  };\n  const [registerTable, { reload, getSelectRows, getPaginationRef, getForm }] = useTable({\n    title: '评价模板',\n    api: getPageByParam,\n    rowKey: 'id',\n    columns,\n    useSearchForm: true,\n    showTableSetting: true,\n    bordered: true,\n    pagination: { pageSize: 20, pageSizeOptions: ['20', '50', '100', '200'] },\n    handleSearchInfoFn(info) {\n      return info;\n    },\n    formConfig: {\n      labelWidth: 120,\n      actionColOptions: { span: 24 },\n      autoAdvancedLine: 1,\n      baseColProps: { span: 7 },\n      schemas: searchFormSchema,\n      autoSubmitOnEnter: true,\n      noHideBtnFlag: true,\n    },\n    rowSelection: {\n      type: 'radio',\n      fixed: true,\n      onSelect: onSelect,\n    },\n    sortFn: (sortInfo: SorterResult) => {\n      if (sortInfo.order) {\n        searchPageInfo.sortField = sortInfo.field;\n        searchPageInfo.sortOrder = sortInfo.order.replace('end', '');\n      } else {\n        searchPageInfo.sortField = '';\n        searchPageInfo.sortOrder = '';\n      }\n    },\n  });\n  function handleSelectChange({ keys, rows }) {\n    if (rows && rows.length > 0) {\n      const record = rows[0];\n      selectedRowId.value = record.id;\n      selectedRow = record;\n    } else {\n      selectedRowId.value = '';\n      selectedRow = null;\n    }\n  }\n\n  function onSelect(record, selected) {\n    if (selected) {\n      selectedRowId.value = record.id;\n      selectedRow = record;\n    } else {\n      selectedRowId.value = '';\n      selectedRow = null;\n    }\n  }\n  //---------------------------------操作按钮---------------------------------------\n  // 新增\n  const handleAdd = async () => {\n    // router.push('/po/integrated/assessmentevaluation/template/templateCreate');\n    addTabPage('/po/integrated/assessmentevaluation/template/templateCreate', '添加评价模板');\n  };\n\n  function handleReadOnlyView(record: any) {\n    CommonUtil.toFlowPage(record.id);\n  }\n\n  //获取表格选择数据\n  function checkSelectData() {\n    const selectRows = getSelectRows();\n    if (selectRows.length == 0) {\n      message.error('请选择一行数据');\n      return false;\n    }\n    return selectRows[0] as any;\n  }\n  //删除\n  async function handleDelete() {\n    createConfirm({\n      title: '提示',\n      iconType: 'warning',\n      content: '确定要删除选中记录？',\n      async onOk() {\n        const row = checkSelectData();\n        if (!row.id) {\n          return;\n        }\n        // const res = await getTemplate({ id: row.id });\n        if (row.status != 0) {\n          message.error('非草稿状态不能删除。');\n          return;\n        }\n        // 发起取消\n        await ProcessInstanceApi.deleteProcessInstance(row.processInstanceId);\n        message.success('已删除。');\n        reload();\n      },\n    });\n  }\n  // 启动执行代码\n  onMounted(async () => {\n    MsgManager.getInstance().listen('evaluation-template', () => {\n      reload();\n    });\n  });\n</script>\n<style lang=\"less\" scoped>\n  .fix-basic-table {\n    :deep(&.vben-basic-table .ant-table-wrapper) {\n      padding: 10px 16px 12px;\n    }\n\n    :deep(.table-settings .anticon-setting) {\n      margin-right: 0;\n    }\n  }\n</style>\n"],"names":["createConfirm","useMessage","useRouter","selectedRowId","ref","reactive","searchPageInfo","useI18n","getPageByParam","__async","paginationRef","getPaginationRef","formData","getForm","getDataList","registerTable","reload","getSelectRows","useTable","columns","info","searchFormSchema","onSelect","sortInfo","handleSelectChange","keys","rows","record","selected","handleAdd","addTabPage","handleReadOnlyView","CommonUtil.toFlowPage","checkSelectData","selectRows","message","handleDelete","row","ProcessInstanceApi.deleteProcessInstance","onMounted","MsgManager"],"mappings":"4zCAyCQ,KAAA,CAAE,cAAAA,GAAkBC,IAEXC,EAAU,EACrB,IAAAC,EAAgBC,EAAI,EAAE,EACPA,EAAI,EAAK,EACVC,EAAS,CAAA,CAAE,EACzB,IAAAC,EAAiBD,EAAS,CAAA,CAAE,EAClBE,EAAQ,EACtB,MAAMC,EAAiB,IAAYC,EAAA,sBACjC,MAAMC,EAAgBC,IAClB,IAAAC,EAAWC,IAAU,iBACzB,OAAAD,EAAS,OAASF,EAAc,QAChCE,EAAS,SAAWF,EAAc,SAClCE,EAAS,UAAYN,EAAe,UACpCM,EAAS,UAAYN,EAAe,WACrB,MAAMQ,EAAYF,CAAQ,GACzB,IAAA,GAEZ,CAACG,EAAe,CAAE,OAAAC,EAAQ,cAAAC,EAAe,iBAAAN,EAAkB,QAAAE,CAAA,CAAS,EAAIK,EAAS,CACrF,MAAO,OACP,IAAKV,EACL,OAAQ,KACR,QAAAW,EACA,cAAe,GACf,iBAAkB,GAClB,SAAU,GACV,WAAY,CAAE,SAAU,GAAI,gBAAiB,CAAC,KAAM,KAAM,MAAO,KAAK,CAAE,EACxE,mBAAmBC,EAAM,CAChB,OAAAA,CACT,EACA,WAAY,CACV,WAAY,IACZ,iBAAkB,CAAE,KAAM,EAAG,EAC7B,iBAAkB,EAClB,aAAc,CAAE,KAAM,CAAE,EACxB,QAASC,EACT,kBAAmB,GACnB,cAAe,EACjB,EACA,aAAc,CACZ,KAAM,QACN,MAAO,GACP,SAAAC,CACF,EACA,OAASC,GAA2B,CAC9BA,EAAS,OACXjB,EAAe,UAAYiB,EAAS,MACpCjB,EAAe,UAAYiB,EAAS,MAAM,QAAQ,MAAO,EAAE,IAE3DjB,EAAe,UAAY,GAC3BA,EAAe,UAAY,GAE/B,CAAA,CACD,EACD,SAASkB,EAAmB,CAAE,KAAAC,EAAM,KAAAC,GAAQ,CACtC,GAAAA,GAAQA,EAAK,OAAS,EAAG,CACrB,MAAAC,EAASD,EAAK,CAAC,EACrBvB,EAAc,MAAQwB,EAAO,EACf,MAEdxB,EAAc,MAAQ,EAG1B,CAES,SAAAmB,EAASK,EAAQC,EAAU,CAC9BA,EACFzB,EAAc,MAAQwB,EAAO,GAG7BxB,EAAc,MAAQ,EAG1B,CAGA,MAAM0B,EAAY,IAAYpB,EAAA,sBAE5BqB,EAAW,8DAA+D,QAAQ,CAAA,GAGpF,SAASC,EAAmBJ,EAAa,CAC5BK,EAAWL,EAAO,EAAE,CACjC,CAGA,SAASM,GAAkB,CACzB,MAAMC,EAAajB,IACf,OAAAiB,EAAW,QAAU,GACvBC,EAAQ,MAAM,SAAS,EAChB,IAEFD,EAAW,CAAC,CACrB,CAEA,SAAeE,GAAe,QAAA3B,EAAA,sBACdT,EAAA,CACZ,MAAO,KACP,SAAU,UACV,QAAS,aACH,MAAO,QAAAS,EAAA,sBACX,MAAM4B,EAAMJ,IACR,GAACI,EAAI,GAIL,IAAAA,EAAI,QAAU,EAAG,CACnBF,EAAQ,MAAM,YAAY,EAC1B,MACF,CAEM,MAAAG,EAAyCD,EAAI,iBAAiB,EACpEF,EAAQ,QAAQ,MAAM,EACfnB,IACT,GAAA,CACD,CACH,GAEA,OAAAuB,EAAU,IAAY9B,EAAA,sBACpB+B,EAAW,YAAY,EAAE,OAAO,sBAAuB,IAAM,CACpDxB,GAAA,CACR,CAAA,EACF"}