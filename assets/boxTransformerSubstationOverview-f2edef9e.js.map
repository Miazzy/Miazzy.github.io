{"version":3,"file":"boxTransformerSubstationOverview-f2edef9e.js","sources":["../../src/views/monitor/PVArea/boxTransformerSubstationOverview/boxTransformerSubstationOverview.vue"],"sourcesContent":["<!--\n * @Description: 箱变总览\n * @Date: 2023-10-08 16:59:48\n * @LastEditTime: 2023-11-09 09:22:37\n * @FilePath: \\ygwl-framework\\src\\views\\monitor\\PVArea\\boxTransformerSubstationOverview\\boxTransformerSubstationOverview.vue\n-->\n<template>\n  <PageWrapper fixedHeight contentClass=\"flex\" style=\"overflow: hidden\">\n    <div class=\"box-transformer-substation-overview\">\n      <div class=\"area-box box-style\" ref=\"contentBoxRef\">\n        <div class=\"area-hearder-box\" ref=\"areaHearderBoxRef\">\n          <div class=\"station-selector-box\">\n            <Icon class=\"icon-left\" icon=\"mdi:house-city\" color=\"#1890FF\" :size=\"15\" />\n            <Select\n              style=\"width: 200px\"\n              v-model:value=\"curStationId\"\n              show-search\n              :options=\"stationList\"\n              :filter-option=\"filterOption\"\n              :fieldNames=\"{ value: 'id', label: 'name' }\"\n              @change=\"handleChange\"\n            />\n          </div>\n          <div class=\"refresh-box\">\n            <Checkbox v-model:checked=\"isAutoRefresh\" @change=\"handleAutoRefresh\"\n              >自动刷新</Checkbox\n            >\n          </div>\n        </div>\n        <div class=\"area-content-box\">\n          <div class=\"content-header-box\" ref=\"areaContentHearderBoxRef\">\n            <div class=\"header-left\">\n              <div class=\"radio-btn-box\">\n                <RadioGroup v-model:value=\"showMode\" size=\"small\">\n                  <RadioButton value=\"card\">\n                    <Icon icon=\"ant-design:menu-outlined\" class=\"radio-btn-icon\" :size=\"14\" />\n                  </RadioButton>\n                  <RadioButton value=\"table\">\n                    <Icon\n                      icon=\"ant-design:insert-row-above-outlined\"\n                      class=\"radio-btn-icon\"\n                      :size=\"14\"\n                    />\n                  </RadioButton>\n                </RadioGroup>\n              </div>\n              <div class=\"status-checkbox-group-box\">\n                <Checkbox v-model:checked=\"checkedAllStatus\" @change=\"handleCheckAllStatus\">\n                  <span class=\"status-label-text\">全部</span>\n                  <span>{{ deviceCount }}</span>\n                </Checkbox>\n                <CheckboxGroup v-model:value=\"checkedStatus\" @change=\"handleStatusChange\">\n                  <Checkbox v-for=\"(item, index) in statusOptions\" :key=\"index\" :value=\"item.value\">\n                    <span class=\"status-label-text\">{{ item.label }}</span>\n                    <span :class=\"{ 'red-text': item.value !== 'normal' && item.number > 0 }\">{{\n                      item.number\n                    }}</span>\n                  </Checkbox>\n                </CheckboxGroup>\n              </div>\n            </div>\n          </div>\n          <template v-if=\"showMode === 'card'\">\n            <div class=\"device-content\" :style=\"{ height: cardContentHeight }\">\n              <div class=\"device-list-box\">\n                <DeviceItem\n                  class=\"device-item-layout\"\n                  v-for=\"(item, index) in deviceDataByPage[curPage - 1]\"\n                  :key=\"index\"\n                  :options=\"deviceItemOptions\"\n                  :data=\"item\"\n                  @dblclick=\"handleOpenDeviceDialog(item)\"\n                />\n              </div>\n            </div>\n            <div class=\"area-pagination-box\">\n              <div\n                style=\"display: none\"\n                class=\"pagination-item\"\n                :class=\"{ 'current-page': curPage === i }\"\n                v-for=\"i in totalPage\"\n                :key=\"i\"\n                @click=\"handleChangePage(i)\"\n                >{{ i }}</div\n              >\n              <a-pagination\n                class=\"pagination\"\n                v-model:current=\"current\"\n                :total=\"totalPage\"\n                :pageSize=\"1\"\n                :showSizeChanger=\"false\"\n                show-less-items\n                show-quick-jumper\n                @change=\"handleChangePage\"\n              />\n            </div>\n            <div class=\"area-pagination-box\">\n              <div\n                style=\"display: none\"\n                class=\"pagination-item\"\n                :class=\"{ 'current-page': curPage === i }\"\n                v-for=\"i in totalPage\"\n                :key=\"i\"\n                @click=\"handleChangePage(i)\"\n                >{{ i }}</div\n              >\n              <a-pagination\n                class=\"pagination\"\n                v-model:current=\"current\"\n                :total=\"totalPage\"\n                :pageSize=\"1\"\n                :showSizeChanger=\"false\"\n                show-less-items\n                show-quick-jumper\n                @change=\"handleChangePage\"\n              />\n            </div>\n          </template>\n          <template v-if=\"showMode === 'table'\">\n            <div class=\"device-table-box\">\n              <BasicTable @register=\"registerTable\">\n                <template #toolbar>\n                  <a-button class=\"yellow-btn\" :preIcon=\"IconEnum.EXPORT\" @click=\"exportData\"\n                    >导出</a-button\n                  >\n                </template>\n                <template #action=\"{ record }\">\n                  <TableAction\n                    :actions=\"[\n                      {\n                        label: '详情',\n                        icon: 'clarity:note-edit-line',\n                        onClick: handleDetail.bind(null, { record }),\n                      },\n                    ]\"\n                  />\n                </template>\n                <template #bodyCell=\"{ column, record }\">\n                  <template v-if=\"column.key === 'abnormalTypesStr'\">\n                    <span class=\"status-icon\" :class=\"statusMap[record.deviceShowFlag]\"></span>\n                  </template>\n                </template>\n              </BasicTable>\n            </div>\n          </template>\n        </div>\n      </div>\n      <!-- 设备弹框 -->\n      <DeviceDialog\n        :title=\"dialogTitle\"\n        :visible=\"dialogVisible\"\n        :ycData=\"ycData\"\n        :yxData=\"yxData\"\n        :yxTime=\"yxTime\"\n        :data=\"selectedDevice\"\n        @update:visible=\"dialogVisible = $event\"\n      />\n    </div>\n  </PageWrapper>\n</template>\n\n<script lang=\"ts\" setup>\n  import { ref, onMounted, unref, watch, reactive } from 'vue';\n  import {\n    message,\n    Checkbox,\n    RadioGroup,\n    RadioButton,\n    Button,\n    Select,\n    CheckboxGroup,\n  } from 'ant-design-vue';\n  import Icon from '@/components/Icon/Icon.vue';\n  import { BasicTable, useTable, TableAction, BasicColumn } from '/@/components/Table';\n  import DeviceItem from '../../component/deviceItem.vue';\n  import DeviceDialog from '../subareaOverview/deviceDialog.vue';\n  import { jsonToSheetXlsx } from '/@/components/Excel';\n  import { TaskExecutor } from '/@/executor/taskExecutor';\n  import { IconEnum } from '@/enums/appEnum';\n  import { exportExcelFile } from '@/utils/file/download';\n  import {\n    getStations,\n    getPhotovoltaicDevice,\n    getRealTimeYc,\n    getRealTimeYx,\n    transformerExport,\n  } from '../../monitorApi.ts';\n  import { useMessage } from '@/hooks/web/useMessage';\n\n  const { createConfirm } = useMessage();\n\n  const props = defineProps({\n    stationId: String,\n    areaId: String,\n  });\n  // 选择的电站\n  const curStationId = ref();\n  const stationList = ref([]);\n  const deviceCount = ref(0);\n  const current = ref(1);\n\n  const handleChange = async (value: string, option) => {\n    curStationId.value = value;\n    getDeviceData();\n  };\n  const filterOption = (input: string, option: any) => {\n    return option.name.indexOf(input) >= 0;\n  };\n  // 获取电站列表数据\n  const getPowerStationList = async () => {\n    let res = await getStations();\n    if (res?.length) {\n      stationList.value = res;\n      if (!curStationId.value) {\n        curStationId.value = stationList.value[0].id;\n        getDeviceData();\n      }\n    }\n  };\n\n  const abnormalInfo = reactive({}); // 异常数据\n\n  // 获取设备数据\n  const deviceData = ref([]); // 箱变数据\n  const deviceDataByPage = ref([]); // 箱变数据\n  const showColumns = ref([]); // 展示字段\n\n  // 翻页\n  const curPage = ref(1);\n  const pageSize = 24;\n  const totalPage = ref(1);\n  const handleChangePage = (page) => {\n    curPage.value = page;\n  };\n  // 查询设备\n  const getDeviceData = async () => {\n    let res = await getPhotovoltaicDevice({\n      stationId: curStationId.value,\n      abnormalType: checkedStatus.value,\n      deviceType: 'Transformer',\n    });\n    Object.assign(abnormalInfo, res.abnormalInfo);\n    statusOptions.value[0].number = abnormalInfo.normalNum;\n    statusOptions.value[1].number = abnormalInfo.alarmNum;\n    statusOptions.value[2].number = abnormalInfo.interruptNum;\n    if (res != null) {\n      deviceData.value = res.dataList;\n      deviceCount.value = res.dataList?.length;\n      showColumns.value = res.showColumns;\n      // 数据分页\n      deviceDataByPage.value = [];\n      if (deviceCount.value > 0) {\n        totalPage.value = Math.ceil(deviceCount.value / pageSize);\n        for (let i = 0; i < totalPage.value; i++) {\n          let startIndex = i * pageSize;\n          let endIndex = Math.min((i + 1) * pageSize, deviceCount.value);\n          deviceDataByPage.value.push(res.dataList.slice(startIndex, endIndex));\n        }\n      }\n      getColumns();\n      reloadData(undefined, false);\n    }\n  };\n\n  // 显示方式：卡片/表格 card/table\n  const showMode = ref('card');\n\n  // 设备状态选项\n  const statusOptions = ref([\n    { label: '正常', value: 'normal', number: 585 },\n    { label: '告警', value: 'alarm', number: 1 },\n    { label: '通讯中断', value: 'interrupt', number: 1 },\n  ]);\n  const checkedAllStatus = ref(true);\n  const checkedStatus = ref(['normal', 'alarm', 'interrupt']);\n  const handleStatusChange = (checkedValue) => {\n    console.log('checkedValue', checkedValue);\n    checkedStatus.value = checkedValue;\n    getDeviceData();\n  };\n  const handleCheckAllStatus = (e) => {\n    checkedStatus.value = e.target.checked ? ['normal', 'alarm', 'interrupt'] : [];\n    getDeviceData();\n  };\n  watch(checkedStatus, (val) => {\n    checkedAllStatus.value = val.length === 3 ? true : false;\n  });\n\n  // 设备弹框\n  const dialogVisible = ref(false);\n  const dialogTitle = ref('');\n  const selectedDevice = ref({});\n  // 打开设备弹框\n  const handleOpenDeviceDialog = (deviceItem) => {\n    dialogVisible.value = true;\n    dialogTitle.value = deviceItem.esn;\n    selectedDevice.value = deviceItem;\n    getYcData(deviceItem);\n    getYxData(deviceItem);\n  };\n\n  // 获取实时遥测数据\n  const ycData = ref([]);\n  const getYcData = async (deviceItem) => {\n    let res = await getRealTimeYc({\n      stationId: props.stationId,\n      areaId: props.areaId,\n      esn: deviceItem.esn,\n      dataType: 3,\n    });\n    ycData.value = res;\n  };\n\n  // 获取实时遥信数据\n  const yxData = ref([]);\n  const yxTime = ref(null);\n  const getYxData = async (deviceItem) => {\n    let res = await getRealTimeYx({\n      stationId: props.stationId,\n      areaId: props.areaId,\n      esn: deviceItem.esn,\n      dataType: 1,\n    });\n    yxData.value = res.dataList;\n    yxTime.value = res.showTimeStr;\n  };\n\n  // 设备item显示内容配置\n  const deviceItemOptions = ref({\n    deviceLabelKey: 'deviceName',\n    left: 'pvTotal',\n    right: [],\n    hasStatus: false,\n  });\n\n  // 计算内容高度\n  const contentBoxRef = ref();\n  const areaHearderBoxRef = ref();\n  const areaContentHearderBoxRef = ref();\n  const cardContentHeight = ref('');\n  const calInverterContentHeight = () => {\n    cardContentHeight.value = `${\n      unref(contentBoxRef).offsetHeight -\n      unref(areaHearderBoxRef).offsetHeight -\n      unref(areaContentHearderBoxRef).offsetHeight -\n      44\n    }px`;\n  };\n\n  // 表格\n  const columns: BasicColumn[] = ref([]);\n\n  const getColumns = async () => {\n    let preColumns = [\n      {\n        title: '状态',\n        dataIndex: 'abnormalTypesStr',\n        sorter: true,\n        width: 80,\n      },\n      {\n        title: '设备名称',\n        dataIndex: 'deviceName',\n        sorter: true,\n        width: 150,\n      },\n    ];\n    if (showColumns.value?.length > 0) {\n      showColumns.value.forEach((element) => {\n        preColumns.push({\n          title:\n            element.unit != null\n              ? element.addressDesc + '(' + element.unit + ')'\n              : element.addressDesc,\n          dataIndex: element.addressField,\n          width: 150,\n        });\n      });\n    }\n    preColumns.push({\n      title: '更新时间',\n      dataIndex: 'time',\n      sorter: true,\n      width: 150,\n    });\n    columns.value = preColumns;\n  };\n\n  const statusMap = {\n    normal: 'green',\n    alarm: 'red',\n    interrupt: 'grey',\n  };\n  const tableData = ref([]);\n  const convertTableData = async () => {\n    let tableDataList = deviceData.value;\n    let result = [];\n    if (tableDataList.length > 0) {\n      tableDataList.forEach((item) => {\n        if (item.actualDataList?.length) {\n          item.actualDataList.forEach((v) => {\n            item[v.addressField] = v.data;\n          });\n        }\n        result.push(item);\n      });\n    }\n    tableData.value = result;\n    return tableData.value;\n  };\n  const checkedKeys = ref<Array<string | number>>([]); // 复选框的选择的数据\n  const [registerTable, { reload, reloadData }] = useTable({\n    api: convertTableData,\n    columns: columns,\n    bordered: true,\n    actionColumn: {\n      title: '操作',\n      dataIndex: 'action',\n      slots: { customRender: 'action' },\n    },\n    rowKey: 'deviceId',\n    pagination: { pageSize: 20, pageSizeOptions: ['20', '50', '100', '200'] },\n    showTableSetting: true,\n    tableSetting: { setting: true, redo: false, size: false },\n    showIndexColumn: true,\n  });\n\n  // 导出\n  function exportData() {\n    createConfirm({\n      title: '提示',\n      iconType: 'warning',\n      content: '确定要导出所有记录？',\n      async onOk() {\n        let param = {\n          stationId: curStationId.value,\n          abnormalType: checkedStatus.value,\n          deviceType: 'Transformer',\n        };\n        param.fileName = '箱变数据';\n        param.excelList = columns.value;\n        await transformerExport(param).then((res) => {\n          exportExcelFile(res?.data, param.fileName);\n        });\n        // transformerExport;\n        // let exportDataList = [];\n        // tableData.value.forEach((element) => {\n        //   let temp = {};\n        //   columns.value.forEach((item) => {\n        //     temp[item.dataIndex] = element[item.dataIndex];\n        //   });\n        //   exportDataList.push(temp);\n        // });\n        // let header = {};\n        // columns.value.forEach((item) => {\n        //   header[item.dataIndex] = item.title;\n        // });\n        // jsonToSheetXlsx({\n        //   data: exportDataList,\n        //   header: header,\n        //   filename: '箱变数据.xlsx',\n        // });\n      },\n    });\n  }\n\n  // 详情\n  function handleDetail(record) {\n    handleOpenDeviceDialog(record.record);\n  }\n\n  // 挂牌\n  function handleList(record) {\n    console.log('挂牌');\n  }\n\n  // 自动刷新\n  const isAutoRefresh = ref(true);\n  const taskRefreshID = 'TRANSFORMER_REFRESH';\n  // 刷新页面数据\n  const refreshData = async () => {\n    // await getPowerStationList();\n    console.info('refreshData:', Math.random());\n    try {\n      await getDeviceData();\n    } catch (error) {\n      //\n    }\n  };\n\n  // 控制自动刷新函数\n  const handleAutoRefresh = (event) => {\n    try {\n      if (event?.target?.checked) {\n        // 如果勾选自动刷新，则将刷新函数加入线程，否则移除线程\n        TaskExecutor.getInstance().pushListTask(taskRefreshID, refreshData, 5000);\n      } else {\n        TaskExecutor.getInstance().removeListTask(taskRefreshID);\n      }\n    } catch (error) {\n      //\n    }\n  };\n\n  onMounted(async () => {\n    calInverterContentHeight();\n    await getPowerStationList();\n    // 启动刷新线程\n    TaskExecutor.getInstance().start();\n    if (isAutoRefresh.value) {\n      TaskExecutor.getInstance().pushListTask(taskRefreshID, refreshData, 5000);\n    }\n  });\n</script>\n\n<style lang=\"less\">\n  @import '../../style/themes.less';\n  // @import '../../style/pagination.less';\n</style>\n\n<style lang=\"less\" scoped>\n  .box-transformer-substation-overview {\n    height: 100%;\n    padding: 10px;\n    overflow-x: hidden;\n    overflow-y: scroll;\n\n    .area-box {\n      height: 100%;\n    }\n\n    .box-style {\n      border-radius: 2px;\n    }\n\n    .area-hearder-box {\n      display: flex;\n      align-items: center;\n      justify-content: space-between;\n      height: 54px;\n      padding: 0 16px;\n\n      .station-selector-box {\n        display: flex;\n        align-items: center;\n\n        :deep(.ant-select) {\n          font-size: 16px;\n        }\n\n        :deep(.ant-select:not(.ant-select-customize-input) .ant-select-selector) {\n          border: none;\n        }\n\n        :deep(\n            .ant-select-focused:not(.ant-select-disabled).ant-select:not(.ant-select-customize-input)\n              .ant-select-selector\n          ) {\n          box-shadow: none;\n        }\n      }\n\n      .refresh-box {\n        width: 90px;\n      }\n    }\n\n    .select-box {\n      display: flex;\n      align-items: center;\n      margin-right: 20px;\n\n      &:last-child {\n        margin-right: 0;\n      }\n\n      .select-label-box {\n        margin-right: 14px;\n        color: #444;\n        font-size: 14px;\n      }\n    }\n\n    .status-checkbox-group-box {\n      .status-label-text {\n        margin-right: 6px;\n      }\n\n      .red-text {\n        color: #ff4d4f;\n      }\n    }\n\n    .area-content-box {\n      .content-header-box {\n        display: flex;\n        align-items: center;\n        justify-content: space-between;\n        padding: 10px 15px 0;\n\n        .header-left {\n          display: flex;\n          z-index: 1000;\n          align-items: center;\n\n          .left-divider {\n            width: 2px;\n            height: 12px;\n            margin: 0 8px;\n          }\n\n          .radio-btn-box {\n            margin-right: 8px;\n          }\n        }\n      }\n\n      .device-content {\n        .device-list-box {\n          margin-right: -20px;\n          padding: 14px 15px 0;\n          overflow: hidden;\n\n          .device-item-layout {\n            margin: 0 19px 16px 0;\n            float: left;\n            cursor: pointer;\n          }\n\n          :deep(.device-item) {\n            width: 188px;\n            min-height: 200px;\n          }\n        }\n      }\n\n      .area-item-layout {\n        margin: 0 20px 10px 0;\n        float: left;\n        cursor: pointer;\n      }\n\n      .area-pagination-box {\n        display: flex;\n        position: fixed;\n        bottom: 15px;\n        left: 50%;\n        transform: translateX(-50%);\n        text-align: center;\n\n        .pagination-item {\n          display: inline-block;\n          width: 30px;\n          height: 30px;\n          margin-right: 10px;\n          border-radius: 50%;\n          font-size: 14px;\n          line-height: 30px;\n          cursor: pointer;\n\n          &:last-child {\n            margin-right: 0;\n          }\n        }\n      }\n    }\n\n    .device-box {\n      :deep(.ant-tabs-large > .ant-tabs-nav .ant-tabs-tab) {\n        padding: 16px 4px;\n        line-height: 22px;\n      }\n\n      :deep(.ant-tabs-nav) {\n        padding-left: 15px;\n      }\n\n      .tab-bar-item {\n        position: relative;\n\n        .tab-tag {\n          position: absolute;\n          top: -10px;\n          right: -20px;\n          width: 20px;\n          height: 20px;\n          border-radius: 10px;\n          background-color: #ff4d4f;\n          color: #fffefe;\n          font-size: 12px;\n          line-height: 20px;\n          text-align: center;\n        }\n      }\n    }\n\n    .device-table-box {\n      .status-icon {\n        display: inline-block;\n        width: 18px;\n        height: 18px;\n        // border: 1px solid rgb(53 52 52);\n        border-radius: 50%;\n\n        &.green {\n          background-color: #52c41a;\n        }\n\n        &.red {\n          background-color: #ff4d4f;\n        }\n\n        &.grey {\n          background-color: #999;\n        }\n\n        &.white {\n          background-color: #f5f4f4;\n        }\n      }\n    }\n\n    :deep(.vben-basic-table) {\n      margin-top: -50px;\n    }\n  }\n</style>\n"],"names":["pageSize","taskRefreshID","createConfirm","useMessage","curStationId","ref","stationList","deviceCount","current","handleChange","value","option","__async","getDeviceData","filterOption","input","getPowerStationList","res","getStations","abnormalInfo","reactive","deviceData","deviceDataByPage","showColumns","curPage","totalPage","handleChangePage","page","getPhotovoltaicDevice","checkedStatus","statusOptions","_a","i","startIndex","endIndex","getColumns","reloadData","showMode","checkedAllStatus","handleStatusChange","checkedValue","handleCheckAllStatus","watch","val","dialogVisible","dialogTitle","selectedDevice","handleOpenDeviceDialog","deviceItem","getYcData","getYxData","ycData","getRealTimeYc","props","yxData","yxTime","getRealTimeYx","deviceItemOptions","contentBoxRef","areaHearderBoxRef","areaContentHearderBoxRef","cardContentHeight","calInverterContentHeight","unref","columns","preColumns","element","statusMap","tableData","convertTableData","tableDataList","result","item","v","registerTable","reload","useTable","exportData","param","transformerExport","exportExcelFile","handleDetail","record","isAutoRefresh","refreshData","error","handleAutoRefresh","event","TaskExecutor","onMounted"],"mappings":"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"}