{"version":3,"file":"RegisterForm.vue_vue_type_script_setup_true_lang-445c3c3e.js","sources":["../../src/views/sys/login/RegisterForm.vue"],"sourcesContent":["<template>\n  <div v-if=\"getShow\">\n    <LoginFormTitle class=\"enter-x\" />\n    <Form class=\"p-4 enter-x\" :model=\"formData\" :rules=\"getFormRules\" ref=\"formRef\">\n      <FormItem name=\"account\" class=\"enter-x\">\n        <Input\n          class=\"fix-auto-fill\"\n          size=\"large\"\n          v-model:value=\"formData.account\"\n          :placeholder=\"t('sys.login.userName')\"\n        />\n      </FormItem>\n      <FormItem name=\"mobile\" class=\"enter-x\">\n        <Input\n          size=\"large\"\n          v-model:value=\"formData.mobile\"\n          :placeholder=\"t('sys.login.mobile')\"\n          class=\"fix-auto-fill\"\n        />\n      </FormItem>\n      <FormItem name=\"sms\" class=\"enter-x\">\n        <CountdownInput\n          size=\"large\"\n          class=\"fix-auto-fill\"\n          v-model:value=\"formData.sms\"\n          :placeholder=\"t('sys.login.smsCode')\"\n        />\n      </FormItem>\n      <FormItem name=\"password\" class=\"enter-x\">\n        <StrengthMeter\n          size=\"large\"\n          v-model:value=\"formData.password\"\n          :placeholder=\"t('sys.login.password')\"\n        />\n      </FormItem>\n      <FormItem name=\"confirmPassword\" class=\"enter-x\">\n        <InputPassword\n          size=\"large\"\n          visibilityToggle\n          v-model:value=\"formData.confirmPassword\"\n          :placeholder=\"t('sys.login.confirmPassword')\"\n        />\n      </FormItem>\n\n      <FormItem class=\"enter-x\" name=\"policy\">\n        <!-- No logic, you need to deal with it yourself -->\n        <Checkbox v-model:checked=\"formData.policy\" size=\"small\">\n          {{ t('sys.login.policy') }}\n        </Checkbox>\n      </FormItem>\n\n      <Button\n        type=\"primary\"\n        class=\"enter-x\"\n        size=\"large\"\n        block\n        @click=\"handleRegister\"\n        :loading=\"loading\"\n      >\n        {{ t('sys.login.registerButton') }}\n      </Button>\n      <Button size=\"large\" block class=\"mt-4 enter-x\" @click=\"handleBackLogin\">\n        {{ t('sys.login.backSignIn') }}\n      </Button>\n    </Form>\n  </div>\n</template>\n<script lang=\"ts\" setup>\n  import { reactive, ref, unref, computed } from 'vue';\n  import LoginFormTitle from './LoginFormTitle.vue';\n  import { Form, Input, Button, Checkbox } from 'ant-design-vue';\n  import { StrengthMeter } from '/@/components/StrengthMeter';\n  import { CountdownInput } from '/@/components/CountDown';\n  import { useI18n } from '/@/hooks/web/useI18n';\n  import { useLoginState, useFormRules, useFormValid, LoginStateEnum } from './useLogin';\n\n  const FormItem = Form.Item;\n  const InputPassword = Input.Password;\n  const { t } = useI18n();\n  const { handleBackLogin, getLoginState } = useLoginState();\n\n  const formRef = ref();\n  const loading = ref(false);\n\n  const formData = reactive({\n    account: '',\n    password: '',\n    confirmPassword: '',\n    mobile: '',\n    sms: '',\n    policy: false,\n  });\n\n  const { getFormRules } = useFormRules(formData);\n  const { validForm } = useFormValid(formRef);\n\n  const getShow = computed(() => unref(getLoginState) === LoginStateEnum.REGISTER);\n\n  async function handleRegister() {\n    const data = await validForm();\n    if (!data) return;\n    console.log(data);\n  }\n</script>\n"],"names":["FormItem","Form","InputPassword","Input","useI18n","handleBackLogin","getLoginState","useLoginState","formRef","ref","loading","formData","reactive","getFormRules","useFormRules","validForm","useFormValid","getShow","computed","unref","LoginStateEnum","handleRegister","__async","data"],"mappings":"upBA4EE,MAAMA,EAAWC,EAAK,KAChBC,EAAgBC,EAAM,SACtB,CAAE,GAAMC,IACR,CAAE,gBAAAC,EAAiB,cAAAC,CAAc,EAAIC,EAAc,EAEnDC,EAAUC,IACVC,EAAUD,EAAI,EAAK,EAEnBE,EAAWC,EAAS,CACxB,QAAS,GACT,SAAU,GACV,gBAAiB,GACjB,OAAQ,GACR,IAAK,GACL,OAAQ,EAAA,CACT,EAEK,CAAE,aAAAC,CAAA,EAAiBC,EAAaH,CAAQ,EACxC,CAAE,UAAAI,CAAA,EAAcC,EAAaR,CAAO,EAEpCS,EAAUC,EAAS,IAAMC,EAAMb,CAAa,IAAMc,EAAe,QAAQ,EAE/E,SAAeC,GAAiB,QAAAC,EAAA,sBACxB,MAAAC,EAAO,MAAMR,IACdQ,GACL,QAAQ,IAAIA,CAAI,CAClB"}