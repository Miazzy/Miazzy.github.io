{"version":3,"file":"index-8f8e76e3.js","sources":["../../src/views/bpm/manage/definition/index.vue"],"sourcesContent":["<template>\n  <div>\n    <ContentWrap>\n      <el-table v-loading=\"loading\" :data=\"list\">\n        <el-table-column label=\"定义编号\" align=\"center\" prop=\"id\" width=\"400\" />\n        <el-table-column label=\"流程名称\" align=\"center\" prop=\"name\" width=\"200\">\n          <template #default=\"scope\">\n            <el-button type=\"primary\" link @click=\"handleBpmnDetail(scope.row)\">\n              <span>{{ scope.row.name }}</span>\n            </el-button>\n          </template>\n        </el-table-column>\n        <el-table-column label=\"定义分类\" align=\"center\" prop=\"category\" width=\"100\">\n          <template #default=\"scope\">\n            <dict-tag :type=\"DICT_TYPE.BPM_MODEL_CATEGORY\" :value=\"scope.row.category\" />\n          </template>\n        </el-table-column>\n        <el-table-column label=\"表单信息\" align=\"center\" prop=\"formType\" width=\"200\">\n          <template #default=\"scope\">\n            <el-button\n              v-if=\"scope.row.formType === 10\"\n              type=\"primary\"\n              link\n              @click=\"handleFormDetail(scope.row)\"\n            >\n              <span>{{ scope.row.formName }}</span>\n            </el-button>\n            <el-button v-else type=\"primary\" link @click=\"handleFormDetail(scope.row)\">\n              <span>{{ scope.row.formCustomCreatePath }}</span>\n            </el-button>\n          </template>\n        </el-table-column>\n        <el-table-column label=\"流程版本\" align=\"center\" prop=\"processDefinition.version\" width=\"80\">\n          <template #default=\"scope\">\n            <el-tag v-if=\"scope.row\">v{{ scope.row.version }}</el-tag>\n            <el-tag type=\"warning\" v-else>未部署</el-tag>\n          </template>\n        </el-table-column>\n        <el-table-column label=\"状态\" align=\"center\" prop=\"version\" width=\"80\">\n          <template #default=\"scope\">\n            <el-tag type=\"success\" v-if=\"scope.row.suspensionState === 1\">激活</el-tag>\n            <el-tag type=\"warning\" v-if=\"scope.row.suspensionState === 2\">挂起</el-tag>\n          </template>\n        </el-table-column>\n        <el-table-column\n          label=\"部署时间\"\n          align=\"center\"\n          prop=\"deploymentTime\"\n          width=\"180\"\n          :formatter=\"dateFormatter\"\n        />\n        <el-table-column\n          label=\"定义描述\"\n          align=\"center\"\n          prop=\"description\"\n          width=\"300\"\n          show-overflow-tooltip\n        />\n        <el-table-column label=\"操作\" align=\"center\" width=\"150\" fixed=\"right\">\n          <template #default=\"scope\">\n            <el-button\n              link\n              type=\"primary\"\n              @click=\"handleAssignRule(scope.row)\"\n              v-hasPermi=\"['bpm:task-assign-rule:query']\"\n            >\n              分配规则\n            </el-button>\n          </template>\n        </el-table-column>\n      </el-table>\n      <!-- 分页 -->\n      <Pagination\n        :total=\"total\"\n        v-model:page=\"queryParams.pageNo\"\n        v-model:limit=\"queryParams.pageSize\"\n        @pagination=\"getList\"\n      />\n    </ContentWrap>\n\n    <Dialog\n      :title=\"`表单详情`\"\n      v-model:visible=\"iframeVisible\"\n      :width=\"1000\"\n      :height=\"800\"\n      :showBtm=\"false\"\n    >\n      <TaskAssignRule :modelId=\"modelId\" />\n    </Dialog>\n\n    <!-- 弹窗：表单详情 -->\n    <Dialog\n      :title=\"`表单详情`\"\n      v-model:visible=\"formDetailVisible\"\n      :width=\"800\"\n      :height=\"800\"\n      :showBtm=\"false\"\n    >\n      <form-create :rule=\"formDetailPreview.rule\" :option=\"formDetailPreview.option\" />\n    </Dialog>\n\n    <!-- 弹窗：流程模型图的预览 -->\n    <Dialog\n      :title=\"`流程图`\"\n      v-model:visible=\"bpmnDetailVisible\"\n      :width=\"800\"\n      :height=\"800\"\n      :overflowY=\"'scroll'\"\n      :overflowX=\"'scroll'\"\n      :showBtm=\"false\"\n    >\n      <MyProcessViewer\n        key=\"designer\"\n        v-model=\"bpmnXML\"\n        :value=\"bpmnXML as any\"\n        v-bind=\"bpmnControlForm\"\n        :prefix=\"bpmnControlForm.prefix\"\n      />\n    </Dialog>\n  </div>\n</template>\n\n<script lang=\"ts\" setup>\n  import { DICT_TYPE } from '@/utils/dict';\n  import { dateFormatter } from '@/utils/dateUtil';\n  import { MyProcessViewer } from '@/components/Bpm/package';\n  import * as DefinitionApi from '@/api/bpm/definition';\n  import { setConfAndFields2 } from '@/utils/formCreate';\n  import { ref, reactive, onMounted } from 'vue';\n  import { useRouter, useRoute } from 'vue-router';\n  import Dialog from '@/components/Framework/Modal/Dialog.vue';\n  import TaskAssignRule from '@/views/bpm/manage/taskAssignRule/index.vue';\n\n  defineOptions({ name: 'BpmProcessDefinition' });\n\n  const { query } = useRoute(); // 查询参数\n  const router = useRouter(); // 路由\n  const loading = ref(true); // 列表的加载中\n  const total = ref(0); // 列表的总页数\n  const list = ref([]); // 列表的数据\n  const iframeVisible = ref(false); // 列表的加载中\n  const modelId = ref('');\n  const queryParams = reactive({\n    pageNo: 1,\n    pageSize: 10,\n    key: query.key,\n  });\n\n  /** 查询列表 */\n  const getList = async () => {\n    loading.value = true;\n    try {\n      const data = await DefinitionApi.getProcessDefinitionPage(queryParams);\n      list.value = data.list;\n      total.value = data.total;\n    } finally {\n      loading.value = false;\n    }\n  };\n\n  /** 点击任务分配按钮 */\n  const handleAssignRule = (row) => {\n    modelId.value = query.modelId as String;\n    iframeVisible.value = true;\n  };\n\n  /** 流程表单的详情按钮操作 */\n  const formDetailVisible = ref(false);\n  const formDetailPreview = ref({\n    rule: [],\n    option: {},\n  });\n  const handleFormDetail = async (row) => {\n    if (row.formType == 10) {\n      // 设置表单\n      setConfAndFields2(formDetailPreview, row.formConf, row.formFields);\n      // 弹窗打开\n      formDetailVisible.value = true;\n    } else {\n      await push({\n        path: row.formCustomCreatePath,\n      });\n    }\n  };\n\n  /** 流程图的详情按钮操作 */\n  const bpmnDetailVisible = ref(false);\n  const bpmnXML = ref(null);\n  const bpmnControlForm = ref({\n    prefix: 'flowable',\n  });\n  const handleBpmnDetail = async (row) => {\n    bpmnDetailVisible.value = true;\n    bpmnXML.value = await DefinitionApi.getProcessDefinitionBpmnXML(row.id);\n  };\n\n  /** 初始化 **/\n  onMounted(() => {\n    getList();\n  });\n</script>\n"],"names":["query","useRoute","useRouter","loading","ref","total","list","iframeVisible","modelId","queryParams","reactive","getList","__async","data","DefinitionApi.getProcessDefinitionPage","handleAssignRule","row","formDetailVisible","formDetailPreview","handleFormDetail","setConfAndFields2","bpmnDetailVisible","bpmnXML","bpmnControlForm","handleBpmnDetail","DefinitionApi.getProcessDefinitionBpmnXML","onMounted"],"mappings":"q8BAuIQ,KAAA,CAAE,MAAAA,GAAUC,IACHC,GAAU,EACnB,MAAAC,EAAUC,EAAI,EAAI,EAClBC,EAAQD,EAAI,CAAC,EACbE,EAAOF,EAAI,CAAA,CAAE,EACbG,EAAgBH,EAAI,EAAK,EACzBI,EAAUJ,EAAI,EAAE,EAChBK,EAAcC,GAAS,CAC3B,OAAQ,EACR,SAAU,GACV,IAAKV,EAAM,GAAA,CACZ,EAGKW,EAAU,IAAYC,EAAA,sBAC1BT,EAAQ,MAAQ,GACZ,GAAA,CACF,MAAMU,EAAO,MAAMC,EAAuCL,CAAW,EACrEH,EAAK,MAAQO,EAAK,KAClBR,EAAM,MAAQQ,EAAK,KAAA,QACnB,CACAV,EAAQ,MAAQ,EAClB,CAAA,GAIIY,EAAoBC,GAAQ,CAChCR,EAAQ,MAAQR,EAAM,QACtBO,EAAc,MAAQ,EAAA,EAIlBU,EAAoBb,EAAI,EAAK,EAC7Bc,EAAoBd,EAAI,CAC5B,KAAM,CAAC,EACP,OAAQ,CAAC,CAAA,CACV,EACKe,EAA0BH,GAAQJ,EAAA,sBAClCI,EAAI,UAAY,IAElBI,EAAkBF,EAAmBF,EAAI,SAAUA,EAAI,UAAU,EAEjEC,EAAkB,MAAQ,IAE1B,MAAM,KAAK,CACT,KAAMD,EAAI,oBAAA,CACX,CACH,GAIIK,EAAoBjB,EAAI,EAAK,EAC7BkB,EAAUlB,EAAI,IAAI,EAClBmB,EAAkBnB,EAAI,CAC1B,OAAQ,UAAA,CACT,EACKoB,EAA0BR,GAAQJ,EAAA,sBACtCS,EAAkB,MAAQ,GAC1BC,EAAQ,MAAQ,MAAMG,EAA0CT,EAAI,EAAE,CAAA,GAIxE,OAAAU,GAAU,IAAM,CACNf,GAAA,CACT"}