{"version":3,"file":"index-6a89e4a4.js","sources":["../../src/views/bi/elec/planned/data.ts","../../src/views/bi/elec/planned/index.vue"],"sourcesContent":["import { BasicColumn, FormProps } from '/@/components/Table';\nimport { defHttp } from '/@/utils/http/axios';\nimport dayjs from 'dayjs';\nimport { useUserStore } from '/@/store/modules/user';\n\nenum Api {\n  getOrgInfoUrl = '/bi/common/org/info',\n\n  getStationUrl = '/baseset/common/list-station',\n\n  getPlannedElecUrl = '/bi/elec/planned',\n\n  exportExcelUrl = '/bi/elec/export-planned',\n}\n\n//导出\nexport const exportExcel = (params) =>\n  defHttp.post(\n    { url: Api.exportExcelUrl, params, responseType: 'blob' },\n    { isReturnNativeResponse: true },\n  );\n\nexport const getPlannedElecData = (params) =>\n  defHttp.get({ url: Api.getPlannedElecUrl, params }, { isOnlyResult: true });\n\nexport const getOrgInfoData = (params) =>\n  defHttp.get({ url: Api.getOrgInfoUrl, params }, { isOnlyResult: true });\n\nexport const getStationData = (params) => {\n  return defHttp.post({ url: Api.getStationUrl, params });\n};\n\nexport const searchFormSchema: Partial<FormProps> = {\n  labelWidth: 120,\n  actionColOptions: {\n    span: 24,\n  },\n  autoAdvancedLine: 1,\n  showAdvancedButton: true,\n  baseColProps: {\n    span: 7,\n  },\n  autoSubmitOnEnter: true,\n  noHideBtnFlag: true,\n  schemas: [\n    {\n      field: `yearValue`,\n      label: `年份`,\n      required: true,\n      component: 'YearPicker',\n      defaultValue: dayjs(new Date()).format('YYYY'),\n      componentProps: {\n        format: 'YYYY',\n        valueFormat: 'YYYY',\n        style: { width: '100%' },\n      },\n    },\n    {\n      field: `orgId`,\n      label: `所属公司`,\n      component: 'ApiSelect',\n      componentProps: {\n        options: [],\n        api: getOrgInfoData,\n        placeholder: '请选择所属公司',\n      },\n      show: useUserStore().isMultiOrganization,\n    },\n    {\n      field: `stationId`,\n      label: `电站名称`,\n      component: 'ApiSelect',\n      componentProps: {\n        options: [],\n        api: async () => {\n          const sts = await getStationData({});\n          const map: any = [];\n          sts.result.forEach((e) => {\n            map.push({ value: e.powerStationId, label: e.powerStationName });\n          });\n\n          return map;\n        },\n        placeholder: '请输入电站名称',\n      },\n    },\n    {\n      field: `periodName`,\n      label: `期数`,\n      component: 'Input',\n      componentProps: { placeholder: '请输入期数名称' },\n    },\n  ],\n};\n\nexport const columns: BasicColumn[] = [\n  {\n    title: '所属公司',\n    dataIndex: 'stationOrganName',\n    width: 150,\n    customCell: (record) => ({ rowSpan: record.rowOrgSpan }),\n    resizable: true,\n    ifShow: useUserStore().isMultiOrganization,\n  },\n  {\n    title: '电站名称',\n    dataIndex: 'stationName',\n    width: 150,\n    customCell: (record) => ({ rowSpan: record.rowStationSpan }),\n    resizable: true,\n  },\n  {\n    title: '分期',\n    dataIndex: 'periodName',\n    width: 150,\n    customCell: (record) => ({ rowSpan: record.rowPeriodSpan }),\n    resizable: true,\n  },\n  {\n    title: '并网容量(MW)',\n    dataIndex: 'connectCapacity',\n    width: 150,\n    resizable: true,\n    customCell: (record) => ({ rowSpan: record.rowPeriodSpan }),\n  },\n  {\n    title: '线损率(%)',\n    dataIndex: 'lineLossRate',\n    width: 150,\n    resizable: true,\n    customCell: (record) => ({ rowSpan: record.rowPeriodSpan }),\n  },\n  { title: '类型', dataIndex: 'type', width: 150, resizable: true },\n  { title: '当前完成情况', dataIndex: 'thisTotal', width: 150, resizable: true },\n  { title: '当年完成情况', dataIndex: 'fullTotal', width: 150, resizable: true },\n  { title: '1月', dataIndex: 'jan', width: 150, resizable: true },\n  { title: '2月', dataIndex: 'feb', width: 150, resizable: true },\n  { title: '3月', dataIndex: 'mar', width: 150, resizable: true },\n  { title: '4月', dataIndex: 'apr', width: 150, resizable: true },\n  { title: '5月', dataIndex: 'may', width: 150, resizable: true },\n  { title: '6月', dataIndex: 'jun', width: 150, resizable: true },\n  { title: '7月', dataIndex: 'jul', width: 150, resizable: true },\n  { title: '8月', dataIndex: 'aug', width: 150, resizable: true },\n  { title: '9月', dataIndex: 'sept', width: 150, resizable: true },\n  { title: '10月', dataIndex: 'oct', width: 150, resizable: true },\n  { title: '11月', dataIndex: 'nov', width: 150, resizable: true },\n  { title: '12月', dataIndex: 'dev', width: 150, resizable: true },\n];\n","<template>\n  <PageWrapper dense contentFullHeight fixedHeight contentClass=\"flex\" style=\"position: relative\">\n    <BasicTable @register=\"registerTable\" @resize-column=\"(w, col) => (col.width = w)\">\n      <template #toolbar>\n        <a-button class=\"yellow-btn\" :preIcon=\"IconEnum.EXPORT\" @click=\"handleExport\">{{\n          t('common.action.export')\n        }}</a-button>\n      </template>\n    </BasicTable>\n  </PageWrapper>\n</template>\n<script lang=\"ts\" setup>\n  import { BasicTable, useTable } from '@/components/Table';\n  import { columns, searchFormSchema, getPlannedElecData, exportExcel } from './data';\n  import { useRouter } from 'vue-router';\n  import { onMounted, unref, reactive } from 'vue';\n  import * as DateUtil from '/@/utils/dateUtil';\n  import { useMessage } from '@/hooks/web/useMessage';\n  import { useI18n } from '@/hooks/web/useI18n';\n  import { IconEnum } from '@/enums/appEnum';\n  import { exportExcelFile } from '/@/utils/file/download';\n  import { PageWrapper } from '/@/components/Page';\n\n  const { t } = useI18n();\n  const { createConfirm, createMessage } = useMessage();\n\n  //导出\n  const queryParam: any = reactive({});\n  function handleExport() {\n    createConfirm({\n      title: t('common.message.confirmTitle'),\n      iconType: 'warning',\n      content: t('common.message.exportMessage'),\n      async onOk() {\n        Object.assign(queryParam, getForm().getFieldsValue());\n        queryParam.filename = '计划电量统计.xls';\n        queryParam.excelList = columns;\n        await exportExcel(queryParam).then((res) => {\n          exportExcelFile(res?.data, queryParam.filename);\n        });\n        queryParam.filename = null;\n        queryParam.excelList = null;\n        createMessage.success(t('common.exportSuccessText'));\n      },\n    });\n  }\n\n  //-----------------跳转相关--------------------\n  const router = useRouter();\n  const { currentRoute } = router;\n  const route = unref(currentRoute);\n  const query = route.query;\n\n  const getResultData = async () => {\n    let params = getForm().getFieldsValue();\n    let dataObj = await getPlannedElecData(params);\n    return dataObj;\n  };\n  onMounted(async () => {\n    if (query) {\n      const values = getForm().getFieldsValue();\n      //针对穿透赋值\n      if (query.startDate) {\n        values.yearValue = DateUtil.formatToDate(query.startDate, 'YYYY');\n      }\n      if (query.stationId != null) {\n        values.stationId = query.stationId;\n      }\n      if (query.orgId != null) {\n        values.orgId = query.orgId;\n      }\n      getForm().setFieldsValue(values);\n    }\n  });\n\n  const [registerTable, { getForm }] = useTable({\n    title: '计划电量统计',\n    api: getResultData,\n    columns: columns,\n    formConfig: searchFormSchema,\n    useSearchForm: true,\n    bordered: true,\n    pagination: false,\n    showIndexColumn: true,\n    showTableSetting: true,\n    tableSetting: {\n      redo: false,\n      size: false,\n      setting: true,\n      fullScreen: false,\n    },\n    afterFetch: function (data) {\n      const count = {};\n      for (let index = 0; index < data.length; index++) {\n        const element = data[index];\n        if (count[element.stationOrganId]) {\n          count[element.stationOrganId]++;\n        }\n        if (count[element.stationId]) {\n          count[element.stationId]++;\n        }\n        if (count[element.periodId]) {\n          count[element.periodId]++;\n        }\n\n        if (!count[element.stationOrganId]) {\n          count[element.stationOrganId] = 1;\n        }\n        if (!count[element.stationId]) {\n          count[element.stationId] = 1;\n        }\n        if (!count[element.periodId]) {\n          count[element.periodId] = 1;\n        }\n      }\n\n      for (let index = 0; index < data.length; index++) {\n        const element = data[index];\n        for (const key in count) {\n          if (element.stationOrganId === key) {\n            element.rowOrgSpan = count[key];\n            count[key] = 0;\n          }\n          if (element.stationId === key) {\n            element.rowStationSpan = count[key];\n            count[key] = 0;\n          }\n          if (element.periodId === key) {\n            element.rowPeriodSpan = count[key];\n            count[key] = 0;\n          }\n        }\n      }\n      return data;\n    },\n  });\n</script>\n"],"names":["exportExcel","params","defHttp","getPlannedElecData","getOrgInfoData","getStationData","searchFormSchema","dayjs","useUserStore","__async","sts","map","e","columns","record","t","useI18n","createConfirm","createMessage","useMessage","queryParam","reactive","handleExport","getForm","res","exportExcelFile","router","useRouter","currentRoute","query","unref","getResultData","onMounted","values","DateUtil.formatToDate","registerTable","useTable","data","count","index","element","key"],"mappings":"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"}