{"version":3,"file":"VideoMonitor-7dfc3af5.js","sources":["../../src/views/da/stationOperation/device/VideoMonitor.vue"],"sourcesContent":["<template>\n  <div class=\"video-monitor\">\n    <div class=\"device-status-info-layout\">\n      <DeviceStatusInfo3\n        icon=\"shipinjiankong\"\n        :total=\"total\"\n        :online=\"18\"\n        :offline=\"3\"\n        :onlineShow=\"false\"\n        label=\"视频监控\"\n      />\n    </div>\n    <div class=\"content-layout\">\n      <div class=\"data-box\">\n        <div class=\"search-box\">\n          <a-input-search\n            class=\"operation-screen-input-search\"\n            v-model:value=\"deviceSearchValue\"\n            placeholder=\"请输入关键词\"\n            style=\"width: 100%\"\n            @search=\"onDeviceSearch\"\n          />\n        </div>\n        <div class=\"list-box\">\n          <a-tree\n            class=\"operation-screen-tree\"\n            blockNode\n            v-model:selectedKeys=\"selectedKeys\"\n            :tree-data=\"treeData\"\n            @select=\"handleSelect\"\n          >\n            <template #title=\"{ onlineStatus, title, children }\">\n              <div class=\"device-tree-node\">\n                <span :class=\"{ 'device-name': !children }\">{{ title }}</span>\n                <span v-if=\"onlineStatus === 1\" class=\"online-text\">在线</span>\n                <span v-if=\"onlineStatus === 0\" class=\"offline-text\">离线</span>\n              </div>\n            </template>\n          </a-tree>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\" setup>\n  import { ref, onMounted, UnwrapRef, reactive } from 'vue';\n  import type { TreeProps } from 'ant-design-vue';\n  import DeviceStatusInfo3 from '/@/components/Framework/OperationScreen/DeviceStatusInfo3.vue';\n  import StationInfoItem from '/@/components/Framework/OperationScreen/StationInfoItem.vue';\n  import { TreeItem } from '/@/components/Tree';\n  import { defHttp } from '/@/utils/http/axios';\n  import { assign } from 'lodash-es';\n\n  const stationSearchValue = ref('');\n  const onStationSearch = (value: string) => {\n    console.log('onStationSearch', value);\n  };\n  const monitorSearchInfo: UnwrapRef<any> = reactive({});\n  interface Props {\n    searchStationInfo?: {};\n  }\n  const props = withDefaults(defineProps<Props>(), {});\n  const emit = defineEmits(['select']);\n  const deviceSearchValue = ref('');\n  const treeData = ref<TreeItem[]>([]);\n  let total = 0;\n  const getTreeData = (params) =>\n    defHttp.post(\n      {\n        url: '/baseset/videoInfo/listStationVideoTree',\n        params,\n      },\n      {},\n    );\n  const onDeviceSearch = async (value: string) => {\n    console.log('onDeviceSearch', value);\n    const typeList = await getTreeData({\n      powerStationId: monitorSearchInfo.stationUUId,\n      name: value,\n    });\n    treeData.value = typeList.result.list as unknown[] as TreeItem[];\n    total = typeList.result.total;\n  };\n\n  // 左侧树状菜单选中事件\n  function handleSelect(value, node, extra) {\n    emit('select', node.node);\n  }\n\n  // 查询左侧树数据\n  async function queryTreeList(powerStationId) {\n    const typeList = await getTreeData({ powerStationId: powerStationId });\n    treeData.value = typeList.result.list as unknown[] as TreeItem[];\n    total = typeList.result.total;\n  }\n\n  onMounted(() => {\n    assign(monitorSearchInfo, props.searchStationInfo);\n\n    queryTreeList(monitorSearchInfo.stationUUId);\n  });\n\n  const treeData2: TreeProps['treeData'] = ref([\n    {\n      title: '黑龙江绥化电站',\n      key: '1',\n      children: [\n        {\n          title: '仓库',\n          key: '1-1',\n          onlineStatus: 1,\n        },\n        {\n          title: '大门',\n          key: '1-2',\n          onlineStatus: 1,\n        },\n        {\n          title: '1#方阵',\n          key: '1-3',\n          onlineStatus: 0,\n        },\n      ],\n    },\n  ]);\n  const selectedKeys = ref<string[]>([]);\n</script>\n\n<style lang=\"less\" scoped>\n  .video-monitor {\n    .device-status-info-layout {\n      width: 100%;\n      margin-bottom: 0.24rem;\n      padding: 0.28rem 0.36rem 0;\n    }\n\n    .content-layout {\n      padding: 0 0.3rem;\n\n      .list-box {\n        height: 64.33vh;\n        overflow-y: auto;\n        background-color: rgb(6 26 51 / 60%);\n\n        .device-tree-node {\n          display: flex;\n          align-items: center;\n          justify-content: space-between;\n\n          .device-name {\n            font-size: 0.12rem;\n          }\n\n          .online-text {\n            color: #52c41a;\n            font-size: 0.12rem;\n          }\n\n          .offline-text {\n            color: #ff4d4f;\n            font-size: 0.12rem;\n          }\n        }\n      }\n    }\n  }\n</style>\n"],"names":["ref","monitorSearchInfo","reactive","deviceSearchValue","treeData","total","getTreeData","params","defHttp","onDeviceSearch","value","__async","typeList","handleSelect","node","extra","emit","queryTreeList","powerStationId","onMounted","assign","props","selectedKeys"],"mappings":"m1BAsD6BA,EAAI,EAAE,EAI3B,MAAAC,EAAoCC,EAAS,CAAA,CAAE,EAM/CC,EAAoBH,EAAI,EAAE,EAC1BI,EAAWJ,EAAgB,CAAA,CAAE,EACnC,IAAIK,EAAQ,EACN,MAAAC,EAAeC,GACnBC,EAAQ,KACN,CACE,IAAK,0CACL,OAAAD,CACF,EACA,CAAC,CAAA,EAECE,EAAwBC,GAAkBC,EAAA,sBACtC,QAAA,IAAI,iBAAkBD,CAAK,EAC7B,MAAAE,EAAW,MAAMN,EAAY,CACjC,eAAgBL,EAAkB,YAClC,KAAMS,CAAA,CACP,EACQN,EAAA,MAAQQ,EAAS,OAAO,KACjCP,EAAQO,EAAS,OAAO,KAAA,GAIjB,SAAAC,EAAaH,EAAOI,EAAMC,EAAO,CACnCC,EAAA,SAAUF,EAAK,IAAI,CAC1B,CAGA,SAAeG,EAAcC,EAAgB,QAAAP,EAAA,sBAC3C,MAAMC,EAAW,MAAMN,EAAY,CAAE,eAAAY,CAAgC,CAAA,EAC5Dd,EAAA,MAAQQ,EAAS,OAAO,KACjCP,EAAQO,EAAS,OAAO,KAC1B,GAEAO,EAAU,IAAM,CACPC,EAAAnB,EAAmBoB,EAAM,iBAAiB,EAEjDJ,EAAchB,EAAkB,WAAW,CAAA,CAC5C,EAEwCD,EAAI,CAC3C,CACE,MAAO,UACP,IAAK,IACL,SAAU,CACR,CACE,MAAO,KACP,IAAK,MACL,aAAc,CAChB,EACA,CACE,MAAO,KACP,IAAK,MACL,aAAc,CAChB,EACA,CACE,MAAO,OACP,IAAK,MACL,aAAc,CAChB,CACF,CACF,CAAA,CACD,EACK,MAAAsB,EAAetB,EAAc,CAAA,CAAE"}