{"version":3,"file":"index-bc80676b.js","sources":["../../src/views/bpm/manage/processInstance/processInstance.data.ts","../../src/views/bpm/manage/processInstance/index.vue"],"sourcesContent":["import { assign, forEach } from 'min-dash';\nimport { useRender } from '@/components/Table';\n\nconst bpmProcessInstanceResult = [\n  {\n    dictType: 'bpm_process_instance_result',\n    value: '1',\n    label: '处理中',\n    colorType: 'primary',\n    cssClass: '',\n  },\n  {\n    dictType: 'bpm_process_instance_result',\n    value: '2',\n    label: '通过',\n    colorType: 'success',\n    cssClass: '',\n  },\n  {\n    dictType: 'bpm_process_instance_result',\n    value: '3',\n    label: '不通过',\n    colorType: 'danger',\n    cssClass: '',\n  },\n  {\n    dictType: 'bpm_process_instance_result',\n    value: '4',\n    label: '已取消',\n    colorType: 'info',\n    cssClass: '',\n  },\n  {\n    dictType: 'bpm_process_instance_result',\n    value: '5',\n    label: '已终止',\n    colorType: 'info',\n    cssClass: '',\n  },\n  {\n    dictType: 'bpm_process_instance_result',\n    value: '6',\n    label: '退回/驳回',\n    colorType: 'info',\n    cssClass: '',\n  },\n];\n\nconst bpmModelCategory = [\n  {\n    dictType: 'bpm_model_category',\n    value: '1',\n    label: '默认',\n    colorType: 'primary',\n    cssClass: '',\n  },\n  {\n    dictType: 'bpm_model_category',\n    value: '2',\n    label: 'OA',\n    colorType: 'success',\n    cssClass: '',\n  },\n];\n\nconst bpmProcessInstanceStatus = [\n  {\n    dictType: 'bpm_process_instance_status',\n    value: '1',\n    label: '进行中',\n    colorType: 'primary',\n    cssClass: '',\n  },\n  {\n    dictType: 'bpm_process_instance_status',\n    value: '2',\n    label: '已完成',\n    colorType: 'success',\n    cssClass: '',\n  },\n];\n\nexport const searchFormSchema: FormSchema[] = [\n  {\n    label: '单据编号',\n    field: 'businessCode',\n    component: 'Input',\n    colProps: { span: 8 },\n  },\n  {\n    label: '流程名称',\n    field: 'name',\n    component: 'Input',\n    colProps: { span: 8 },\n  },\n  // {\n  //   label: '所属流程',\n  //   field: 'processDefinitionId',\n  //   component: 'Input',\n  //   colProps: { span: 8 },\n  // },\n  // {\n  //   label: '流程分类',\n  //   field: 'category',\n  //   component: 'Select',\n  //   componentProps: {\n  //     options: bpmModelCategory,\n  //   },\n  //   colProps: { span: 8 },\n  // },\n  {\n    label: '状态',\n    field: 'status',\n    component: 'Select',\n    componentProps: {\n      options: bpmProcessInstanceStatus,\n    },\n    colProps: { span: 8 },\n  },\n  {\n    label: '结果',\n    field: 'result',\n    component: 'Select',\n    componentProps: {\n      options: bpmProcessInstanceResult,\n    },\n    colProps: { span: 8 },\n  },\n  {\n    label: '提交时间',\n    field: 'createTime',\n    component: 'RangePicker',\n    componentProps: {\n      showTime: true,\n      format: 'YYYY-MM-DD HH:mm:ss',\n      valueFormat: 'x',\n    },\n    colProps: { span: 8 },\n  },\n];\n\nexport const columns: BasicColumn[] = [\n  {\n    title: '单据编号',\n    dataIndex: 'businessCode',\n    width: 150,\n  },\n  {\n    title: '标题',\n    dataIndex: 'description',\n    width: 200,\n  },\n  {\n    title: '流程名称',\n    dataIndex: 'name',\n    width: 200,\n  },\n  // {\n  //   title: '流程分类',\n  //   dataIndex: 'category',\n  //   width: 200,\n  //   customRender: ({ text }) => {\n  //     return getTypeObj('bpmModelCategory', text)['label'];\n  //     //return useRender.renderDict(text, DICT_TYPE.BPM_OA_LEAVE_TYPE);\n  //   },\n  // },\n  {\n    title: '当前审批任务',\n    dataIndex: 'tasks',\n    width: 100,\n    customRender: ({ record }) => {\n      const tasks = record.tasks;\n      if (tasks != null && tasks.length > 0) {\n        return tasks[0].name;\n      }\n      return '';\n    },\n  },\n  {\n    title: '状态',\n    dataIndex: 'status',\n    width: 100,\n    customRender: ({ text }) => {\n      return getTypeObj('bpmProcessInstanceStatus', text)['label'];\n      // return useRender.renderDict(text, 'bpmProcessInstanceStatus');\n    },\n  },\n  {\n    title: '结果',\n    dataIndex: 'result',\n    width: 100,\n    customRender: ({ text }) => {\n      return getTypeObj('bpmProcessInstanceResult', text)['label'];\n      // return useRender.renderDict(text, 'bpmProcessInstanceResult');\n    },\n  },\n  {\n    title: '申请时间',\n    dataIndex: 'createTime',\n    width: 200,\n    customRender: ({ text }) => {\n      return useRender.renderDate(text);\n    },\n  },\n  {\n    title: '结束时间',\n    dataIndex: 'endTime',\n    width: 200,\n    customRender: ({ text }) => {\n      return useRender.renderDate(text);\n    },\n  },\n];\n\nexport function getTypeObj(dictType: string, type: any) {\n  const obj = {};\n  if (dictType == 'bpmModelCategory') {\n    forEach(bpmModelCategory, function (def) {\n      if (def.value === type.toString()) {\n        assign(obj, def);\n      }\n    });\n  } else if (dictType == 'bpmProcessInstanceStatus') {\n    forEach(bpmProcessInstanceStatus, function (def) {\n      if (def.value === type.toString()) {\n        assign(obj, def);\n      }\n    });\n  } else if (dictType == 'bpmProcessInstanceResult') {\n    forEach(bpmProcessInstanceResult, function (def) {\n      if (def.value === type.toString()) {\n        assign(obj, def);\n      }\n    });\n  }\n  return obj;\n}\n","<script lang=\"ts\" setup>\n  import { onMounted } from 'vue';\n  import { ElMessageBox } from 'element-plus';\n  import { columns, searchFormSchema } from './processInstance.data';\n  import { useI18n } from '@/hooks/web/useI18n';\n  import { useMessage } from '@/hooks/web/useMessage';\n  import { IconEnum } from '@/enums/appEnum';\n  import { BasicTable, useTable, TableAction } from '@/components/Table';\n\n  import * as ProcessInstanceApi from '@/api/bpm/processInstance';\n  import { addTabPage } from '@/utils/route';\n  import { MsgManager } from '/@/message/MsgManager';\n\n  defineOptions({ name: 'BpmProcessInstance' });\n\n  const { t } = useI18n();\n  const { createMessage } = useMessage();\n\n  const [registerTable, { reload }] = useTable({\n    title: '我的流程',\n    api: ProcessInstanceApi.getMyProcessInstancePage,\n    columns,\n    formConfig: { labelWidth: 120, schemas: searchFormSchema },\n    useSearchForm: true,\n    showTableSetting: true,\n    bordered: true,\n    actionColumn: {\n      width: 140,\n      title: t('common.operate'),\n      dataIndex: 'action',\n      fixed: 'right',\n    },\n  });\n\n  /** 查看详情 */\n  const handleDetail = (row) => {\n    // router.push({\n    //   name: 'BpmProcessInstanceDetail',\n    //   query: {\n    //     id: row.id,\n    //   },\n    // });\n    addTabPage(`${row.bpmProcessDefinitionRespVO.formCustomViewPath}?processInstanceId=${row.id}`);\n  };\n\n  /** 取消按钮操作 */\n  const handleCancel = async (row) => {\n    // 二次确认\n    const { value } = await ElMessageBox.prompt('请输入取消原因', '取消流程', {\n      confirmButtonText: t('common.ok'),\n      cancelButtonText: t('common.cancel'),\n      inputPattern: /^[\\s\\S]*.*\\S[\\s\\S]*$/, // 判断非空，且非空格\n      inputErrorMessage: '取消原因不能为空',\n    });\n    // 发起取消\n    await ProcessInstanceApi.cancelProcessInstance(row.id, value);\n    createMessage.success('取消成功');\n    // 刷新列表\n    await reload();\n  };\n\n  onMounted(() => {\n    MsgManager.getInstance().listen('workflow-task-done', () => {\n      setTimeout(() => {\n        reload(); // 此处需延时一段时间再查询数据，否则数据后端还未处理，可能是原数据\n      }, 500);\n    });\n  });\n</script>\n<template>\n  <div>\n    <BasicTable @register=\"registerTable\">\n      <template #bodyCell=\"{ column, record }\">\n        <template v-if=\"column.key === 'action'\">\n          <TableAction\n            :actions=\"[\n              {\n                icon: IconEnum.VIEW,\n                label: '详情',\n                onClick: handleDetail.bind(null, record),\n              },\n              {\n                icon: IconEnum.DELETE,\n                danger: true,\n                label: '取消',\n                ifShow: () => {\n                  return record.result === 1;\n                },\n                popConfirm: {\n                  title: t('common.message.delMessage'),\n                  placement: 'left',\n                  confirm: handleCancel.bind(null, record),\n                },\n              },\n            ]\"\n          />\n        </template>\n      </template>\n    </BasicTable>\n  </div>\n</template>\n<style lang=\"less\" scoped>\n  :deep(.vben-basic-table-action.center) {\n    justify-content: left;\n  }\n</style>\n"],"names":["bpmProcessInstanceResult","bpmModelCategory","bpmProcessInstanceStatus","searchFormSchema","columns","record","tasks","text","getTypeObj","useRender","dictType","type","obj","forEach","def","assign","t","useI18n","createMessage","useMessage","registerTable","reload","useTable","ProcessInstanceApi.getMyProcessInstancePage","handleDetail","row","addTabPage","handleCancel","__async","value","ElMessageBox","ProcessInstanceApi.cancelProcessInstance","onMounted","MsgManager"],"mappings":"6rCAGA,MAAMA,EAA2B,CAC/B,CACE,SAAU,8BACV,MAAO,IACP,MAAO,MACP,UAAW,UACX,SAAU,EACZ,EACA,CACE,SAAU,8BACV,MAAO,IACP,MAAO,KACP,UAAW,UACX,SAAU,EACZ,EACA,CACE,SAAU,8BACV,MAAO,IACP,MAAO,MACP,UAAW,SACX,SAAU,EACZ,EACA,CACE,SAAU,8BACV,MAAO,IACP,MAAO,MACP,UAAW,OACX,SAAU,EACZ,EACA,CACE,SAAU,8BACV,MAAO,IACP,MAAO,MACP,UAAW,OACX,SAAU,EACZ,EACA,CACE,SAAU,8BACV,MAAO,IACP,MAAO,QACP,UAAW,OACX,SAAU,EACZ,CACF,EAEMC,EAAmB,CACvB,CACE,SAAU,qBACV,MAAO,IACP,MAAO,KACP,UAAW,UACX,SAAU,EACZ,EACA,CACE,SAAU,qBACV,MAAO,IACP,MAAO,KACP,UAAW,UACX,SAAU,EACZ,CACF,EAEMC,EAA2B,CAC/B,CACE,SAAU,8BACV,MAAO,IACP,MAAO,MACP,UAAW,UACX,SAAU,EACZ,EACA,CACE,SAAU,8BACV,MAAO,IACP,MAAO,MACP,UAAW,UACX,SAAU,EACZ,CACF,EAEaC,EAAiC,CAC5C,CACE,MAAO,OACP,MAAO,eACP,UAAW,QACX,SAAU,CAAE,KAAM,CAAE,CACtB,EACA,CACE,MAAO,OACP,MAAO,OACP,UAAW,QACX,SAAU,CAAE,KAAM,CAAE,CACtB,EAgBA,CACE,MAAO,KACP,MAAO,SACP,UAAW,SACX,eAAgB,CACd,QAASD,CACX,EACA,SAAU,CAAE,KAAM,CAAE,CACtB,EACA,CACE,MAAO,KACP,MAAO,SACP,UAAW,SACX,eAAgB,CACd,QAASF,CACX,EACA,SAAU,CAAE,KAAM,CAAE,CACtB,EACA,CACE,MAAO,OACP,MAAO,aACP,UAAW,cACX,eAAgB,CACd,SAAU,GACV,OAAQ,sBACR,YAAa,GACf,EACA,SAAU,CAAE,KAAM,CAAE,CACtB,CACF,EAEaI,EAAyB,CACpC,CACE,MAAO,OACP,UAAW,eACX,MAAO,GACT,EACA,CACE,MAAO,KACP,UAAW,cACX,MAAO,GACT,EACA,CACE,MAAO,OACP,UAAW,OACX,MAAO,GACT,EAUA,CACE,MAAO,SACP,UAAW,QACX,MAAO,IACP,aAAc,CAAC,CAAE,OAAAC,KAAa,CAC5B,MAAMC,EAAQD,EAAO,MACrB,OAAIC,GAAS,MAAQA,EAAM,OAAS,EAC3BA,EAAM,CAAC,EAAE,KAEX,EACT,CACF,EACA,CACE,MAAO,KACP,UAAW,SACX,MAAO,IACP,aAAc,CAAC,CAAE,KAAAC,KACRC,EAAW,2BAA4BD,CAAI,EAAE,KAGxD,EACA,CACE,MAAO,KACP,UAAW,SACX,MAAO,IACP,aAAc,CAAC,CAAE,KAAAA,KACRC,EAAW,2BAA4BD,CAAI,EAAE,KAGxD,EACA,CACE,MAAO,OACP,UAAW,aACX,MAAO,IACP,aAAc,CAAC,CAAE,KAAAA,KACRE,EAAU,WAAWF,CAAI,CAEpC,EACA,CACE,MAAO,OACP,UAAW,UACX,MAAO,IACP,aAAc,CAAC,CAAE,KAAAA,KACRE,EAAU,WAAWF,CAAI,CAEpC,CACF,EAEgB,SAAAC,EAAWE,EAAkBC,EAAW,CACtD,MAAMC,EAAM,CAAA,EACZ,OAAIF,GAAY,mBACNG,EAAAZ,EAAkB,SAAUa,EAAK,CACnCA,EAAI,QAAUH,EAAK,SAAA,GACrBI,EAAOH,EAAKE,CAAG,CACjB,CACD,EACQJ,GAAY,2BACbG,EAAAX,EAA0B,SAAUY,EAAK,CAC3CA,EAAI,QAAUH,EAAK,SAAA,GACrBI,EAAOH,EAAKE,CAAG,CACjB,CACD,EACQJ,GAAY,4BACbG,EAAAb,EAA0B,SAAUc,EAAK,CAC3CA,EAAI,QAAUH,EAAK,SAAA,GACrBI,EAAOH,EAAKE,CAAG,CACjB,CACD,EAEIF,CACT,8DC7NQ,KAAA,CAAE,EAAAI,GAAMC,IACR,CAAE,cAAAC,GAAkBC,IAEpB,CAACC,EAAe,CAAE,OAAAC,CAAQ,CAAA,EAAIC,EAAS,CAC3C,MAAO,OACP,IAAKC,EACL,QAAAnB,EACA,WAAY,CAAE,WAAY,IAAK,QAASD,CAAiB,EACzD,cAAe,GACf,iBAAkB,GAClB,SAAU,GACV,aAAc,CACZ,MAAO,IACP,MAAOa,EAAE,gBAAgB,EACzB,UAAW,SACX,MAAO,OACT,CAAA,CACD,EAGKQ,EAAgBC,GAAQ,CAO5BC,EAAW,GAAGD,EAAI,2BAA2B,kBAAkB,sBAAsBA,EAAI,EAAE,EAAE,CAAA,EAIzFE,EAAsBF,GAAQG,EAAA,sBAElC,KAAM,CAAE,MAAAC,CAAM,EAAI,MAAMC,EAAa,OAAO,UAAW,OAAQ,CAC7D,kBAAmBd,EAAE,WAAW,EAChC,iBAAkBA,EAAE,eAAe,EACnC,aAAc,uBACd,kBAAmB,UAAA,CACpB,EAED,MAAMe,EAAyCN,EAAI,GAAII,CAAK,EAC5DX,EAAc,QAAQ,MAAM,EAE5B,MAAMG,EAAO,CAAA,GAGf,OAAAW,EAAU,IAAM,CACdC,EAAW,YAAY,EAAE,OAAO,qBAAsB,IAAM,CAC1D,WAAW,IAAM,CACRZ,KACN,GAAG,CAAA,CACP,CAAA,CACF"}