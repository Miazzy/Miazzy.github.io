{"version":3,"file":"data-46d0e574.js","sources":["../../src/views/po/integrated/personcertificate/data.ts"],"sourcesContent":["import { defHttp } from '/@/utils/http/axios';\nimport { BasicColumn, FormProps } from '/@/components/Table';\nimport { useUserStore } from '/@/store/modules/user';\n\nenum Api {\n  getStationTreeUrl = '/baseset/common/list-orgStationTree',\n  getStationPersonUrl = '/baseset/common/list-stationPerson',\n  getPersoncertificatePageUrl = '/po/person-certificate/page',\n  getPersoncertificateUrl = '/po/person-certificate/get',\n  insertPersoncertificateUrl = '/po/person-certificate/create',\n  updatePersoncertificateUrl = '/po/person-certificate/update',\n  deletePersoncertificateUrl = '/po/person-certificate/delete',\n  getPersoncertificateDtlUrl = '/po/person-certificate/dtl-list',\n  exprotPersoncertificateListUrl = '/po/person-certificate/export-excel',\n}\n// 电站树数据\nexport const getStationTreeList = (params) =>\n  defHttp.post({ url: Api.getStationTreeUrl, params }, { isOnlyResult: true });\n\n//根据电站组织id获取电站人员列表\nexport const getStationPersonList = (params) =>\n  defHttp.post({ url: Api.getStationPersonUrl, params }, { isOnlyResult: true });\n\n//获取主列表数据\nexport const getPersoncertificateList = (params) =>\n  defHttp.get({ url: Api.getPersoncertificatePageUrl, params }, { isOnlyResult: true });\n\n//根据Id获取主表信息\nexport const getPersoncertificate = (params) =>\n  defHttp.get({ url: Api.getPersoncertificateUrl, params }, {});\n\n//保存\nexport const savePersoncertificate = (params) => {\n  if (!params.id) {\n    return insertPersoncertificate(params);\n  }\n  return updatePersoncertificate(params);\n};\n\n//新增数据\nexport const insertPersoncertificate = (params) =>\n  defHttp.post({ url: Api.insertPersoncertificateUrl, params }, { isOnlyResult: true });\n\n//修改数据\nexport const updatePersoncertificate = (params) =>\n  defHttp.post({ url: Api.updatePersoncertificateUrl, params }, { isOnlyResult: true });\n\n//删除数据\nexport const deletePersoncertificate = (params) =>\n  defHttp.delete({ url: Api.deletePersoncertificateUrl, params }, { isOnlyResult: true });\n\n//获取明细列表数据\nexport const getPersoncertificateDtlList = (params) =>\n  defHttp.get({ url: Api.getPersoncertificateDtlUrl, params }, { isOnlyResult: true });\n\n//导出\nexport const exprotPersoncertificate = (params) =>\n  defHttp.download({ url: Api.exprotPersoncertificateListUrl, params }, {});\n\n// 表格SearchForm字段\nexport const searchFormSchema: Partial<FormProps> = {\n  labelWidth: 120,\n  actionColOptions: {\n    span: 24,\n  },\n  autoAdvancedLine: 1,\n  showAdvancedButton: true,\n  baseColProps: {\n    span: 7,\n  },\n  autoSubmitOnEnter: true,\n  noHideBtnFlag: true,\n  schemas: [\n    {\n      field: `person`,\n      label: `姓名`,\n      component: 'Input',\n      componentProps: { placeholder: '请输入姓名' },\n    },\n    {\n      field: `certificateType`,\n      label: `证书类型`,\n      component: 'DictSelectBox',\n      componentProps: {\n        type: 'certificate',\n      },\n    },\n    {\n      field: `status`,\n      label: `状态`,\n      component: 'DictSelectBox',\n      componentProps: {\n        type: 'personnelStatus',\n      },\n    },\n  ],\n};\n\n//主页列表字段展示\nexport const columns: BasicColumn[] = [\n  {\n    title: '所属公司',\n    dataIndex: 'stationOrganName',\n    width: 150,\n    sorter: true,\n    resizable: true,\n    ifShow: useUserStore().isMultiOrganization,\n  },\n  { title: '电站名称', dataIndex: 'stationName', width: 150, sorter: true, resizable: true },\n  { title: '姓名', dataIndex: 'person', width: 80, sorter: true, resizable: true },\n  {\n    title: '状态',\n    dataIndex: 'status',\n    width: 80,\n    sorter: true,\n    resizable: true,\n    customRender: ({ record }) => {\n      return record.statusText;\n    },\n  },\n  {\n    title: '岗位',\n    dataIndex: 'postion',\n    width: 80,\n    sorter: true,\n    resizable: true,\n    customRender: ({ record }) => {\n      return record.postionText;\n    },\n  },\n  {\n    title: '性别',\n    dataIndex: 'sex',\n    width: 80,\n    sorter: true,\n    resizable: true,\n    customRender: ({ record }) => {\n      return record.sexText;\n    },\n  },\n  { title: '出生日期', dataIndex: 'birthday', width: 120, sorter: true, resizable: true },\n  { title: '年龄', dataIndex: 'age', width: 80, sorter: true, resizable: true },\n  {\n    title: '学历',\n    dataIndex: 'education',\n    width: 100,\n    sorter: true,\n    resizable: true,\n    customRender: ({ record }) => {\n      return record.educationText;\n    },\n  },\n  { title: '证书类型', dataIndex: 'certificateTypes', width: 220, resizable: true },\n  { title: '电话', dataIndex: 'phone', width: 120, sorter: true, resizable: true },\n  { title: '邮箱', dataIndex: 'email', width: 120, sorter: true, resizable: true },\n  { title: '入职日期', dataIndex: 'joinDate', sorter: true, resizable: true },\n];\n\n//明细表格字段显示\nexport const dtlColumns: BasicColumn[] = [\n  { title: 'id', dataIndex: 'id', width: 150, defaultHidden: true },\n  { title: '证书类型', dataIndex: 'certificateType', editRow: true, editRule: true },\n  { title: '证书名称', dataIndex: 'certificateName', editRow: true, editRule: true },\n  { title: '颁证机构', dataIndex: 'issuingAuthority', editRow: true, editRule: true },\n  { title: '证书附件', dataIndex: 'bizFileId', width: 160, editRow: true, editRule: true },\n  { title: 'sort', dataIndex: 'sort', defaultHidden: true },\n];\n\n//明细表格设置\nexport const detailTableProps: any = {\n  pagination: false,\n  striped: false,\n  useSearchForm: false,\n  showTableSetting: false,\n  bordered: true,\n  showIndexColumn: true,\n  canResize: false,\n  actionColumn: {\n    width: 80,\n    title: '操作',\n    dataIndex: 'action',\n  },\n};\n"],"names":["getStationTreeList","params","defHttp","getStationPersonList","getPersoncertificateList","getPersoncertificate","savePersoncertificate","updatePersoncertificate","insertPersoncertificate","deletePersoncertificate","getPersoncertificateDtlList","exprotPersoncertificate","searchFormSchema","columns","useUserStore","record","dtlColumns"],"mappings":"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"}