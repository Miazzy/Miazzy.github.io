{"version":3,"file":"index-233c6094.js","sources":["../../src/views/bi/maintenance/ticket/data.ts","../../src/views/bi/maintenance/ticket/index.vue"],"sourcesContent":["import { defHttp } from '/@/utils/http/axios';\nimport { BasicColumn } from '/@/components/Table';\nimport { FormSchema } from '@/components/Form';\nimport * as CommonApi from '/@/api/baseset/common';\nimport dayjs from 'dayjs';\nimport { useUserStore } from '/@/store/modules/user';\n\nexport enum Api {\n  LIST_URL = '/bi/maintenance/ticket/list',\n  EXPORT_EXCEL_URL = '/bi/maintenance/ticket/export-excel',\n  LIST_ORG_URL = '/bi/common/org/info',\n}\n\n// 获得两票统计列表\nexport const getList = (params) =>\n  defHttp.get(\n    {\n      url: Api.LIST_URL,\n      params,\n    },\n    { isOnlyResult: true },\n  );\n\n// 导出两票统计列表\nexport const exportExcel = (params) =>\n  defHttp.download(\n    {\n      url: Api.EXPORT_EXCEL_URL,\n      params,\n    },\n    { isReturnNativeResponse: true },\n  );\n\n// 获得组织列表\nexport const getOrgList = (params) =>\n  defHttp.get(\n    {\n      url: Api.LIST_ORG_URL,\n      params,\n    },\n    { isOnlyResult: true },\n  );\n\nconst baseColumns: BasicColumn[] = [\n  {\n    title: '操作票',\n    children: [\n      {\n        title: '开票数',\n        dataIndex: 'operationTotal',\n        headAlign: 'center',\n        align: 'right',\n        resizable: true,\n        width: 120,\n      },\n      {\n        title: '归档完成数',\n        dataIndex: 'operationDone',\n        headAlign: 'center',\n        align: 'right',\n        resizable: true,\n        width: 120,\n      },\n      {\n        title: '归档合格数',\n        dataIndex: 'operationQualified',\n        headAlign: 'center',\n        align: 'right',\n        resizable: true,\n        width: 120,\n      },\n      {\n        title: '合格率(%)',\n        dataIndex: 'operationQualifiedRate',\n        headAlign: 'center',\n        align: 'right',\n        resizable: true,\n        width: 120,\n      },\n    ],\n  },\n  {\n    title: '电气第一种工作票',\n    children: [\n      {\n        title: '开票数',\n        dataIndex: 'firstTotal',\n        headAlign: 'center',\n        align: 'right',\n        resizable: true,\n        width: 120,\n      },\n      {\n        title: '归档完成数',\n        dataIndex: 'firstDone',\n        headAlign: 'center',\n        align: 'right',\n        resizable: true,\n        width: 120,\n      },\n      {\n        title: '归档合格数',\n        dataIndex: 'firstQualified',\n        headAlign: 'center',\n        align: 'right',\n        resizable: true,\n        width: 120,\n      },\n      {\n        title: '合格率(%)',\n        dataIndex: 'firstQualifiedRate',\n        headAlign: 'center',\n        align: 'right',\n        resizable: true,\n        width: 120,\n      },\n    ],\n  },\n  {\n    title: '电气第二种工作票',\n    children: [\n      {\n        title: '开票数',\n        dataIndex: 'secondTotal',\n        headAlign: 'center',\n        align: 'right',\n        resizable: true,\n        width: 120,\n      },\n      {\n        title: '归档完成数',\n        dataIndex: 'secondDone',\n        headAlign: 'center',\n        align: 'right',\n        resizable: true,\n        width: 120,\n      },\n      {\n        title: '归档合格数',\n        dataIndex: 'secondQualified',\n        headAlign: 'center',\n        align: 'right',\n        resizable: true,\n        width: 120,\n      },\n      {\n        title: '合格率(%)',\n        dataIndex: 'secondQualifiedRate',\n        headAlign: 'center',\n        align: 'right',\n        resizable: true,\n        width: 120,\n      },\n    ],\n  },\n];\n\nexport const organColumns: BasicColumn[] = [\n  {\n    title: '所属公司',\n    dataIndex: 'stationOrganName',\n    headAlign: 'center',\n    align: 'left',\n    resizable: true,\n    width: 220,\n  },\n  ...baseColumns,\n];\n\nexport const stationColumns: BasicColumn[] = [\n  {\n    title: '所属公司',\n    dataIndex: 'stationOrganName',\n    headAlign: 'center',\n    align: 'left',\n    resizable: true,\n    width: 220,\n    customCell: (record) => ({\n      rowSpan: record.rowSpan,\n    }),\n    ifShow: useUserStore().isMultiOrganization,\n  },\n  {\n    title: '电站名称',\n    dataIndex: 'stationName',\n    headAlign: 'center',\n    align: 'left',\n    resizable: true,\n    width: 220,\n  },\n  ...baseColumns,\n];\n\nconst currentYear = String(dayjs().year());\nexport const getFormSearchSchemas = (stationParams): FormSchema[] => {\n  return [\n    {\n      field: 'dateType',\n      label: '时间维度',\n      component: 'Select',\n      defaultValue: 'year',\n      componentProps: ({ formModel }) => {\n        return {\n          options: [\n            { value: 'year', label: '年度' },\n            { value: 'month', label: '月份' },\n          ],\n          onChange: (value) => {\n            if (value === 'year') {\n              formModel['[startMonth, endMonth]'] = [];\n            } else if (value === 'month') {\n              formModel.year = '';\n            } else {\n              formModel.year = '';\n              formModel['[startMonth, endMonth]'] = [];\n            }\n          },\n        };\n      },\n    },\n    {\n      field: 'year',\n      label: '年度',\n      component: 'DatePicker',\n      defaultValue: currentYear,\n      componentProps: {\n        format: 'YYYY',\n        valueFormat: 'YYYY',\n        picker: 'year',\n        style: 'width: 100%',\n      },\n      show: ({ values }) => {\n        return values.dateType === 'year';\n      },\n    },\n    {\n      field: '[startMonth, endMonth]',\n      label: '月份',\n      component: 'RangePicker',\n      componentProps: {\n        format: 'YYYY-MM',\n        valueFormat: 'YYYY-MM',\n        picker: 'month',\n        placeholder: ['开始月份', '结束月份'],\n        style: 'width: 100%',\n      },\n      show: ({ values }) => {\n        return values.dateType === 'month';\n      },\n    },\n    {\n      field: 'stationOrganId',\n      label: '所属公司',\n      component: 'ApiSelect',\n      componentProps: ({ formModel }) => {\n        return {\n          api: async () => {\n            const data = await getOrgList({});\n            const options: any = [];\n            if (data && data.length > 0) {\n              data.forEach((item) => {\n                options.push({ value: item.id, label: item.label });\n              });\n            }\n            return options;\n          },\n          onChange: (value) => {\n            stationParams.organId = value;\n            formModel.stationIds = [];\n          },\n        };\n      },\n      show: useUserStore().isMultiOrganization,\n    },\n    {\n      field: 'stationIds',\n      label: '电站名称',\n      component: 'ApiSelect',\n      componentProps: {\n        api: async () => {\n          const data = await CommonApi.getStationList({ ...stationParams });\n          const options: any = [];\n          if (data && data.length > 0) {\n            data.forEach((item) => {\n              options.push({ value: item.id, label: item.name });\n            });\n          }\n          return options;\n        },\n        mode: 'multiple',\n        maxTagCount: 'responsive',\n        filterOption: (input: string, option: any) => {\n          return option.label.toLowerCase().indexOf(input.toLowerCase()) >= 0;\n        },\n      },\n    },\n  ];\n};\n","<template>\n  <div class=\"tab-model\">\n    <div class=\"tab-button-div\">\n      <BasicForm @register=\"formRegister\" @advanced-change=\"advancedChange\" />\n    </div>\n\n    <div id=\"ticket-table-tab-content\" class=\"tab-table-div tab-table-content\">\n      <a-tabs v-model:activeKey=\"activeKey\" @change=\"handleTabsChange\">\n        <a-tab-pane v-if=\"useUserStore().isMultiOrganization\" key=\"1\" tab=\"统计报表\">\n          <BasicTable @register=\"registerTable\" @resize-column=\"(w, col) => (col.width = w)\">\n            <template #toolbar>\n              <a-button class=\"yellow-btn\" :preIcon=\"IconEnum.EXPORT\" @click=\"handleExport\">{{\n                t('common.action.export')\n              }}</a-button>\n            </template>\n          </BasicTable>\n        </a-tab-pane>\n        <a-tab-pane key=\"2\" tab=\"电站明细\" force-render>\n          <BasicTable @register=\"registerStationTable\" @resize-column=\"(w, col) => (col.width = w)\">\n            <template #toolbar>\n              <a-button\n                class=\"yellow-btn\"\n                :preIcon=\"IconEnum.EXPORT\"\n                @click=\"handleStationExport\"\n                >{{ t('common.action.export') }}</a-button\n              >\n            </template>\n          </BasicTable>\n        </a-tab-pane>\n      </a-tabs>\n    </div>\n  </div>\n</template>\n<script lang=\"ts\" setup>\n  import { onMounted, ref, reactive } from 'vue';\n  import { useMessage } from '/@/hooks/web/useMessage';\n  import { useI18n } from '/@/hooks/web/useI18n';\n  import { IconEnum } from '/@/enums/appEnum';\n  import { BasicForm, useForm } from '@/components/Form';\n  import { BasicTable, useTable } from '/@/components/Table';\n  import { exportExcelFile } from '/@/utils/file/download';\n  import { urlToPath } from '/@/utils/route';\n  import { organColumns, stationColumns, getFormSearchSchemas, getList, exportExcel } from './data';\n  import dayjs from 'dayjs';\n  import { useUserStore } from '/@/store/modules/user';\n\n  const { t } = useI18n();\n  const { createConfirm, createMessage } = useMessage();\n  const stationParams = reactive({ organId: null });\n  const { params: routeQuery } = urlToPath();\n  const activeKey = ref('1');\n  if (!useUserStore().isMultiOrganization || routeQuery.dimension === 'station') {\n    activeKey.value = '2';\n  }\n\n  const [formRegister, { resetFields, getFieldsValue, setFieldsValue }] = useForm({\n    labelWidth: 120,\n    baseColProps: { span: 8 },\n    actionColOptions: {\n      span: 24,\n    },\n    autoAdvancedLine: 1,\n    schemas: getFormSearchSchemas(stationParams),\n    compact: true,\n    showAdvancedButton: true,\n    resetButtonOptions: {\n      onClick: async () => {\n        await resetFields();\n        stationParams.organId = null;\n        reload();\n        reloadStation();\n      },\n    },\n    submitFunc: () => {\n      reload();\n      reloadStation();\n      return Promise.resolve();\n    },\n  });\n\n  const getParam = (isStation: boolean) => {\n    const query = { ...getFieldsValue() };\n    query.isStation = isStation;\n    if (query.stationIds && query.stationIds.length > 0) {\n      query.stationId = query.stationIds.join(',');\n    }\n    let param = {} as any;\n    for (const key in query) {\n      if (key === 'stationIds') {\n        continue;\n      }\n      param[key] = query[key];\n    }\n    if (param.startMonth) {\n      param.startMonth = dayjs(param.startMonth).format('YYYY-MM');\n    }\n    if (param.endMonth) {\n      param.endMonth = dayjs(param.endMonth).format('YYYY-MM');\n    }\n    return param as any;\n  };\n\n  const getListByParam = async (isStation: boolean) => {\n    const query = getParam(isStation);\n    return await getList(query);\n  };\n\n  const [registerTable, { reload, redoHeight }] = useTable({\n    api: () => getListByParam(false),\n    target: '#ticket-table-tab-content',\n    targetTabKey: '1',\n    targetTabValue: activeKey,\n    columns: organColumns,\n    useSearchForm: false,\n    bordered: true,\n    pagination: false,\n    showTableSetting: false,\n    tableSetting: { fullScreen: true },\n    showIndexColumn: true,\n  });\n\n  const [registerStationTable, { reload: reloadStation, redoHeight: redoHeightStation }] = useTable(\n    {\n      api: () => getListByParam(true),\n      target: '#ticket-table-tab-content',\n      targetTabKey: '2',\n      targetTabValue: activeKey,\n      columns: stationColumns,\n      useSearchForm: false,\n      bordered: true,\n      pagination: false,\n      showTableSetting: false,\n      tableSetting: { fullScreen: true },\n      showIndexColumn: true,\n      afterFetch: function (data) {\n        const count = {};\n        for (let index = 0; index < data.length; index++) {\n          const element = data[index];\n          if (count[element.stationOrganId]) {\n            count[element.stationOrganId]++;\n            continue;\n          }\n          count[element.stationOrganId] = 1;\n        }\n        for (let index = 0; index < data.length; index++) {\n          const element = data[index];\n          for (const key in count) {\n            if (element.stationOrganId === key) {\n              element.rowSpan = count[key];\n              count[key] = 0;\n            }\n          }\n        }\n        return data;\n      },\n    },\n  );\n\n  function handleExport() {\n    exportCommonExcel(false, '统计报表.xls');\n  }\n\n  function handleStationExport() {\n    exportCommonExcel(true, '电站明细.xls');\n  }\n\n  function exportCommonExcel(isStation: boolean, filename: string) {\n    createConfirm({\n      title: t('common.message.confirmTitle'),\n      iconType: 'warning',\n      content: t('common.message.exportMessage'),\n      async onOk() {\n        const query = getParam(isStation);\n        query.filename = filename;\n        await exportExcel(query).then((res) => {\n          exportExcelFile(res?.data, query.filename);\n        });\n        query.filename = null;\n        createMessage.success(t('common.exportSuccessText'));\n      },\n    });\n  }\n\n  const handleTabsChange = (activeKey) => {\n    if (activeKey === '1') {\n      reload();\n    } else if (activeKey === '2') {\n      reloadStation();\n    }\n  };\n\n  const advancedChange = () => {\n    if (activeKey.value === '1') {\n      redoHeight();\n    } else if (activeKey.value === '2') {\n      redoHeightStation();\n    }\n  };\n\n  onMounted(() => {\n    const params = { ...routeQuery };\n    if (params.startDate) {\n      params.startMonth = routeQuery.startDate;\n    }\n    if (params.endDate) {\n      params.endMonth = routeQuery.endDate;\n    }\n    if (params.stationIds) {\n      params.stationIds = params.stationIds.split(',');\n    } else {\n      params.stationIds = [];\n    }\n    setFieldsValue(params);\n  });\n</script>\n<style lang=\"less\" scoped>\n  @import '/@/design/biz/bizList.less';\n</style>\n"],"names":["getList","params","defHttp","exportExcel","getOrgList","baseColumns","organColumns","stationColumns","record","useUserStore","currentYear","dayjs","getFormSearchSchemas","stationParams","formModel","value","values","__async","data","options","item","CommonApi.getStationList","__spreadValues","input","option","t","useI18n","createConfirm","createMessage","useMessage","reactive","routeQuery","urlToPath","activeKey","ref","formRegister","resetFields","getFieldsValue","setFieldsValue","useForm","reload","reloadStation","getParam","isStation","query","param","key","getListByParam","registerTable","redoHeight","useTable","registerStationTable","redoHeightStation","count","index","element","handleExport","exportCommonExcel","handleStationExport","filename","res","exportExcelFile","handleTabsChange","advancedChange","onMounted"],"mappings":"wiDAca,MAAAA,GAAWC,GACtBC,EAAQ,IACN,CACE,IAAK,8BACL,OAAAD,CACF,EACA,CAAE,aAAc,EAAK,CACvB,EAGWE,GAAeF,GAC1BC,EAAQ,SACN,CACE,IAAK,sCACL,OAAAD,CACF,EACA,CAAE,uBAAwB,EAAK,CACjC,EAGWG,GAAcH,GACzBC,EAAQ,IACN,CACE,IAAK,sBACL,OAAAD,CACF,EACA,CAAE,aAAc,EAAK,CACvB,EAEII,EAA6B,CACjC,CACE,MAAO,MACP,SAAU,CACR,CACE,MAAO,MACP,UAAW,iBACX,UAAW,SACX,MAAO,QACP,UAAW,GACX,MAAO,GACT,EACA,CACE,MAAO,QACP,UAAW,gBACX,UAAW,SACX,MAAO,QACP,UAAW,GACX,MAAO,GACT,EACA,CACE,MAAO,QACP,UAAW,qBACX,UAAW,SACX,MAAO,QACP,UAAW,GACX,MAAO,GACT,EACA,CACE,MAAO,SACP,UAAW,yBACX,UAAW,SACX,MAAO,QACP,UAAW,GACX,MAAO,GACT,CACF,CACF,EACA,CACE,MAAO,WACP,SAAU,CACR,CACE,MAAO,MACP,UAAW,aACX,UAAW,SACX,MAAO,QACP,UAAW,GACX,MAAO,GACT,EACA,CACE,MAAO,QACP,UAAW,YACX,UAAW,SACX,MAAO,QACP,UAAW,GACX,MAAO,GACT,EACA,CACE,MAAO,QACP,UAAW,iBACX,UAAW,SACX,MAAO,QACP,UAAW,GACX,MAAO,GACT,EACA,CACE,MAAO,SACP,UAAW,qBACX,UAAW,SACX,MAAO,QACP,UAAW,GACX,MAAO,GACT,CACF,CACF,EACA,CACE,MAAO,WACP,SAAU,CACR,CACE,MAAO,MACP,UAAW,cACX,UAAW,SACX,MAAO,QACP,UAAW,GACX,MAAO,GACT,EACA,CACE,MAAO,QACP,UAAW,aACX,UAAW,SACX,MAAO,QACP,UAAW,GACX,MAAO,GACT,EACA,CACE,MAAO,QACP,UAAW,kBACX,UAAW,SACX,MAAO,QACP,UAAW,GACX,MAAO,GACT,EACA,CACE,MAAO,SACP,UAAW,sBACX,UAAW,SACX,MAAO,QACP,UAAW,GACX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"}