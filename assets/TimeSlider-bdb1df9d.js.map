{"version":3,"file":"TimeSlider-bdb1df9d.js","sources":["../../src/views/da/components/TimeSlider.vue"],"sourcesContent":["<template>\n  <div id=\"time-slider-container\">\n    <a-slider\n      class=\"time-slider\"\n      range\n      v-model:value=\"innerTimeValues\"\n      tooltipVisible\n      :marks=\"timeMarks\"\n      :max=\"max\"\n      :getTooltipPopupContainer=\"getTimeSliderContainer\"\n      @afterChange=\"handleSliderChange\"\n      :tipFormatter=\"tipFormatter\"\n    >\n      <template #mark=\"{ label }\">\n        <span class=\"time-slider-mark\">{{ label }}</span>\n      </template>\n    </a-slider>\n  </div>\n</template>\n\n<script lang=\"ts\" setup>\n  import dayjs from 'dayjs';\n  import { computed, ref, watch } from 'vue';\n\n  const props = defineProps({\n    startTime: String,\n    endTime: String,\n    timeValues: Array, // 滑块的时间\n  });\n\n  const emit = defineEmits(['afterChange']);\n\n  // 时间滑块最大值\n  const max = computed(() => {\n    if (props.startTime && props.endTime) {\n      return dayjs(props.endTime).diff(props.startTime, 'minute');\n    } else {\n      return 100;\n    }\n  });\n  // 时间进度\n  const innerTimeValues = ref<[number, number]>([0, 0]);\n  // 两端的标记\n  const timeMarks = computed(() => {\n    return {\n      0: props.startTime ? props.startTime.split(' ')[1] : '',\n      [max.value]: props.endTime ? props.endTime.split(' ')[1] : '',\n    };\n  });\n  // 时间Tooltip 渲染父节点\n  const getTimeSliderContainer = () => {\n    return document.getElementById('time-slider-container');\n  };\n  // slider值改变时\n  const handleSliderChange = (value) => {\n    let leftTimeValue = getSliderTime(value[0]);\n    let rightTimeValue = getSliderTime(value[1]);\n    let timeStrs = [leftTimeValue, rightTimeValue];\n    emit('afterChange', timeStrs);\n    emit('update:timeValues', timeStrs);\n  };\n  function getSliderTime(value) {\n    return dayjs(props.startTime).add(value, 'minute').format('YYYY-MM-DD HH:mm');\n  }\n  // 转换tooltip时间为时分秒格式\n  const tipFormatter = (value) => {\n    let fullTime = getSliderTime(value);\n    return fullTime.split(' ')[1];\n  };\n\n  watch(\n    () => props.timeValues,\n    (newValue) => {\n      if (newValue[0] && newValue[1]) {\n        let startValue = dayjs(newValue[0]).diff(props.startTime, 'minute');\n        let endValue = dayjs(newValue[1]).diff(props.startTime, 'minute');\n        innerTimeValues.value = [startValue, endValue];\n      }\n    },\n    {\n      deep: true,\n    },\n  );\n</script>\n<style lang=\"less\">\n  [data-theme='dark'] .theme1 {\n    #time-slider-container {\n      .time-slider {\n        .ant-slider-rail {\n          background-color: rgb(255 255 255 / 60%);\n        }\n\n        .ant-slider-handle {\n          background: linear-gradient(180deg, #07a7dc, #2169e5);\n        }\n\n        .ant-slider-track {\n          background-color: #2c9bfc;\n        }\n      }\n\n      .time-slider.ant-slider:hover .ant-slider-rail {\n        background-color: rgb(255 255 255 / 60%);\n      }\n\n      .time-slider-mark {\n        color: #fff;\n      }\n    }\n  }\n\n  .theme3 {\n    #time-slider-container {\n      .time-slider {\n        .ant-slider-rail {\n          background-color: rgb(0 0 0 / 8%);\n        }\n\n        .ant-slider-handle {\n          background: linear-gradient(180deg, #07a7dc, #2169e5);\n        }\n\n        .ant-slider-track {\n          background-color: #2c9bfc;\n        }\n      }\n\n      .time-slider.ant-slider:hover .ant-slider-rail {\n        background-color: rgb(0 0 0 / 8%);\n      }\n\n      .time-slider-mark {\n        color: #262626;\n      }\n    }\n  }\n</style>\n<style lang=\"less\" scoped>\n  #time-slider-container {\n    position: relative;\n    flex: 1;\n\n    :deep(.ant-slider-tooltip) {\n      padding: 0;\n\n      .ant-tooltip-arrow {\n        display: none;\n      }\n    }\n\n    :deep(.ant-tooltip-inner) {\n      min-height: 12px;\n      margin-bottom: -3px;\n      padding: 0;\n      background: transparent;\n      box-shadow: none;\n      color: #2d9dfe;\n      font-size: 12px;\n    }\n\n    .time-slider-mark {\n      font-size: 12px;\n    }\n\n    :deep(.ant-slider-mark) {\n      .ant-slider-mark-text:first-child {\n        transform: translateX(0) !important;\n      }\n\n      .ant-slider-mark-text:last-child {\n        transform: translateX(-100%) !important;\n      }\n    }\n\n    .time-slider {\n      flex: 1;\n      margin: 20px 0;\n\n      :deep(.ant-slider-dot) {\n        display: none;\n      }\n\n      :deep(.ant-slider-handle) {\n        width: 12px;\n        height: 12px;\n        border: none;\n      }\n    }\n  }\n</style>\n"],"names":["max","computed","props","dayjs","innerTimeValues","ref","timeMarks","getTimeSliderContainer","handleSliderChange","value","leftTimeValue","getSliderTime","rightTimeValue","timeStrs","emit","tipFormatter","watch","newValue","startValue","endValue"],"mappings":"2XAiCQA,EAAMC,EAAS,IACfC,EAAM,WAAaA,EAAM,QACpBC,EAAMD,EAAM,OAAO,EAAE,KAAKA,EAAM,UAAW,QAAQ,EAEnD,GAEV,EAEKE,EAAkBC,EAAsB,CAAC,EAAG,CAAC,CAAC,EAE9CC,EAAYL,EAAS,KAClB,CACL,EAAGC,EAAM,UAAYA,EAAM,UAAU,MAAM,GAAG,EAAE,CAAC,EAAI,GACrD,CAACF,EAAI,KAAK,EAAGE,EAAM,QAAUA,EAAM,QAAQ,MAAM,GAAG,EAAE,CAAC,EAAI,EAAA,EAE9D,EAEKK,EAAyB,IACtB,SAAS,eAAe,uBAAuB,EAGlDC,EAAsBC,GAAU,CACpC,IAAIC,EAAgBC,EAAcF,EAAM,CAAC,CAAC,EACtCG,EAAiBD,EAAcF,EAAM,CAAC,CAAC,EACvCI,EAAW,CAACH,EAAeE,CAAc,EAC7CE,EAAK,cAAeD,CAAQ,EAC5BC,EAAK,oBAAqBD,CAAQ,CAAA,EAEpC,SAASF,EAAcF,EAAO,CACrB,OAAAN,EAAMD,EAAM,SAAS,EAAE,IAAIO,EAAO,QAAQ,EAAE,OAAO,kBAAkB,CAC9E,CAEM,MAAAM,EAAgBN,GACLE,EAAcF,CAAK,EAClB,MAAM,GAAG,EAAE,CAAC,EAG9B,OAAAO,EACE,IAAMd,EAAM,WACXe,GAAa,CACZ,GAAIA,EAAS,CAAC,GAAKA,EAAS,CAAC,EAAG,CAC1B,IAAAC,EAAaf,EAAMc,EAAS,CAAC,CAAC,EAAE,KAAKf,EAAM,UAAW,QAAQ,EAC9DiB,EAAWhB,EAAMc,EAAS,CAAC,CAAC,EAAE,KAAKf,EAAM,UAAW,QAAQ,EAChDE,EAAA,MAAQ,CAACc,EAAYC,CAAQ,CAC/C,CACF,EACA,CACE,KAAM,EACR,CAAA"}