{"version":3,"file":"index-f9e6c1ca.js","sources":["../../src/views/bi/oa/att/data.ts","../../src/views/bi/oa/att/index.vue"],"sourcesContent":["import { defHttp } from '/@/utils/http/axios';\nimport { reactive } from 'vue';\nimport { BasicColumn } from '/@/components/Table';\nimport type { FormProps } from '/@/components/Form/src/types/form';\nimport * as CommonApi from '/@/api/baseset/common';\nimport { useUserStore } from '/@/store/modules/user';\n\nexport enum Api {\n  PAGE_URL = '/bi/oa/att/page',\n  EXPORT_EXCEL_URL = '/bi/oa/att/export-excel',\n  LIST_ORG_URL = '/bi/common/org/info',\n}\n\n// 分页获得月排班统计列表\nexport const getPage = (params) =>\n  defHttp.get(\n    {\n      url: Api.PAGE_URL,\n      params,\n    },\n    { isOnlyResult: true },\n  );\n\n// 导出月排班统计列表\nexport const exportExcel = (params) =>\n  defHttp.post(\n    {\n      url: Api.EXPORT_EXCEL_URL,\n      params,\n      responseType: 'blob',\n    },\n    { isOnlyResult: true },\n  );\n\n// 获得组织列表\nexport const getOrgList = (params) =>\n  defHttp.get(\n    {\n      url: Api.LIST_ORG_URL,\n      params,\n    },\n    { isOnlyResult: true },\n  );\n\nexport const columns = (): BasicColumn[] => {\n  const result = [\n    {\n      title: '所属公司',\n      dataIndex: 'stationOrganName',\n      headAlign: 'center',\n      align: 'left',\n      sorter: true,\n      resizable: true,\n      width: 220,\n    },\n    {\n      title: '电站名称',\n      dataIndex: 'stationName',\n      headAlign: 'center',\n      align: 'left',\n      sorter: true,\n      resizable: true,\n      width: 220,\n    },\n    { title: '人员', dataIndex: 'personName', sorter: true, resizable: true, width: 120 },\n    {\n      title: '工作日白班数量',\n      dataIndex: 'weekdayQty',\n      headAlign: 'center',\n      align: 'right',\n      sorter: true,\n      resizable: true,\n      minWidth: 150,\n    },\n    {\n      title: '工作日夜班数量',\n      dataIndex: 'weekdayNightQty',\n      headAlign: 'center',\n      align: 'right',\n      sorter: true,\n      resizable: true,\n      minWidth: 150,\n    },\n    {\n      title: '节假日白班数量',\n      dataIndex: 'holidayQty',\n      headAlign: 'center',\n      align: 'right',\n      sorter: true,\n      resizable: true,\n      minWidth: 150,\n    },\n    {\n      title: '节假日夜班数量',\n      dataIndex: 'holidayNightQty',\n      headAlign: 'center',\n      align: 'right',\n      sorter: true,\n      resizable: true,\n      minWidth: 150,\n    },\n    {\n      title: '白班合计',\n      dataIndex: 'dayQty',\n      headAlign: 'center',\n      align: 'right',\n      sorter: true,\n      resizable: true,\n      minWidth: 150,\n    },\n    {\n      title: '夜班合计',\n      dataIndex: 'nightQty',\n      headAlign: 'center',\n      align: 'right',\n      sorter: true,\n      resizable: true,\n      minWidth: 150,\n    },\n  ];\n  if (useUserStore().isMultiOrganization) {\n    return result as BasicColumn[];\n  } else {\n    const [, ...others] = result;\n    return [...others] as BasicColumn[];\n  }\n};\n\nexport const getSearchForm = (): FormProps => {\n  const stationParams = reactive({ organId: null });\n  return {\n    baseColProps: { span: 8 },\n    labelWidth: 120,\n    autoAdvancedLine: 1,\n    schemas: [\n      {\n        field: '[startMonth, endMonth]',\n        label: '月份',\n        component: 'RangePicker',\n        componentProps: {\n          format: 'YYYY-MM',\n          valueFormat: 'YYYY-MM',\n          picker: 'month',\n          placeholder: ['开始月份', '结束月份'],\n          style: 'width: 100%',\n        },\n      },\n      {\n        field: 'stationOrganId',\n        label: '所属公司',\n        component: 'ApiSelect',\n        componentProps: ({ formModel }) => {\n          return {\n            api: async () => {\n              const data = await getOrgList({});\n              const options: any = [];\n              if (data && data.length > 0) {\n                data.forEach((item) => {\n                  options.push({ value: item.id, label: item.label });\n                });\n              }\n              return options;\n            },\n            immediate: false,\n            onChange: (value) => {\n              stationParams.organId = value;\n              formModel.stationIds = [];\n            },\n          };\n        },\n        show: useUserStore().isMultiOrganization,\n      },\n      {\n        field: 'stationIds',\n        label: '电站名称',\n        component: 'ApiSelect',\n        componentProps: {\n          api: async () => {\n            const data = await CommonApi.getStationList({ ...stationParams });\n            const options: any = [];\n            if (data && data.length > 0) {\n              data.forEach((item) => {\n                options.push({ value: item.id, label: item.name });\n              });\n            }\n            return options;\n          },\n          mode: 'multiple',\n          maxTagCount: 'responsive',\n          filterOption: (input: string, option: any) => {\n            return option.label.toLowerCase().indexOf(input.toLowerCase()) >= 0;\n          },\n        },\n      },\n    ],\n  };\n};\n","<template>\n  <PageWrapper dense contentFullHeight fixedHeight contentClass=\"flex\" style=\"position: relative\">\n    <BasicTable\n      class=\"fix-basic-table\"\n      @register=\"registerTable\"\n      :searchInfo=\"searchInfo\"\n      @resize-column=\"(w, col) => (col.width = w)\"\n    >\n      <template #toolbar>\n        <a-button class=\"yellow-btn\" :preIcon=\"IconEnum.EXPORT\" @click=\"handleExport\">{{\n          t('common.action.export')\n        }}</a-button>\n      </template>\n    </BasicTable>\n  </PageWrapper>\n</template>\n<script lang=\"ts\" setup>\n  import { reactive, ref } from 'vue';\n  import { useMessage } from '/@/hooks/web/useMessage';\n  import { useI18n } from '/@/hooks/web/useI18n';\n  import { IconEnum } from '/@/enums/appEnum';\n  import { BasicTable, useTable, SorterResult } from '/@/components/Table';\n  import { PageWrapper } from '/@/components/Page';\n  import { exportExcelFile } from '/@/utils/file/download';\n  import { columns, getSearchForm, getPage, exportExcel } from './data';\n\n  const { t } = useI18n();\n  const { createConfirm, createMessage } = useMessage();\n  const searchInfo = reactive<any>({});\n\n  const getParam = (isPage: boolean) => {\n    const form = getForm();\n    const fieldsValue = form.getFieldsValue();\n    if (fieldsValue.stationIds && fieldsValue.stationIds.length > 0) {\n      fieldsValue.stationId = fieldsValue.stationIds.join(',');\n    }\n    let param = {} as any;\n    for (const key in fieldsValue) {\n      if (key === 'stationIds') {\n        continue;\n      }\n      param[key] = fieldsValue[key];\n    }\n    if (isPage) {\n      const paginationRef = getPaginationRef() as any;\n      param.pageNo = paginationRef.current;\n      param.pageSize = paginationRef.pageSize;\n    }\n    param.sortField = searchInfo.sortField;\n    param.sortOrder = searchInfo.sortOrder;\n    return param;\n  };\n\n  const getPageByParam = async () => {\n    const query = getParam(true);\n    return await getPage(query);\n  };\n\n  const tableTitle = ref<string>('排班统计');\n  const [registerTable, { getPaginationRef, getForm }] = useTable({\n    title: tableTitle,\n    api: getPageByParam,\n    columns: columns(),\n    useSearchForm: true,\n    formConfig: getSearchForm(),\n    bordered: true,\n    showTableSetting: true,\n    tableSetting: { fullScreen: true },\n    showIndexColumn: true,\n    sortFn: (sortInfo: SorterResult) => {\n      const sortOrder = sortInfo.order?.replace('end', '');\n      searchInfo.sortOrder = sortOrder;\n      searchInfo.sortField = sortOrder ? sortInfo.field : undefined;\n    },\n  });\n\n  function handleExport() {\n    createConfirm({\n      title: t('common.message.confirmTitle'),\n      iconType: 'warning',\n      content: t('common.message.exportMessage'),\n      async onOk() {\n        const query = getParam(false);\n        query.filename = `${tableTitle.value}.xlsx`;\n        query.excelList = columns();\n        await exportExcel(query).then((res) => {\n          exportExcelFile(res?.data, query.filename);\n        });\n        createMessage.success(t('common.exportSuccessText'));\n      },\n    });\n  }\n</script>\n<style lang=\"less\" scoped>\n  @import '/@/design/biz/bizList.less';\n</style>\n"],"names":["getPage","params","defHttp","exportExcel","getOrgList","columns","result","useUserStore","others","getSearchForm","stationParams","reactive","formModel","__async","data","options","item","value","CommonApi.getStationList","__spreadValues","input","option","useI18n","createConfirm","createMessage","useMessage","searchInfo","getParam","isPage","fieldsValue","getForm","param","key","paginationRef","getPaginationRef","getPageByParam","query","tableTitle","ref","registerTable","useTable","sortInfo","sortOrder","_a","handleExport","res","exportExcelFile"],"mappings":"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"}