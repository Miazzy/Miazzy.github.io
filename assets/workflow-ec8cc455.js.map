{"version":3,"file":"workflow-ec8cc455.js","sources":["../../src/views/bpm/manage/workflow/workflow.ts","../../src/views/bpm/manage/workflow/workflow.vue"],"sourcesContent":["import { defHttp } from '/@/utils/http/axios';\nimport { BasicColumn, FormSchema } from '@/components/Table';\nimport { formatDate } from '/@/utils/dateUtil';\n\nenum Api {\n  page = '/bpm/model/page',\n}\n\nexport const getPage = (params: ParamsType) => {\n  return defHttp.get<any>({\n    url: Api.page,\n    params,\n  });\n};\n\n// 获取流程表格列表数据\nexport const getTableDataWflow = (queryParams) => {\n  return getPage(queryParams);\n};\n\nexport type ParamsType = {\n  pageNo: number;\n  pageSize: number;\n  key: undefined | string;\n  name: undefined | string;\n  category: undefined | string;\n};\n\nconst categorys = [\n  { value: '1', label: '默认' },\n  { value: '2', label: 'OA' },\n];\n\nexport const searchFormSchema: FormSchema[] = [\n  {\n    field: `key`,\n    label: `流程标识`,\n    component: 'Input',\n    componentProps: { placeholder: '请输入流程标识' },\n    colProps: { span: 8 },\n  },\n  {\n    field: `name`,\n    label: `流程名称`,\n    component: 'Input',\n    componentProps: { placeholder: '请输入流程名称' },\n    colProps: { span: 8 },\n  },\n  // {\n  //   field: `category`,\n  //   label: `流程分类`,\n  //   component: 'Select',\n  //   componentProps: {\n  //     options: categorys,\n  //   },\n  //   colProps: { span: 6 },\n  // },\n];\n\nexport const columns: BasicColumn[] = [\n  { title: '流程标识', dataIndex: 'key', width: 200 },\n  { title: '流程名称', dataIndex: 'name', width: 200 },\n  {\n    title: '流程分类',\n    dataIndex: 'categoryName',\n    width: 80,\n  },\n  { title: '表单信息', dataIndex: 'formCustomCreatePath', width: 300 },\n  {\n    title: '创建时间',\n    dataIndex: 'createTime',\n    width: 150,\n    customRender: ({ record }) => {\n      return formatDate(record.createTime, 'YYYY-MM-DD');\n    },\n  },\n  {\n    title: '最新部署的流程定义',\n    dataIndex: '',\n    children: [\n      {\n        title: '流程版本',\n        dataIndex: 'version',\n        width: 100,\n      },\n      {\n        title: '激活状态',\n        dataIndex: 'suspensionState',\n        width: 100,\n      },\n      {\n        title: '部署时间',\n        dataIndex: 'deploymentTime',\n        width: 150,\n        customRender: ({ record }) => {\n          if (record.processDefinition) {\n            return formatDate(record.processDefinition.deploymentTime, 'YYYY-MM-DD');\n          }\n          return '';\n        },\n      },\n    ],\n  },\n];\n","<template>\n  <PageWrapper dense contentFullHeight fixedHeight contentClass=\"flex\" style=\"position: relative\">\n    <SysCommonTree\n      treeClass=\"left-tree-layout\"\n      title=\"流程分类\"\n      treeType=\"bpm_model_category\"\n      :toolbar=\"true\"\n      :search=\"true\"\n      @select=\"handleSelect\"\n      :beforeDelete=\"beforeDelete\"\n    />\n\n    <div class=\"right-table-layout\">\n      <BasicTable @register=\"registerTable\" class=\"fix-basic-table\">\n        <template #toolbar>\n          <a-button type=\"primary\" @click=\"openForm('create')\"> 新建流程 </a-button>\n          <a-button type=\"primary\" @click=\"importForm\"> 导入流程 </a-button>\n        </template>\n        <template #bodyCell=\"{ column, record }\">\n          <template v-if=\"column.key === 'action'\">\n            <TableAction\n              :actions=\"[\n                {\n                  label: '修改流程',\n                  onClick: openForm.bind(null, 'update', record.id),\n                },\n                {\n                  label: '设计流程',\n                  onClick: handleDesign.bind(null, record),\n                },\n                {\n                  label: '分配规则',\n                  onClick: handleAssignRule.bind(null, record),\n                },\n                {\n                  label: '发布流程',\n                  onClick: handleDeploy.bind(null, record),\n                },\n                {\n                  label: '流程定义',\n                  onClick: handleDefinitionList.bind(null, record),\n                },\n                {\n                  label: '删除',\n                  onClick: handleDelete.bind(null, record.id),\n                },\n              ]\"\n            />\n          </template>\n          <template v-else-if=\"column.dataIndex === 'name'\">\n            <a-button type=\"link\" @click=\"handleBpmnDetail(record)\">{{ record.name }}</a-button>\n          </template>\n\n          <!-- <template v-else-if=\"column.dataIndex === 'category'\">\n            <a-tag color=\"processing\">{{ record.category === '1' ? '默认' : 'OA' }}</a-tag>\n          </template> -->\n\n          <template v-else-if=\"column.dataIndex === 'formCustomCreatePath'\">\n            <a-button v-if=\"record.formType === 10\" type=\"link\" @click=\"handleFormDetail(record)\">{{\n              record.formName\n            }}</a-button>\n            <a-button\n              v-else-if=\"record.formType === 20\"\n              type=\"link\"\n              @click=\"handleFormDetail(record)\"\n              >{{ record.formCustomCreatePath }}</a-button\n            >\n            <label v-else>暂无表单</label>\n          </template>\n\n          <template v-else-if=\"column.dataIndex === 'suspensionState'\">\n            <a-switch\n              v-if=\"record.processDefinition\"\n              :checked=\"getChecked(record)\"\n              @change=\"handleChangeState(record)\"\n            />\n          </template>\n\n          <template v-else-if=\"column.dataIndex === 'version'\">\n            <a-tag v-if=\"record.processDefinition\" color=\"processing\"\n              >v{{ record.processDefinition.version }}</a-tag\n            >\n            <a-tag v-else color=\"warning\">未部署</a-tag>\n          </template>\n        </template>\n      </BasicTable>\n    </div>\n    <!-- 表单弹窗：添加/修改流程 -->\n    <FormDialog\n      ref=\"formDialogRef\"\n      @success=\"reload\"\n      :category=\"category\"\n      v-model:visible=\"formDialogVisible\"\n    />\n\n    <!-- 表单弹窗：导入流程 -->\n    <ImportDialog\n      ref=\"importDialogRef\"\n      @success=\"reload\"\n      :category=\"category\"\n      v-model:visible=\"importDialogVisible\"\n    />\n\n    <!-- 弹窗：表单详情 -->\n    <Dialog\n      title=\"表单详情\"\n      v-model:visible=\"formDetailVisible\"\n      :width=\"800\"\n      :height=\"800\"\n      :overflowY=\"'scroll'\"\n      :showBtm=\"false\"\n    >\n      <form-create :rule=\"formDetailPreview.rule\" :option=\"formDetailPreview.option\" />\n    </Dialog>\n\n    <!-- 弹窗：流程模型图的预览 -->\n    <Dialog\n      title=\"流程图\"\n      v-model:visible=\"bpmnDetailVisible\"\n      :width=\"800\"\n      :height=\"800\"\n      :overflowY=\"'scroll'\"\n      :overflowX=\"'scroll'\"\n      :showBtm=\"false\"\n    >\n      <MyProcessViewer\n        key=\"designer\"\n        v-model=\"bpmnXML\"\n        :value=\"bpmnXML\"\n        v-bind=\"bpmnControlForm\"\n        :prefix=\"bpmnControlForm.prefix\"\n      />\n    </Dialog>\n  </PageWrapper>\n</template>\n<script lang=\"ts\" setup>\n  import { reactive, ref } from 'vue';\n  import { useMessage } from '/@/hooks/web/useMessage';\n  import { useI18n } from '@/hooks/web/useI18n';\n  import { BasicTable, useTable, TableAction } from '@/components/Table';\n  import { columns, searchFormSchema } from './workflow';\n  import * as ModelApi from '@/api/bpm/model';\n  import { PageWrapper } from '/@/components/Page';\n  import Dialog from '@/components/Framework/Modal/Dialog.vue';\n  import FormDialog from './formDialog.vue';\n  import ImportDialog from './importDialog.vue';\n  import { MyProcessViewer } from '@/components/Bpm/package';\n  import SysCommonTree from '@/views/system/configuration/commontree/SysCommonTree.vue';\n  import { addTabPage } from '@/utils/route';\n\n  const { t } = useI18n();\n  const message = useMessage(); // 消息弹窗\n\n  // 被选择的树节点\n  const selectedNode = reactive<any>({});\n\n  const category = ref('');\n  // 左侧树状菜单选中事件\n  function handleSelect(node) {\n    selectedNode.value = null;\n    let folderId = '';\n    if (node) {\n      folderId = node.id;\n      if (node.parentId == 'root') {\n        folderId = '';\n      }\n      selectedNode.value = {\n        typeId: node.id,\n        fullName: node.fullName,\n        id: node.id,\n        name: node.name,\n        kind: node.kind,\n        existChildNode: node.children.length > 0,\n      };\n    }\n    category.value = folderId;\n    reload();\n  }\n\n  const [registerTable, { reload }] = useTable({\n    title: '流程模型',\n    api: ModelApi.getModelPage,\n    columns,\n    formConfig: { labelWidth: 120, schemas: searchFormSchema },\n    useSearchForm: true,\n    showTableSetting: true,\n    bordered: true,\n    actionColumn: {\n      width: 430,\n      title: t('common.operate'),\n      dataIndex: 'action',\n      fixed: 'right',\n    },\n    beforeFetch(search) {\n      search.category = category.value;\n      return search;\n    },\n  });\n\n  const getChecked = (record) => {\n    if (record.processDefinition.suspensionState === 1) {\n      return true;\n    }\n    return false;\n  };\n\n  /** 流程图的详情按钮操作 */\n  const bpmnDetailVisible = ref(false);\n  const bpmnXML = ref('');\n  const bpmnControlForm = ref({\n    prefix: 'flowable',\n  });\n\n  /** 流程表单的详情按钮操作 */\n  const formDetailVisible = ref(false);\n  const formDetailPreview = ref({\n    rule: [],\n    option: {},\n  });\n\n  const importDialogVisible = ref(false);\n  /** 导入流程操作 */\n  const importDialogRef = ref();\n  const importForm = () => {\n    if (selectedNode.value == null || selectedNode.value.existChildNode) {\n      message.warning('请选择流程分类的末级节点。');\n      return;\n    }\n    importDialogVisible.value = true;\n    importDialogRef.value.open();\n  };\n\n  const formDialogVisible = ref(false);\n  /** 添加/修改操作 */\n  const formDialogRef = ref();\n  const openForm = (type: string, id?: number) => {\n    if (type == 'create') {\n      if (selectedNode.value == null || selectedNode.value.existChildNode) {\n        message.warning('请选择流程分类的末级节点。');\n        return;\n      }\n    }\n\n    formDialogVisible.value = true;\n    formDialogRef.value.open(type, id);\n  };\n\n  // 执行删除流程记录操作\n  const handleDelete = async (id) => {\n    try {\n      // 删除的二次确认\n      await message.delConfirm(`请确认是否删除此流程数据项？`);\n      // 调用集维后端接口，删除流程相应数据 TODO\n      ModelApi.deleteModel(id).then(() => {\n        // 刷新列表\n        reload();\n      });\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  //  设置流程激活状态\n  const handleChangeState = async (row) => {\n    const state = row.processDefinition.suspensionState;\n    try {\n      // 修改状态的二次确认\n      const id = row.id;\n      const statusState = state === 1 ? '激活' : '挂起';\n      const content = '请确认是否' + statusState + '流程名字为\"' + row.name + '\"的数据项?';\n      // 确认是否更新流程激活状态\n      await message.confirm(content);\n      // 调用集维后端接口，激活该流程状态 TODO\n      // 刷新列表\n      await reload();\n    } catch {\n      // 取消后，进行恢复按钮\n      row.processDefinition.suspensionState = state === 1 ? 2 : 1;\n    }\n  };\n\n  // 执行部署流程/发布流程操作\n  const handleDeploy = async (row) => {\n    try {\n      // 删除的二次确认\n      const resp = await message.confirm('请确认是否部署该流程？');\n      ModelApi.deployModel(row.id).then(() => {\n        // 刷新列表\n        reload();\n      });\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  /** 设计流程 */\n  const handleDesign = (row) => {\n    addTabPage(`/bpm/manage/wfeditor?modelId=${row.id}`,'设计流程');\n  };\n\n  /** 点击任务分配按钮 */\n  const handleAssignRule = (row) => {\n    addTabPage(`/bpm/manage/wftaskAssignRule?modelId=${row.id}`,'分配规则');\n  };\n\n  /** 跳转到指定流程定义列表 */\n  const handleDefinitionList = (row) => {\n    addTabPage(`/bpm/manage/wftaskDefinition?key=${row.key}&modelId=${row.id}`,'流程定义');\n  };\n\n  const handleFormDetail = async (row) => {\n    if (row.formType == 10) {\n      // 设置表单\n      const data = {};\n      // 弹窗打开\n      formDetailVisible.value = true;\n    } else {\n      addTabPage(row.formCustomCreatePath);\n    }\n  };\n\n  const handleBpmnDetail = async (row) => {\n    bpmnDetailVisible.value = true;\n    ModelApi.getModel(row.id).then((data) => {\n      bpmnXML.value = data.bpmnXml;\n    });\n  };\n\n  const beforeDelete = async (node) => {\n    const isExist = await ModelApi.getExistActReModel(node.id);\n    if (isExist) {\n      message.error('此分类下存在流程模型，不能删除。');\n      return false;\n    } else {\n      return true;\n    }\n  };\n</script>\n<style lang=\"less\" scoped>\n  .dialog-loading {\n    position: absolute;\n    z-index: 1000 !important;\n    top: 45%;\n    left: 45%;\n  }\n\n  .dialog-mask {\n    position: absolute;\n    z-index: 1001 !important;\n    top: -1px;\n    width: 100%;\n    height: 100%;\n    opacity: 0.3;\n    background: #ccc;\n  }\n\n  .left-tree-layout {\n    width: 298px;\n    border-radius: 2px;\n    flex-shrink: 0;\n  }\n\n  .right-table-layout {\n    width: calc(100% - 308px);\n  }\n\n  .fix-basic-table {\n    :deep(&.vben-basic-table .ant-table-wrapper) {\n      padding: 10px 16px 12px;\n    }\n\n    :deep(.table-settings) {\n      margin-right: 0;\n    }\n\n    :deep(.table-settings .anticon-setting) {\n      margin-right: 0;\n    }\n  }\n</style>"],"names":["searchFormSchema","columns","record","formatDate","t","useI18n","message","useMessage","selectedNode","reactive","category","ref","handleSelect","node","folderId","reload","registerTable","useTable","ModelApi.getModelPage","search","getChecked","bpmnDetailVisible","bpmnXML","bpmnControlForm","formDetailVisible","formDetailPreview","importDialogVisible","importDialogRef","importForm","formDialogVisible","formDialogRef","openForm","type","id","handleDelete","__async","ModelApi.deleteModel","e","handleChangeState","row","state","content","handleDeploy","resp","ModelApi.deployModel","handleDesign","addTabPage","handleAssignRule","handleDefinitionList","handleFormDetail","handleBpmnDetail","ModelApi.getModel","data","beforeDelete","ModelApi.getExistActReModel"],"mappings":"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"}