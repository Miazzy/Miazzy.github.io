{"version":3,"file":"create-41d1c574.js","sources":["../../src/views/oa/attend/create.vue"],"sourcesContent":["<template>\n  <PageWrapper\n    :detail=\"true\"\n    dense\n    contentFullHeight\n    fixedHeight\n    contentClass=\"fix-detail-page\"\n    style=\"position: relative\"\n  >\n    <div class=\"load\">\n      <a-spin :spinning=\"formState.spinning\" tip=\"Loading...\">\n        <div class=\"process-box\">\n          <!-- 操作按钮-->\n          <div class=\"header-box\">\n            <div class=\"header-left\">月排班</div>\n            <div class=\"header-right\" v-if=\"!disabledInput\">\n              <a-button type=\"primary\" @click=\"handleSave\" :loading=\"isLoading\">\n                {{ t('common.saveText') }}</a-button\n              >\n              <a-button class=\"!ml-2.5\" @click=\"handleCancel\">{{\n                t('common.cancelText')\n              }}</a-button>\n            </div>\n          </div>\n          <!-- 表单内容 -->\n          <div class=\"content\">\n            <a-form ref=\"formRef\" :model=\"formState\" labelAlign=\"right\" autocomplete=\"off\">\n              <a-card title=\"基本信息\" :bordered=\"false\">\n                <a-row :gutter=\"32\">\n                  <a-col v-show=\"true\" :span=\"12\">\n                    <a-form-item\n                      name=\"stationName\"\n                      label=\"电站\"\n                      :labelCol=\"{ class: 'detail-label' }\"\n                    >\n                      <a-input disabled v-model:value=\"formState.stationName\" />\n                    </a-form-item>\n                  </a-col>\n                  <a-col v-show=\"true\" :span=\"12\">\n                    <a-form-item\n                      label=\"月份\"\n                      name=\"month\"\n                      :labelCol=\"{ class: 'detail-label' }\"\n                      :rules=\"[{ required: true, message: '请选择月份' }]\"\n                    >\n                      <a-date-picker\n                        v-model:value=\"formState.month\"\n                        picker=\"month\"\n                        format=\"YYYY-MM\"\n                        value-format=\"YYYY-MM\"\n                        :style=\"`width: 100%`\"\n                        :maxlength=\"7\"\n                        @change=\"handleChangeMonth\"\n                        :disabled=\"disabledInput\"\n                      />\n                    </a-form-item>\n                  </a-col>\n                </a-row>\n\n                <a-row :gutter=\"32\">\n                  <a-col v-show=\"true\" :span=\"12\">\n                    <a-form-item\n                      name=\"period\"\n                      label=\"排班周期\"\n                      :labelCol=\"{ class: 'detail-label' }\"\n                    >\n                      <a-input disabled v-model:value=\"formState.period\" />\n                    </a-form-item>\n                  </a-col>\n                </a-row>\n\n                <a-row :gutter=\"32\">\n                  <a-col v-show=\"true\" :span=\"24\">\n                    <a-form-item name=\"remark\" label=\"备注\" :labelCol=\"{ class: 'detail-label' }\">\n                      <a-textarea\n                        v-model:value=\"formState.remark\"\n                        row=\"4\"\n                        :maxlength=\"1000\"\n                        show-count\n                        :disabled=\"disabledInput\"\n                      />\n                    </a-form-item>\n                  </a-col>\n                </a-row>\n              </a-card>\n            </a-form>\n\n            <a-card :bordered=\"false\">\n              <BasicTable title=\"排班明细\" @register=\"registerDetailTable\">\n                <template #toolbar>\n                  <a-button\n                    v-if=\"!disabledInput\"\n                    type=\"primary\"\n                    :preIcon=\"IconEnum.SETTING\"\n                    @click=\"handleBatchSet('day')\"\n                  >\n                    {{ t('白班批量设置') }}\n                  </a-button>\n                  <a-button\n                    v-if=\"!disabledInput\"\n                    type=\"primary\"\n                    :preIcon=\"IconEnum.SETTING\"\n                    @click=\"handleBatchSet('night')\"\n                  >\n                    {{ t('夜班批量设置') }}\n                  </a-button>\n                  <a-button\n                    v-if=\"!disabledInput\"\n                    class=\"yellow-btn\"\n                    :preIcon=\"IconEnum.IMPORT\"\n                    @click=\"handleDetailImport\"\n                  >\n                    {{ t('历史排版导入') }}\n                  </a-button>\n                  <a-button\n                    class=\"yellow-btn\"\n                    :preIcon=\"IconEnum.EXPORT\"\n                    @click=\"handleDetailExport\"\n                  >\n                    {{ t('common.action.export') }}\n                  </a-button>\n                  <a-button type=\"primary\" :preIcon=\"IconEnum.VIEW\" @click=\"handleView\">\n                    {{ t('查看日历') }}\n                  </a-button>\n                </template>\n                <template #bodyCell=\"{ column, record }\">\n                  <template\n                    v-if=\"\n                      column.dataIndex === 'dayPersonNames' ||\n                      column.dataIndex === 'nightPersonNames'\n                    \"\n                  >\n                    <a-select\n                      v-model:value=\"record[column.dataIndex]\"\n                      show-search\n                      allow-clear\n                      mode=\"multiple\"\n                      style=\"width: 100%\"\n                      :options=\"stationPersonOptions\"\n                      @change=\"\n                        (value: string, option) =>\n                          changeStationPerson(value, option, column.dataIndex, record)\n                      \"\n                      :disabled=\"disabledInput\"\n                    />\n                  </template>\n                  <template v-if=\"column.dataIndex === 'remark'\">\n                    <a-input\n                      v-model:value=\"record[column.dataIndex]\"\n                      :title=\"record[column.dataIndex]\"\n                      :maxlength=\"200\"\n                      :disabled=\"disabledInput\"\n                    />\n                  </template>\n                  <template v-if=\"column.key === 'action' && !disabledInput\">\n                    <TableAction :actions=\"createActions(record)\" />\n                  </template>\n                </template>\n              </BasicTable>\n            </a-card>\n          </div>\n        </div>\n      </a-spin>\n\n      <!-- 弹窗页面 -->\n      <StationPersonModal @register=\"registerStationPersonModal\" @success=\"handleSuccess\" />\n      <Dialog\n        v-model:visible=\"historyDetailModal\"\n        title=\"历史排班导入\"\n        force-render\n        @ok=\"handleOk\"\n        :height=\"520\"\n      >\n        <BasicTable @register=\"registerDetailModalTable\" :maxHeight=\"340\" />\n      </Dialog>\n    </div>\n  </PageWrapper>\n</template>\n\n<script lang=\"ts\" setup>\n  import { reactive, ref, unref, onMounted, UnwrapRef, toRaw } from 'vue';\n  import moment from 'moment';\n  import type { SelectProps } from 'ant-design-vue';\n  import { SysMessage, useMessage } from '/@/hooks/web/useMessage';\n  import { useRoute } from 'vue-router';\n  import { assign } from 'lodash-es';\n  import { useUserStore } from '/@/store/modules/user';\n  import { IconEnum } from '@/enums/appEnum';\n  import { useI18n } from '@/hooks/web/useI18n';\n  import { useModal } from '/@/components/Modal';\n  import Dialog from '@/components/Framework/Modal/Dialog.vue';\n  import { BasicTable, useTable, TableAction, ActionItem, EditRecordRow } from '@/components/Table';\n  import { exportExcelFile } from '/@/utils/file/download';\n  import * as CommonApi from '/@/api/baseset/common';\n  import * as AttendApi from '/@/api/oa/att';\n  import StationPersonModal from './StationPersonModal.vue';\n  import { SchedulingType, detailColumns, detailModalColumns } from './attend.data';\n  import { addTabPage, closeCurrentTab } from '@/utils/route';\n  import { MsgManager } from '@/message/MsgManager';\n\n  const { t } = useI18n();\n  const { createConfirm, createMessage } = useMessage();\n  const { query } = useRoute();\n  const userStore = useUserStore();\n  const userInfo = toRaw(userStore.getUserInfo);\n  const isLoading = ref(false);\n  const formRef = ref();\n  const formState: UnwrapRef<any> = reactive({ spinning: false });\n  const disabledInput = ref<boolean>(false);\n  const stationPersonOptions = ref<SelectProps['options']>([]) as any;\n  const detailDataSource = ref<any[]>();\n  const historyDetailModal = ref<boolean>(false);\n\n  const [registerStationPersonModal, { openModal }] = useModal();\n\n  const [\n    registerDetailTable,\n    { setProps, getDataSource, getSelectRows: getDetailSelectRows, clearSelectedRowKeys },\n  ] = useTable({\n    dataSource: detailDataSource,\n    columns: detailColumns,\n    bordered: true,\n    useSearchForm: false,\n    canResize: false,\n    pagination: false,\n    showTableSetting: false,\n    tableSetting: { fullScreen: true },\n    rowSelection: { type: 'checkbox' },\n  });\n\n  const [registerDetailModalTable, { reload, getSelectRows }] = useTable({\n    api: () =>\n      AttendApi.getPage({\n        stationId: formState.stationId,\n        beforeMonth: formState.month,\n        sortField: 'month',\n        sortOrder: 'asc',\n      }),\n    columns: detailModalColumns,\n    pagination: true,\n    striped: false,\n    useSearchForm: false,\n    showTableSetting: false,\n    bordered: true,\n    showIndexColumn: true,\n    canResize: true,\n    rowSelection: {\n      type: 'radio',\n    },\n  });\n\n  const handleOk = async () => {\n    const rows = getSelectRows();\n    if (rows.length == 0) {\n      SysMessage.getInstance().warning('请选择历史排班');\n      return;\n    }\n    const detailObj = await AttendApi.getDetailList(rows[0].id);\n    detailObj.result.forEach((item) => {\n      convertArr(item, ['Id', 'Name']);\n    });\n    const dataSource = getDataSource();\n    dataSource.forEach((item) => {\n      for (let i = 0; i < detailObj.result.length; i++) {\n        const historyItem = detailObj.result[i];\n        if (moment(item.day).format('DD') === moment(historyItem.day).format('DD')) {\n          item.dayPersonIds = historyItem.dayPersonIds;\n          item.dayPersonNames = historyItem.dayPersonNames;\n          item.nightPersonIds = historyItem.nightPersonIds;\n          item.nightPersonNames = historyItem.nightPersonNames;\n          item.unscheduledPersonId = historyItem.unscheduledPersonId;\n          item.unscheduledPersonName = historyItem.unscheduledPersonName;\n          item.remark = historyItem.remark;\n          break;\n        }\n      }\n    });\n    historyDetailModal.value = false;\n  };\n\n  function handleBatchSet(type: string) {\n    if (!formState.month) {\n      SysMessage.getInstance().warning('请选择月份');\n      return;\n    }\n    const selectRows = getDetailSelectRows();\n    if (!selectRows || selectRows.length === 0) {\n      SysMessage.getInstance().warning('请选择排班明细行数据');\n      return;\n    }\n    const modalOptions = { visible: true };\n    const title = type === SchedulingType.DAY ? '白班批量设置' : '夜班批量设置';\n    openModal(modalOptions, {\n      title: title,\n      type: type,\n      stationId: formState.stationId,\n    });\n  }\n\n  function handleSuccess({ values }) {\n    const selectRows = getDetailSelectRows();\n    const dataSource = getDataSource();\n    dataSource.forEach((item) => {\n      selectRows.forEach((selectRow) => {\n        if (selectRow.day === item.day) {\n          if (values.type === SchedulingType.DAY) {\n            item.dayPersonIds = values.personIds;\n            item.dayPersonNames = values.personNames;\n          } else {\n            item.nightPersonIds = values.personIds;\n            item.nightPersonNames = values.personNames;\n          }\n          setUnscheduledPerson(item);\n        }\n      });\n    });\n  }\n\n  function setUnscheduledPerson(item) {\n    let unscheduledPersonIds = Array<string>();\n    let unscheduledPersonNames = Array<string>();\n    if (\n      item.dayPersonIds &&\n      item.dayPersonIds.length > 0 &&\n      item.nightPersonIds &&\n      item.nightPersonIds.length > 0\n    ) {\n      const personIds = [].concat(item.dayPersonIds).concat(item.nightPersonIds) as Array<string>;\n      for (let index = 0; index < stationPersonOptions.value.length; index++) {\n        const lable = stationPersonOptions.value[index].lable as string;\n        const value = stationPersonOptions.value[index].value as string;\n        if (!personIds.includes(lable)) {\n          unscheduledPersonIds.push(lable);\n          unscheduledPersonNames.push(value);\n        }\n      }\n    }\n    item.unscheduledPersonId = unscheduledPersonIds.join(',');\n    item.unscheduledPersonName = unscheduledPersonNames.join(',');\n  }\n\n  function changeStationPerson(value, option, field, record) {\n    const idField = field.replace('Names', 'Ids');\n    record[idField] = option.map((item) => item.lable);\n    setUnscheduledPerson(record);\n  }\n\n  function handleDetailImport() {\n    if (!formState.month) {\n      SysMessage.getInstance().warning('请选择月份');\n      return;\n    }\n    historyDetailModal.value = true;\n    reload();\n  }\n\n  function handleDetailExport() {\n    if (!formState.id) {\n      SysMessage.getInstance().warning('请保存数据后再导出');\n      return;\n    }\n    createConfirm({\n      title: t('common.message.confirmTitle'),\n      iconType: 'warning',\n      content: t('common.message.exportMessage'),\n      async onOk() {\n        const searchInfo = {\n          schedulingId: formState.id,\n          filename: '排班明细.xls',\n        };\n        await AttendApi.exportDetailExcel(searchInfo).then((res) => {\n          exportExcelFile(res?.data, searchInfo.filename);\n        });\n        searchInfo.filename = '';\n        createMessage.success(t('common.exportSuccessText'));\n      },\n    });\n  }\n\n  function handleView() {\n    if (!formState.id) {\n      SysMessage.getInstance().warning('请保存数据后再查看');\n      return;\n    }\n    // router.push({ path: '/oa/attend/calendar', query: formState });\n    addTabPage('/oa/attend/calendar', '查看日历', toRaw(formState));\n  }\n\n  const handleDetailDelete = async (record: EditRecordRow) => {\n    record.dayPersonIds = [];\n    record.dayPersonNames = [];\n    record.dayPersonId = '';\n    record.dayPersonName = '';\n    record.nightPersonIds = [];\n    record.nightPersonNames = [];\n    record.nightPersonId = '';\n    record.nightPersonName = '';\n    record.unscheduledPersonId = '';\n    record.unscheduledPersonName = '';\n    record.remark = '';\n  };\n\n  const handleChangeMonth = async (value) => {\n    const formData = unref(formState);\n    let start = '';\n    let end = '';\n    const month = moment(value);\n    if (formData.periodRule === 'natural_month') {\n      // 自然月\n      start = month.startOf('month').format('YYYY-MM-DD');\n      end = month.endOf('month').format('YYYY-MM-DD');\n      formState.period = `${start}~${end}`;\n    } else {\n      // 非自然月\n      const lastDay = month.endOf('month').format('DD');\n\n      const nextMonth = month.add(1, 'month').format('YYYY-MM');\n      const nextLastDay = month.endOf('month').format('DD');\n      const periodStartDay = formData.periodStartDay;\n      const periodEndDay = formData.periodEndDay;\n      const startDay = fillZero(periodStartDay);\n      const endDay = fillZero(periodEndDay);\n      start = `${value}-${startDay}`;\n      end = `${nextMonth}-${endDay}`;\n      if (Number(periodStartDay) > Number(lastDay)) {\n        start = `${value}-${lastDay}`;\n      }\n      if (Number(periodEndDay) > Number(nextLastDay)) {\n        end = `${nextMonth}-${nextLastDay}`;\n      }\n    }\n    // 获取法定节假日\n    // const year = `${start.split('-')[0]},${end.split('-')[0]}`;\n    // const holidayList = await AttendApi.getHolidayList(year);\n    const holidayList = [];\n    // 设置周期\n    if (start && end) {\n      formState.period = `${start}~${end}`;\n    } else {\n      formState.period = '';\n    }\n    // 加载明细数据\n    clearSelectedRowKeys();\n    loadDetailData(start, end, holidayList);\n  };\n\n  const loadDetailData = (startStr, endStr, holidayList) => {\n    const start = moment(startStr);\n    const startHoliday = isHoliday(startStr, holidayList);\n    detailDataSource.value = [\n      {\n        day: startStr,\n        week: getWeek(startStr),\n        dayType: startHoliday ? 'legal_holidays' : 'weekday',\n        dayTypeText: startHoliday ? '法定节假日' : '工作日',\n      },\n    ];\n    let nextDays = start.add(1, 'days').format('YYYY-MM-DD');\n    while (nextDays <= endStr) {\n      const nextHoliday = isHoliday(nextDays, holidayList);\n      detailDataSource.value.push({\n        day: nextDays,\n        week: getWeek(nextDays),\n        dayType: nextHoliday ? 'legal_holidays' : 'weekday',\n        dayTypeText: nextHoliday ? '法定节假日' : '工作日',\n      });\n      nextDays = start.add(1, 'days').format('YYYY-MM-DD');\n    }\n  };\n\n  const isHoliday = (dateStr, holidayList) => {\n    for (let i = 0; i < holidayList.length; i++) {\n      const item = holidayList[i];\n      if (dateStr === item.firstDate || dateStr === item.secondDate) {\n        return false;\n      }\n      if (dateStr >= item.startDate && dateStr <= item.endDate) {\n        return true;\n      }\n    }\n    const week = moment(dateStr).day();\n    if (week === 6 || week === 0) {\n      return true;\n    }\n    return false;\n  };\n\n  function getWeek(date) {\n    const week = moment(date).day();\n    switch (week) {\n      case 1:\n        return '星期一';\n      case 2:\n        return '星期二';\n      case 3:\n        return '星期三';\n      case 4:\n        return '星期四';\n      case 5:\n        return '星期五';\n      case 6:\n        return '星期六';\n      case 0:\n        return '星期日';\n    }\n  }\n\n  function fillZero(value) {\n    if (Number(value) < 10) {\n      return `0${value}`;\n    }\n    return value;\n  }\n\n  function createActions(record: EditRecordRow): ActionItem[] {\n    return [\n      {\n        label: t('清除'),\n        icon: IconEnum.DELETE,\n        danger: true,\n        popConfirm: {\n          title: '是否确认清除填写的数据',\n          confirm: handleDetailDelete.bind(null, record),\n        },\n      },\n    ];\n  }\n\n  const handleCancel = async () => {\n    closeCurrentTab();\n    MsgManager.getInstance().sendMsg('oa-attend', {});\n  };\n\n  const handleSave = () => {\n    formRef.value\n      .validate()\n      .then(() => {\n        const detailList = getDataSource();\n        for (let i = 0; i < detailList.length; i++) {\n          const item = detailList[i];\n          // 白班人员\n          const dayPersonIds = item.dayPersonIds;\n          if (!dayPersonIds || dayPersonIds.length == 0) {\n            SysMessage.getInstance().warning(`${item.day}，请设置白班人员`);\n            return;\n          }\n          // 夜班人员\n          const nightPersonIds = item.nightPersonIds;\n          if (!nightPersonIds || nightPersonIds.length == 0) {\n            SysMessage.getInstance().warning(`${item.day}，请设置夜班人员`);\n            return;\n          }\n        }\n        doSave(detailList);\n      })\n      .catch((error) => {\n        console.log('onSubmit=》error', error);\n      });\n  };\n\n  const doSave = async (detailList) => {\n    formState.spinning = true;\n    try {\n      const formData = unref(formState);\n      detailList.forEach((item) => {\n        convertStr(item, ['Id', 'Name']);\n      });\n      formData.detailList = detailList;\n      await AttendApi.saveData(formData).then((res) => {\n        formState.id = res.result;\n        SysMessage.getInstance().success(t('common.saveSuccessText'));\n      });\n      setTimeout(function () {\n        handleCancel();\n      }, 200);\n    } finally {\n      formState.spinning = false;\n    }\n  };\n\n  function initStationPersonOptions() {\n    CommonApi.getStationPerson(formState.stationId).then((data) => {\n      stationPersonOptions.value = [];\n      if (data && data.length > 0) {\n        data.forEach((item) => {\n          stationPersonOptions.value.push({ value: item.name, lable: item.userId });\n        });\n      }\n    });\n  }\n\n  const initFormState = async () => {\n    assign(formState, query);\n    if (query.id) {\n      const res = await AttendApi.getData(query.id);\n      assign(formState, res.result);\n      const isReadonly = query.isReadonly ? true : false;\n      disabledInput.value = userInfo.userId !== formState.creator || isReadonly;\n    }\n    setProps({\n      actionColumn: {\n        width: 80,\n        title: t('common.operate'),\n        dataIndex: 'action',\n        fixed: 'right',\n        ifShow: !disabledInput.value,\n      },\n    });\n  };\n\n  const initTableData = async () => {\n    const detailObj = await AttendApi.getDetailList(formState.id);\n    detailObj.result.forEach((item) => {\n      convertArr(item, ['Id', 'Name']);\n    });\n    detailDataSource.value = detailObj.result;\n  };\n\n  function initSelectOptions() {\n    initStationPersonOptions();\n  }\n\n  function convertStr(detail, suffixs: Array<string>) {\n    suffixs.forEach((suffix) => {\n      const fields = ref<Array<string>>(['dayPerson', 'nightPerson']);\n      fields.value.forEach((item) => {\n        const value = detail[item + suffix + 's'];\n        if (value && value.length > 0) {\n          detail[item + suffix] = value.join(',');\n        }\n      });\n    });\n  }\n\n  function convertArr(detail, suffixs: Array<string>) {\n    suffixs.forEach((suffix) => {\n      const fields = ref<Array<string>>(['dayPerson', 'nightPerson']);\n      fields.value.forEach((item) => {\n        const value = detail[item + suffix];\n        if (value) {\n          detail[item + suffix + 's'] = value.split(',');\n        }\n      });\n    });\n  }\n\n  onMounted(async () => {\n    await initFormState();\n    await initSelectOptions();\n    initTableData();\n  });\n</script>\n<style lang=\"less\" scoped>\n  @import '/@/design/biz/bizForm.less';\n</style>\n"],"names":["t","useI18n","createConfirm","createMessage","useMessage","query","useRoute","userStore","useUserStore","userInfo","toRaw","isLoading","ref","formRef","formState","reactive","disabledInput","stationPersonOptions","detailDataSource","historyDetailModal","registerStationPersonModal","openModal","useModal","registerDetailTable","setProps","getDataSource","getDetailSelectRows","clearSelectedRowKeys","useTable","detailColumns","registerDetailModalTable","reload","getSelectRows","AttendApi.getPage","detailModalColumns","handleOk","__async","rows","SysMessage","detailObj","AttendApi.getDetailList","item","convertArr","i","historyItem","moment","handleBatchSet","type","selectRows","modalOptions","title","SchedulingType","handleSuccess","values","selectRow","setUnscheduledPerson","unscheduledPersonIds","unscheduledPersonNames","personIds","index","lable","value","changeStationPerson","option","field","record","idField","handleDetailImport","handleDetailExport","searchInfo","AttendApi.exportDetailExcel","res","exportExcelFile","handleView","addTabPage","handleDetailDelete","handleChangeMonth","formData","unref","start","end","month","lastDay","nextMonth","nextLastDay","periodStartDay","periodEndDay","startDay","fillZero","endDay","holidayList","loadDetailData","startStr","endStr","startHoliday","isHoliday","getWeek","nextDays","nextHoliday","dateStr","week","date","createActions","IconEnum","handleCancel","closeCurrentTab","MsgManager","handleSave","detailList","dayPersonIds","nightPersonIds","doSave","error","convertStr","AttendApi.saveData","initStationPersonOptions","CommonApi.getStationPerson","data","initFormState","assign","AttendApi.getData","isReadonly","initTableData","initSelectOptions","detail","suffixs","suffix","onMounted"],"mappings":"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"}