{"version":3,"file":"index-4e8e0a49.js","sources":["../../src/views/po/workorder/index.vue"],"sourcesContent":["<template>\n  <PageWrapper dense contentFullHeight fixedHeight contentClass=\"flex\" style=\"position: relative\">\n    <CommonTree\n      title=\"电站组织\"\n      @select=\"handleSelect\"\n      :value=\"treeData\"\n      class=\"left-tree-layout\"\n      :toolbar=\"true\"\n      :canEdit=\"false\"\n      :canAdd=\"false\"\n      :canDelete=\"false\"\n      :isShowOperationBtns=\"false\"\n      :fieldNames=\"{ key: 'id', title: 'name' }\"\n      :selectedKeys=\"selectedKeys\"\n      :expandedKeys=\"expandedKeys\"\n    />\n    <div class=\"right-table-layout\">\n      <BasicTable\n        @register=\"registerTable\"\n        class=\"fix-basic-table\"\n        @resize-column=\"(w, col) => (col.width = w)\"\n        @row-db-click=\"(record) => handleView(record)\"\n        @selection-change=\"handleSelectionChange\"\n      >\n        <template #toolbar>\n          <a-dropdown>\n            <template #overlay>\n              <a-menu @click=\"handleMenuClick\">\n                <a-menu-item key=\"cc\" title=\"除草工单\">除草工单</a-menu-item>\n                <a-menu-item key=\"zjqx\" title=\"组件清洗工单\">组件清洗工单</a-menu-item>\n                <a-menu-item key=\"lsjg\" title=\"螺栓紧固工单\">螺栓紧固工单</a-menu-item>\n                <a-menu-item key=\"ff\" title=\"防腐工单\">防腐工单</a-menu-item>\n              </a-menu>\n            </template>\n            <a-button type=\"primary\" :preIcon=\"IconEnum.ADD\">\n              {{ t('common.action.create') }}\n              <DownOutlined />\n            </a-button>\n          </a-dropdown>\n          <a-button\n            :disabled=\"disabledBtn\"\n            class=\"red-btn\"\n            :preIcon=\"IconEnum.DELETE\"\n            @click=\"handleDelete\"\n            >{{ t('common.delText') }}</a-button\n          >\n          <a-button class=\"yellow-btn\" :preIcon=\"IconEnum.EXPORT\" @click=\"handleExport\">{{\n            t('common.action.export')\n          }}</a-button>\n        </template>\n      </BasicTable>\n    </div>\n  </PageWrapper>\n</template>\n<script lang=\"ts\" setup>\n  import { onMounted, reactive, ref } from 'vue';\n  import type { MenuProps } from 'ant-design-vue';\n  import { DownOutlined } from '@ant-design/icons-vue';\n  import { useI18n } from '@/hooks/web/useI18n';\n  import { useMessage } from '@/hooks/web/useMessage';\n  import { IconEnum } from '@/enums/appEnum';\n  import { BasicTable, useTable, SorterResult } from '/@/components/Table';\n  import { TreeItem } from '/@/components/Tree';\n  import { PageWrapper } from '/@/components/Page';\n  import CommonTree from '@/components/Framework/Tree/CommonTree.vue';\n  import { exportExcelFile } from '@/utils/file/download';\n  import * as CommonUtil from '/@/utils/common';\n  import { buildShortUUID } from '@/utils/uuid';\n  import * as ProcessInstanceApi from '@/api/bpm/processInstance';\n  import {\n    getTreeList,\n    getPage,\n    exportExcel,\n    getColumns,\n    searchForm,\n    getData,\n  } from './workorder.data';\n  import { addTabPage } from '@/utils/route';\n  import { MsgManager } from '/@/message/MsgManager';\n  import dayjs from 'dayjs';\n  import { assign } from 'lodash-es';\n  import { Memory } from '@/router/index';\n\n  const { t } = useI18n();\n  const routeQuery = Memory.getInstance().getQuery(); // route.query;\n  const message = useMessage();\n  const treeData = ref<TreeItem[]>([]);\n  let searchInfo = ref<any>({\n    stationOrganId: routeQuery.stationOrganId,\n    stationId: routeQuery.stationId,\n  });\n  const checkedNode = reactive<any>({});\n  const selectedKeys = ref<any>([routeQuery.stationOrganId]);\n  const disabledBtn = ref<boolean>(true);\n\n  const getParam = (isPage: boolean) => {\n    const form = getForm();\n    const query = {} as any;\n    assign(query, routeQuery, form.getFieldsValue(), searchInfo.value);\n    if (isPage) {\n      const paginationRef = getPaginationRef() as any;\n      query.pageNo = paginationRef.current;\n      query.pageSize = paginationRef.pageSize;\n    }\n    if (!searchInfo.value.sortField) {\n      query.sortField = 'fillinDate';\n      query.sortOrder = 'desc';\n    }\n    if (query.status instanceof Array && query.status.length > 0) {\n      query.status = query.status.join(',');\n    }\n    if (query.startMonth) {\n      query.startMonth = dayjs(query.startMonth).format('YYYY-MM');\n    }\n    if (query.endMonth) {\n      query.endMonth = dayjs(query.endMonth).format('YYYY-MM');\n    }\n    if (query.planStartDate) {\n      query.planStartDate = query.planStartDate + ' 00:00';\n    }\n    if (query.planEndDate) {\n      query.planEndDate = query.planEndDate + ' 23:59';\n    }\n    return query;\n  };\n\n  const getPageByParam = async () => {\n    const query = getParam(true);\n    const pageList = await getPage(query);\n    return pageList.result;\n  };\n\n  // searchForm.showAdvancedButton = Object.keys(routeQuery).length > 0 ? false : true;\n  const tableTitle = ref<string>('工单管理');\n  const [\n    registerTable,\n    { reload, getPaginationRef, getForm, getSelectRows, clearSelectedRowKeys },\n  ] = useTable({\n    title: tableTitle,\n    api: getPageByParam,\n    columns: getColumns(),\n    useSearchForm: true,\n    formConfig: searchForm,\n    bordered: true,\n    rowSelection: {\n      type: 'radio',\n    },\n    sortFn: (sortInfo: SorterResult) => {\n      const sortOrder = sortInfo.order?.replace('end', '');\n      searchInfo.value.sortOrder = sortOrder;\n      searchInfo.value.sortField = sortOrder ? sortInfo.field : undefined;\n    },\n    showTableSetting: true,\n    // tableSetting: { fullScreen: true },\n    showIndexColumn: true,\n  });\n\n  const handleMenuClick: MenuProps['onClick'] = (e) => {\n    if (!checkedNode.periodId) {\n      message.warning('请选择电站组织期数节点');\n      return;\n    }\n    const workOrderTypeText = e.item.title as string;\n    addTabPage('/po/workorder/create', getTabPageName(null, workOrderTypeText), {\n      ...checkedNode,\n      workOrderType: e.key,\n      workOrderTypeText: workOrderTypeText,\n      bizFileId: buildShortUUID(),\n    });\n  };\n\n  // 查询左侧树数据\n  async function queryTreeList() {\n    const typeList = await getTreeList({});\n    treeData.value = typeList.result as unknown[] as TreeItem[];\n  }\n\n  // 左侧树选中事件\n  function handleSelect(node) {\n    searchInfo.value.periodId = null;\n    searchInfo.value.stationId = null;\n    searchInfo.value.stationOrganId = null;\n    checkedNode.periodId = '';\n    checkedNode.periodName = '';\n    checkedNode.stationId = '';\n    checkedNode.stationName = '';\n    checkedNode.stationOrganId = '';\n    checkedNode.stationOrganName = '';\n    if (node) {\n      if (node.nodeKindId === 'org') {\n        searchInfo.value.stationOrganId = node.id;\n      }\n      if (node.nodeKindId === 'station') {\n        searchInfo.value.stationId = node.powerStationId;\n        checkedNode.stationId = node.powerStationId;\n        checkedNode.stationName = node.powerStationName;\n        checkedNode.stationOrganId = node.organId;\n        checkedNode.stationOrganName = node.organName;\n      }\n      if (node.nodeKindId === 'period') {\n        searchInfo.value.periodId = node.powerStationPeriodId;\n        searchInfo.value.stationId = node.powerStationId;\n        checkedNode.periodId = node.powerStationPeriodId;\n        checkedNode.periodName = node.powerStationPeriodName;\n        checkedNode.stationId = node.powerStationId;\n        checkedNode.stationName = node.powerStationName;\n        checkedNode.stationOrganId = node.organId;\n        checkedNode.stationOrganName = node.organName;\n      }\n    }\n    reload();\n  }\n\n  function handleView(record: any) {\n    CommonUtil.toFlowPage(record.id, record.workOrderTypeText);\n  }\n\n  const getTabPageName = (record?: any, workOrderTypeText?: string) => {\n    const name = record?.workOrderTypeText ? record?.workOrderTypeText : workOrderTypeText;\n    if (!record?.id) {\n      return `${t('common.action.create')}${name}`;\n    }\n    if (record?.status === 0) {\n      return `${t('common.action.edit')}${name}`;\n    }\n    if (record?.status === 1 || record?.status === 6) {\n      return `审批${name}`;\n    }\n    return `查看${name}`;\n  };\n\n  function handleExport() {\n    message.createConfirm({\n      title: t('common.message.confirmTitle'),\n      iconType: 'warning',\n      content: t('common.message.exportMessage'),\n      async onOk() {\n        const query = getParam(false);\n        query.filename = `${tableTitle.value}.xls`;\n        query.excelList = getColumns();\n        await exportExcel(query).then((res) => {\n          exportExcelFile(res?.data, query.filename);\n        });\n        message.success(t('common.exportSuccessText'));\n      },\n    });\n  }\n\n  function checkSelectData() {\n    const rows = getSelectRows();\n    if (rows.length == 0) {\n      message.error('请选择一行数据');\n      return false;\n    }\n    return rows[0];\n  }\n\n  const handleDelete = async () => {\n    const record = checkSelectData();\n    if (!record) {\n      return;\n    }\n    await message.delConfirm();\n    if (record.status != 0) {\n      message.error(t('common.message.delNotDraftMessage'));\n      return;\n    }\n    const res = await getData({ id: record.id });\n    await ProcessInstanceApi.deleteProcessInstance(res.result?.processVariable?.processInstanceId);\n    message.success(t('common.delSuccess'));\n    clearSelectedRowKeys();\n    reload();\n  };\n\n  //-----------------------------------------------------跳转相关 start----------------------------------------------------\n\n  // 展开电站树，选中指定电站\n  const expandedKeys = ref<Array<string>>([]);\n  const setTreeNode = async (stationId: string) => {\n    if (!stationId) {\n      return;\n    }\n    let expandedId = '';\n    setTimeout(async () => {\n      treeData.value.forEach((item) => {\n        if (item.children) {\n          item.children.forEach((element) => {\n            if (element.id === stationId) {\n              expandedId = item.id;\n            }\n          });\n        }\n      });\n      expandedKeys.value = [expandedId, stationId];\n      selectedKeys.value = [stationId];\n    }, 500);\n  };\n\n  const handleRouteQuery = async () => {\n    await setTreeNode(routeQuery.stationId as string);\n    const form = getForm();\n    const status = routeQuery.status as string;\n    if (status) {\n      routeQuery.status = status.split(',');\n    }\n    form.setFieldsValue({ ...routeQuery });\n  };\n\n  //----------------------------------------------------跳转相关 end--------------------------------------------------------\n\n  function handleSelectionChange({ rows }) {\n    disabledBtn.value = rows.length === 0;\n  }\n\n  // 启动执行代码\n  onMounted(async () => {\n    await queryTreeList();\n    await handleRouteQuery();\n\n    MsgManager.getInstance().listen('work-order', reload);\n  });\n</script>\n<style lang=\"less\" scoped>\n  @import '/@/design/biz/bizList.less';\n</style>\n"],"names":["t","useI18n","routeQuery","Memory","message","useMessage","treeData","ref","searchInfo","checkedNode","reactive","selectedKeys","disabledBtn","getParam","isPage","form","getForm","query","assign","paginationRef","getPaginationRef","dayjs","getPageByParam","__async","getPage","tableTitle","registerTable","reload","getSelectRows","clearSelectedRowKeys","useTable","getColumns","searchForm","sortInfo","sortOrder","_a","handleMenuClick","workOrderTypeText","addTabPage","getTabPageName","__spreadProps","__spreadValues","buildShortUUID","queryTreeList","typeList","getTreeList","handleSelect","node","handleView","record","CommonUtil.toFlowPage","name","handleExport","exportExcel","res","exportExcelFile","checkSelectData","rows","handleDelete","getData","ProcessInstanceApi.deleteProcessInstance","_b","expandedKeys","setTreeNode","stationId","expandedId","item","element","handleRouteQuery","status","handleSelectionChange","onMounted","MsgManager"],"mappings":"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"}