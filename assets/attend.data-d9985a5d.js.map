{"version":3,"file":"attend.data-d9985a5d.js","sources":["../../src/views/oa/attend/attend.data.ts"],"sourcesContent":["import { BasicColumn, FormSchema } from '/@/components/Table';\nimport type { FormProps } from '/@/components/Form/src/types/form';\nimport { useUserStore } from '/@/store/modules/user';\n\nexport enum SchedulingType {\n  // 白班\n  DAY = 'day',\n  // 夜班\n  NIGHT = 'night',\n}\n\nexport const columns = (): BasicColumn[] => {\n  const result = [\n    {\n      title: '所属公司',\n      dataIndex: 'stationOrganName',\n      headAlign: 'center',\n      align: 'left',\n      sorter: true,\n      resizable: true,\n      width: 220,\n    },\n    {\n      title: '电站名称',\n      dataIndex: 'stationName',\n      headAlign: 'center',\n      align: 'left',\n      sorter: true,\n      resizable: true,\n      width: 220,\n    },\n    {\n      title: '并网容量(MWp)',\n      dataIndex: 'connectCapacity',\n      headAlign: 'center',\n      align: 'right',\n      sorter: true,\n      resizable: true,\n      width: 140,\n    },\n    { title: '月份', dataIndex: 'month', sorter: true, resizable: true, width: 100 },\n    { title: '排班周期', dataIndex: 'period', sorter: true, resizable: true, width: 180 },\n    {\n      title: '工作日白班人次',\n      dataIndex: 'numOfDayWeekdays',\n      headAlign: 'center',\n      align: 'right',\n      sorter: true,\n      resizable: true,\n      width: 150,\n    },\n    {\n      title: '工作日夜班人次',\n      dataIndex: 'numOfNightWeekdays',\n      headAlign: 'center',\n      align: 'right',\n      sorter: true,\n      resizable: true,\n      width: 150,\n    },\n    {\n      title: '节假日白班人次',\n      dataIndex: 'numOfDayHoliday',\n      headAlign: 'center',\n      align: 'right',\n      sorter: true,\n      resizable: true,\n      width: 150,\n    },\n    {\n      title: '节假日夜班人次',\n      dataIndex: 'numOfNightHoliday',\n      headAlign: 'center',\n      align: 'right',\n      sorter: true,\n      resizable: true,\n      width: 150,\n    },\n    { title: '创建时间', dataIndex: 'createTime', sorter: true, resizable: true, width: 150 },\n    { title: '修改时间', dataIndex: 'updateTime', sorter: true, resizable: true, width: 150 },\n  ];\n  if (useUserStore().isMultiOrganization) {\n    return result as BasicColumn[];\n  } else {\n    const [, ...others] = result;\n    return [...others] as BasicColumn[];\n  }\n};\n\nexport const searchForm: FormProps = {\n  baseColProps: { span: 8 },\n  labelWidth: 120,\n  autoAdvancedLine: 1,\n  schemas: [\n    {\n      field: 'month',\n      label: '月份',\n      component: 'MonthPicker',\n      componentProps: {\n        format: 'YYYY-MM',\n        valueFormat: 'YYYY-MM',\n        style: 'width:100%',\n      },\n    },\n  ],\n};\n\nexport const detailColumns: BasicColumn[] = [\n  { title: '日期', dataIndex: 'day', width: 100 },\n  { title: '星期', dataIndex: 'week', width: 100 },\n  { title: '日期类型', dataIndex: 'dayTypeText', width: 100 },\n  { title: '白班人员', dataIndex: 'dayPersonNames', width: 200 },\n  { title: '夜班人员', dataIndex: 'nightPersonNames', width: 200 },\n  { title: '未排班人员', dataIndex: 'unscheduledPersonName', width: 200 },\n  { title: '备注', headAlign: 'center', align: 'left', dataIndex: 'remark', width: 320 },\n];\n\nexport const detailModalColumns: BasicColumn[] = [\n  { title: '月份', dataIndex: 'month', width: 100 },\n  { title: '排班周期', dataIndex: 'period', width: 180 },\n  { title: '创建时间', dataIndex: 'createTime', width: 150 },\n];\n\nconst dayOptions = [...Array(30)].map((_, i) => {\n  const value = i + 2;\n  return { value: value, label: value };\n});\nexport const modalFormSchema: FormSchema[] = [\n  {\n    field: 'rule',\n    label: '月排班规则',\n    component: 'DictSelectBox',\n    componentProps: ({ formActionType, formModel }) => {\n      return {\n        type: 'monthly_scheduling_rule',\n        onChange: (value) => {\n          if (!formActionType) {\n            return;\n          }\n          const { clearValidate } = formActionType;\n          if (value === 'natural_month') {\n            formModel.startDay = '';\n            formModel.endDay = '';\n            clearValidate();\n          }\n        },\n      };\n    },\n    required: true,\n  },\n  {\n    field: 'startDay',\n    label: '当月开始日期',\n    component: 'SelectBox',\n    componentProps: ({ formActionType, formModel }) => {\n      return {\n        data: dayOptions,\n        onChange: (value) => {\n          if (!formActionType) {\n            return;\n          }\n          if (value) {\n            formModel.endDay = Number(value) - 1;\n          } else {\n            formModel.endDay = '';\n          }\n        },\n      };\n    },\n    dynamicDisabled({ values }) {\n      const { rule } = values;\n      return rule === 'natural_month';\n    },\n    dynamicRules: function ({ values }) {\n      const { rule } = values;\n      return [{ required: rule === 'non_natural_month' }];\n    },\n  },\n  {\n    field: 'endDay',\n    label: '次月结束日期',\n    component: 'Input',\n    componentProps: {\n      disabled: true,\n    },\n  },\n  {\n    field: 'createTime',\n    label: '创建时间',\n    component: 'Input',\n    componentProps: {\n      disabled: true,\n    },\n  },\n  {\n    field: 'updateTime',\n    label: '修改时间',\n    component: 'Input',\n    componentProps: {\n      disabled: true,\n    },\n  },\n];\n"],"names":["SchedulingType","columns","result","useUserStore","others","searchForm","detailColumns","detailModalColumns","dayOptions","_","i","value","modalFormSchema","formActionType","formModel","clearValidate","values","rule"],"mappings":"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"}