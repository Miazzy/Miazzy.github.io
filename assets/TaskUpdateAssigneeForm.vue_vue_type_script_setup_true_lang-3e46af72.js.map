{"version":3,"file":"TaskUpdateAssigneeForm.vue_vue_type_script_setup_true_lang-3e46af72.js","sources":["../../src/views/bpm/manage/processInstance/detail/TaskUpdateAssigneeForm.vue"],"sourcesContent":["<template>\n  <Dialog v-model=\"dialogVisible\" title=\"转派审批人\" width=\"500\">\n    <el-form\n      ref=\"formRef\"\n      v-loading=\"formLoading\"\n      :model=\"formData\"\n      :rules=\"formRules\"\n      label-width=\"110px\"\n    >\n      <el-form-item label=\"新审批人\" prop=\"assigneeUserId\">\n        <el-select v-model=\"formData.assigneeUserId\" clearable style=\"width: 100%\">\n          <el-option\n            v-for=\"item in userList\"\n            :key=\"item.id\"\n            :label=\"item.nickname\"\n            :value=\"item.id\"\n          />\n        </el-select>\n      </el-form-item>\n    </el-form>\n    <template #footer>\n      <el-button :disabled=\"formLoading\" type=\"primary\" @click=\"submitForm\">确 定</el-button>\n      <el-button @click=\"dialogVisible = false\">取 消</el-button>\n    </template>\n  </Dialog>\n</template>\n<script lang=\"ts\" setup>\n  import * as TaskApi from '@/api/bpm/task';\n  import * as UserApi from '@/api/bpm/system/user';\n  import { ref } from 'vue';\n\n  defineOptions({ name: 'BpmTaskUpdateAssigneeForm' });\n\n  const dialogVisible = ref(false); // 弹窗的是否展示\n  const formLoading = ref(false); // 表单的加载中\n  const formData = ref({\n    id: '',\n    assigneeUserId: undefined,\n  });\n  const formRules = ref({\n    assigneeUserId: [{ required: true, message: '新审批人不能为空', trigger: 'change' }],\n  });\n\n  const formRef = ref(); // 表单 Ref\n  const userList = ref<any[]>([]); // 用户列表\n\n  /** 打开弹窗 */\n  const open = async (id: string) => {\n    dialogVisible.value = true;\n    resetForm();\n    formData.value.id = id;\n    // 获得用户列表\n    userList.value = await UserApi.getSimpleUserList();\n  };\n  defineExpose({ open }); // 提供 openModal 方法，用于打开弹窗\n\n  /** 提交表单 */\n  const emit = defineEmits(['success']); // 定义 success 事件，用于操作成功后的回调\n  const submitForm = async () => {\n    // 校验表单\n    if (!formRef.value) return;\n    const valid = await formRef.value.validate();\n    if (!valid) return;\n    // 提交请求\n    formLoading.value = true;\n    try {\n      await TaskApi.updateTaskAssignee(formData.value);\n      dialogVisible.value = false;\n      // 发送操作成功的事件\n      emit('success');\n    } finally {\n      formLoading.value = false;\n    }\n  };\n\n  /** 重置表单 */\n  const resetForm = () => {\n    formData.value = {\n      id: '',\n      assigneeUserId: undefined,\n    };\n    formRef.value?.resetFields();\n  };\n</script>\n"],"names":["dialogVisible","ref","formLoading","formData","formRules","formRef","userList","__expose","id","__async","resetForm","UserApi.getSimpleUserList","submitForm","TaskApi.updateTaskAssignee","emit","_a"],"mappings":"ohBAiCQ,MAAAA,EAAgBC,EAAI,EAAK,EACzBC,EAAcD,EAAI,EAAK,EACvBE,EAAWF,EAAI,CACnB,GAAI,GACJ,eAAgB,MAAA,CACjB,EACKG,EAAYH,EAAI,CACpB,eAAgB,CAAC,CAAE,SAAU,GAAM,QAAS,WAAY,QAAS,SAAU,CAAA,CAC5E,EAEKI,EAAUJ,IACVK,EAAWL,EAAW,CAAA,CAAE,EAUjBM,EAAA,CAAE,KAPKC,GAAeC,EAAA,sBACjCT,EAAc,MAAQ,GACZU,IACVP,EAAS,MAAM,GAAKK,EAEXF,EAAA,MAAQ,MAAMK,GAA0B,GAE9B,EAIrB,MAAMC,EAAa,IAAYH,EAAA,sBAI7B,GAFI,GAACJ,EAAQ,OAET,EADU,MAAMA,EAAQ,MAAM,SAAS,IAG3C,CAAAH,EAAY,MAAQ,GAChB,GAAA,CACI,MAAAW,EAA2BV,EAAS,KAAK,EAC/CH,EAAc,MAAQ,GAEtBc,EAAK,SAAS,CAAA,QACd,CACAZ,EAAY,MAAQ,EACtB,EAAA,GAIIQ,EAAY,IAAM,OACtBP,EAAS,MAAQ,CACf,GAAI,GACJ,eAAgB,MAAA,GAElBY,EAAAV,EAAQ,QAAR,MAAAU,EAAe,aAAY"}