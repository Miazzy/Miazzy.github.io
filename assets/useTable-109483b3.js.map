{"version":3,"file":"useTable-109483b3.js","sources":["../../src/components/Table/src/hooks/useTable.ts"],"sourcesContent":["import type { BasicTableProps, TableActionType, FetchParams, BasicColumn } from '../types/table';\nimport type { PaginationProps } from '../types/pagination';\nimport type { DynamicProps } from '/#/utils';\nimport type { FormActionType } from '/@/components/Form';\nimport type { WatchStopHandle } from 'vue';\nimport { getDynamicProps } from '/@/utils';\nimport { ref, onUnmounted, unref, watch, toRaw } from 'vue';\nimport { isProdMode } from '/@/utils/env';\nimport { error } from '/@/utils/log';\n\ntype Props = Partial<DynamicProps<BasicTableProps>>;\n\ntype UseTableMethod = TableActionType & {\n  getForm: () => FormActionType;\n};\n\nexport function useTable(tableProps?: Props): [\n  (instance: TableActionType, formInstance: UseTableMethod) => void,\n  TableActionType & {\n    getForm: () => FormActionType;\n  },\n] {\n  const tableRef = ref<Nullable<TableActionType>>(null);\n  const loadedRef = ref<Nullable<boolean>>(false);\n  const formRef = ref<Nullable<UseTableMethod>>(null);\n\n  let stopWatch: WatchStopHandle;\n\n  function register(instance: TableActionType, formInstance: UseTableMethod) {\n    isProdMode() &&\n      onUnmounted(() => {\n        tableRef.value = null;\n        loadedRef.value = null;\n      });\n\n    if (unref(loadedRef) && isProdMode() && instance === unref(tableRef)) return;\n\n    tableRef.value = instance;\n    formRef.value = formInstance;\n    tableProps && instance.setProps(getDynamicProps(tableProps));\n    loadedRef.value = true;\n\n    stopWatch?.();\n\n    stopWatch = watch(\n      () => tableProps,\n      () => {\n        tableProps && instance.setProps(getDynamicProps(tableProps));\n      },\n      {\n        immediate: true,\n        deep: true,\n      },\n    );\n  }\n\n  function getTableInstance(): TableActionType | null {\n    const table = unref(tableRef);\n    if (!table) {\n      return null;\n    }\n    return table as TableActionType;\n  }\n\n  const methods: TableActionType & {\n    getForm: () => FormActionType;\n  } = {\n    reload: async (opt?: FetchParams) => {\n      return await getTableInstance()?.reload(opt);\n    },\n    reloadData: async (opt?: FetchParams, loading?: Boolean) => {\n      return await getTableInstance()?.reloadData(opt, loading);\n    },\n    reloadByDataSource: async (data: any[] = []) => {\n      return await getTableInstance()?.reloadByDataSource(data);\n    },\n    selectTableRow: async (index: number = 0) => {\n      return await getTableInstance()?.selectTableRow(index);\n    },\n    reloadApiDataByLocal: async (data: any[] = []) => {\n      return await getTableInstance()?.reloadApiDataByLocal(data);\n    },\n    setProps: (props: Partial<BasicTableProps>) => {\n      getTableInstance()?.setProps(props);\n    },\n    redoHeight: () => {\n      getTableInstance()?.redoHeight();\n    },\n    setSelectedRows: (rows: Recordable[]) => {\n      return toRaw(getTableInstance()?.setSelectedRows(rows));\n    },\n    setLoading: (loading: boolean) => {\n      getTableInstance()?.setLoading(loading);\n    },\n    getDataSource: () => {\n      return getTableInstance()?.getDataSource();\n    },\n    getRawDataSource: () => {\n      return getTableInstance()?.getRawDataSource();\n    },\n    getColumns: ({ ignoreIndex = false }: { ignoreIndex?: boolean } = {}) => {\n      const columns = getTableInstance()?.getColumns({ ignoreIndex }) || [];\n      return toRaw(columns);\n    },\n    setColumns: (columns: BasicColumn[]) => {\n      getTableInstance()?.setColumns(columns);\n    },\n    setTableData: (values: any[]) => {\n      return getTableInstance()?.setTableData(values);\n    },\n    setPagination: (info: Partial<PaginationProps>) => {\n      return getTableInstance()?.setPagination(info);\n    },\n    deleteSelectRowByKey: (key: string) => {\n      getTableInstance()?.deleteSelectRowByKey(key);\n    },\n    getSelectRowKeys: () => {\n      return toRaw(getTableInstance()?.getSelectRowKeys());\n    },\n    getSelectRows: () => {\n      return toRaw(getTableInstance()?.getSelectRows());\n    },\n    clearSelectedRowKeys: () => {\n      getTableInstance()?.clearSelectedRowKeys();\n    },\n    setSelectedRowKeys: (keys: string[] | number[]) => {\n      getTableInstance()?.setSelectedRowKeys(keys);\n    },\n    getPaginationRef: () => {\n      return getTableInstance()?.getPaginationRef();\n    },\n    getSize: () => {\n      return toRaw(getTableInstance()?.getSize());\n    },\n    updateTableData: (index: number, key: string, value: any) => {\n      return getTableInstance()?.updateTableData(index, key, value);\n    },\n    deleteTableDataRecord: (rowKey: string | number | string[] | number[]) => {\n      return getTableInstance()?.deleteTableDataRecord(rowKey);\n    },\n    insertTableDataRecord: (record: Recordable | Recordable[], index?: number) => {\n      return getTableInstance()?.insertTableDataRecord(record, index);\n    },\n    updateTableDataRecord: (rowKey: string | number, record: Recordable) => {\n      return getTableInstance()?.updateTableDataRecord(rowKey, record);\n    },\n    findTableDataRecord: (rowKey: string | number) => {\n      return getTableInstance()?.findTableDataRecord(rowKey);\n    },\n    getRowSelection: () => {\n      return toRaw(getTableInstance()?.getRowSelection());\n    },\n    getCacheColumns: () => {\n      return toRaw(getTableInstance()?.getCacheColumns());\n    },\n    getForm: () => {\n      return unref(formRef) as unknown as FormActionType;\n    },\n    setShowPagination: async (show: boolean) => {\n      getTableInstance()?.setShowPagination(show);\n    },\n    getShowPagination: () => {\n      return toRaw(getTableInstance()?.getShowPagination());\n    },\n    expandAll: () => {\n      getTableInstance()?.expandAll();\n    },\n    expandRows: (keys: string[]) => {\n      getTableInstance()?.expandRows(keys);\n    },\n    collapseAll: () => {\n      getTableInstance()?.collapseAll();\n    },\n    scrollTo: (pos: string) => {\n      getTableInstance()?.scrollTo(pos);\n    },\n  };\n\n  return [register, methods];\n}\n"],"names":["useTable","tableProps","tableRef","ref","loadedRef","formRef","stopWatch","register","instance","formInstance","onUnmounted","unref","isProdMode","getDynamicProps","watch","getTableInstance","table","opt","__async","_a","loading","_0","data","index","props","rows","toRaw","ignoreIndex","columns","values","info","key","keys","value","rowKey","record","show","pos"],"mappings":"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"}