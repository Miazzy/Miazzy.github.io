{"version":3,"file":"BasicTable-0434a334.js","sources":["../../src/components/Table/src/components/EditTableHeaderIcon.vue","../../src/components/Table/src/components/HeaderCell.vue","../../src/components/Table/src/hooks/usePagination.tsx","../../src/components/Table/src/components/editable/index.ts","../../src/utils/formatUtil.ts","../../src/components/Table/src/hooks/useColumns.ts","../../src/components/Table/src/hooks/useDataSource.ts","../../src/components/Table/src/hooks/useLoading.ts","../../src/components/Table/src/hooks/useRowSelection.ts","../../src/components/Table/src/hooks/useTableScroll.ts","../../src/components/Table/src/hooks/useScrollTo.ts","../../src/components/Table/src/hooks/useCustomRow.ts","../../src/components/Table/src/hooks/useTableStyle.ts","../../src/components/Table/src/components/settings/ColumnSetting.vue","../../src/components/Table/src/components/settings/SizeSetting.vue","../../src/components/Table/src/components/settings/RedoSetting.vue","../../src/components/Table/src/components/settings/FullScreenSetting.vue","../../src/components/Table/src/components/settings/index.vue","../../src/components/Table/src/components/TableTitle.vue","../../src/components/Table/src/components/TableHeader.vue","../../src/components/Table/src/hooks/useTableHeader.ts","../../src/components/Table/src/hooks/useTableExpand.ts","../../src/components/Table/src/components/TableFooter.vue","../../src/components/Table/src/hooks/useTableFooter.ts","../../src/components/Table/src/hooks/useTableForm.ts","../../src/components/Table/src/BasicTable.vue"],"sourcesContent":["<template>\n  <span>\n    <slot></slot>\n    {{ title }}\n    <FormOutlined />\n  </span>\n</template>\n<script lang=\"ts\">\n  import { defineComponent } from 'vue';\n  import { FormOutlined } from '@ant-design/icons-vue';\n\n  export default defineComponent({\n    name: 'EditTableHeaderIcon',\n    components: { FormOutlined },\n    props: { title: { type: String, default: '' } },\n  });\n</script>\n","<template>\n  <EditTableHeaderCell v-if=\"getIsEdit\">\n    {{ getTitle }}\n  </EditTableHeaderCell>\n  <span v-else style=\"display: block\" :style=\"`text-align: ${headAlign};`\">{{ getTitle }}</span>\n  <BasicHelp v-if=\"getHelpMessage\" :text=\"getHelpMessage\" :class=\"`${prefixCls}__help`\" />\n</template>\n<script lang=\"ts\">\n  import type { PropType } from 'vue';\n  import type { BasicColumn } from '../types/table';\n  import { defineComponent, computed } from 'vue';\n  import BasicHelp from '/@/components/Basic/src/BasicHelp.vue';\n  import EditTableHeaderCell from './EditTableHeaderIcon.vue';\n  import { useDesign } from '/@/hooks/web/useDesign';\n\n  export default defineComponent({\n    name: 'TableHeaderCell',\n    components: {\n      EditTableHeaderCell,\n      BasicHelp,\n    },\n    props: {\n      column: {\n        type: Object as PropType<BasicColumn>,\n        default: () => ({}),\n      },\n    },\n    setup(props) {\n      const { prefixCls } = useDesign('basic-table-header-cell');\n\n      const getIsEdit = computed(() => !!props.column?.edit);\n      const getTitle = computed(() => props.column?.customTitle || props.column?.title);\n      const getHelpMessage = computed(() => props.column?.helpMessage);\n      const headAlign = props.column?.headAlign || props.column?.align || 'left';\n\n      return { prefixCls, getIsEdit, getTitle, getHelpMessage, headAlign };\n    },\n  });\n</script>\n<style lang=\"less\">\n  @prefix-cls: ~'@{namespace}-basic-table-header-cell';\n\n  .@{prefix-cls} {\n    &__help {\n      margin-left: 8px;\n      color: rgb(0 0 0 / 65%) !important;\n    }\n  }\n</style>\n","import type { PaginationProps } from '../types/pagination';\nimport type { BasicTableProps } from '../types/table';\nimport { computed, unref, ref, ComputedRef, watch } from 'vue';\nimport { LeftOutlined, RightOutlined } from '@ant-design/icons-vue';\nimport { isBoolean } from '/@/utils/is';\nimport { PAGE_SIZE, PAGE_SIZE_OPTIONS, DEFAULT_QUICK_JUMPER, DEFAULT_SIZE_CHANGER } from '../const';\nimport { useI18n } from '/@/hooks/web/useI18n';\n\ninterface ItemRender {\n  page: number;\n  type: 'page' | 'prev' | 'next';\n  originalElement: any;\n}\n\nfunction itemRender({ page, type, originalElement }: ItemRender) {\n  if (type === 'prev') {\n    return page === 0 ? null : <LeftOutlined />;\n  } else if (type === 'next') {\n    return page === 1 ? null : <RightOutlined />;\n  }\n  return originalElement;\n}\n\nexport function usePagination(refProps: ComputedRef<BasicTableProps>) {\n  const { t } = useI18n();\n\n  const configRef = ref<PaginationProps>({});\n  const show = ref(true);\n\n  watch(\n    () => unref(refProps).pagination,\n    (pagination) => {\n      if (!isBoolean(pagination) && pagination) {\n        configRef.value = {\n          ...unref(configRef),\n          ...(pagination ?? {}),\n        };\n      }\n    },\n  );\n\n  const getPaginationInfo = computed((): PaginationProps | boolean => {\n    const { pagination } = unref(refProps);\n\n    if (!unref(show) || (isBoolean(pagination) && !pagination)) {\n      return false;\n    }\n\n    return {\n      current: 1,\n      pageSize: PAGE_SIZE,\n      size: 'small',\n      defaultPageSize: PAGE_SIZE,\n      showTotal: (total) => t('component.table.total', { total }),\n      pageSizeOptions: PAGE_SIZE_OPTIONS,\n      itemRender: itemRender,\n      showSizeChanger: DEFAULT_SIZE_CHANGER,\n      showQuickJumper: DEFAULT_QUICK_JUMPER,\n      ...(isBoolean(pagination) ? {} : pagination),\n      ...unref(configRef),\n    };\n  });\n\n  function setPagination(info: Partial<PaginationProps>) {\n    const paginationInfo = unref(getPaginationInfo);\n    configRef.value = {\n      ...(!isBoolean(paginationInfo) ? paginationInfo : {}),\n      ...info,\n    };\n  }\n\n  function getPagination() {\n    return unref(getPaginationInfo);\n  }\n\n  function getShowPagination() {\n    return unref(show);\n  }\n\n  async function setShowPagination(flag: boolean) {\n    show.value = flag;\n  }\n\n  return { getPagination, getPaginationInfo, setShowPagination, getShowPagination, setPagination };\n}\n","import type { BasicColumn } from '/@/components/Table/src/types/table';\n\nimport { h, Ref, toRaw } from 'vue';\n\nimport EditableCell from './EditableCell.vue';\nimport { isArray } from '/@/utils/is';\n\ninterface Params {\n  text: string;\n  record: Recordable;\n  index: number;\n}\n\nexport function renderEditCell(column: BasicColumn) {\n  return ({ text: value, record, index }: Params) => {\n    toRaw(record).onValid = async () => {\n      if (isArray(record?.validCbs)) {\n        const validFns = (record?.validCbs || []).map((fn) => fn());\n        const res = await Promise.all(validFns);\n        return res.every((item) => !!item);\n      } else {\n        return false;\n      }\n    };\n\n    toRaw(record).onEdit = async (edit: boolean, submit = false) => {\n      if (!submit) {\n        record.editable = edit;\n      }\n\n      if (!edit && submit) {\n        if (!(await record.onValid())) return false;\n        const res = await record.onSubmitEdit?.();\n        if (res) {\n          record.editable = false;\n          return true;\n        }\n        return false;\n      }\n      // cancel\n      if (!edit && !submit) {\n        record.onCancelEdit?.();\n      }\n      return true;\n    };\n\n    return h(EditableCell, {\n      value,\n      record,\n      column,\n      index,\n    });\n  };\n}\n\nexport type EditRecordRow<T = Recordable> = Partial<\n  {\n    onEdit: (editable: boolean, submit?: boolean) => Promise<boolean>;\n    onValid: () => Promise<boolean>;\n    editable: boolean;\n    onCancel: Fn;\n    onSubmit: Fn;\n    submitCbs: Fn[];\n    cancelCbs: Fn[];\n    validCbs: Fn[];\n    editValueRefs: Recordable<Ref>;\n  } & T\n>;\n","export function formatNumber(value: string, format: string) {\n  const reg1 = /.0+/; // 小数点.后0的个数表示保留几位\n  const reg2 = /,#+/; // 逗号,后的#表示数字的分隔符为几位\n  let newValue = String(value);\n  if (format?.match(reg1)?.[0]) {\n    const fixedNum = format.match(reg1)[0].length - 1;\n    const decimalPart = newValue.split('.')[1];\n    if (decimalPart?.length > fixedNum) {\n      newValue = Number(value).toFixed(fixedNum);\n    }\n  } else {\n    newValue = Number(value).toFixed(0);\n  }\n  if (format?.match(reg2)?.[0]) {\n    const splitNum = format.match(reg2)[0].length - 1;\n    let intPart = newValue.split('.')[0];\n    const decimalPart = newValue.split('.')[1] ? '.' + newValue.split('.')[1] : '';\n    let formattedNumber = '';\n    while (intPart.length > splitNum) {\n      formattedNumber = ',' + intPart.substring(intPart.length - splitNum) + formattedNumber;\n      intPart = intPart.substring(0, intPart.length - splitNum);\n    }\n    newValue = intPart + formattedNumber + decimalPart;\n  }\n  return newValue;\n}\n\nexport function formatMoney(value: string, format: string, isPrefix?: boolean) {\n  if (value === undefined || value === null) {\n    return '';\n  }\n  const prefix = isPrefix || false;\n  let formatPrefix = '';\n  if (prefix) {\n    formatPrefix = format.slice(0, 1);\n  }\n  return Number(value) >= 0\n    ? formatPrefix + formatNumber(value, format)\n    : '-' + formatPrefix + formatNumber(value ? String(value).slice(1) : value, format);\n}\n","import type { BasicColumn, BasicTableProps, CellFormat, GetColumnsParams } from '../types/table';\nimport type { PaginationProps } from '../types/pagination';\nimport type { ComputedRef } from 'vue';\nimport { computed, Ref, ref, reactive, toRaw, unref, watch } from 'vue';\nimport { renderEditCell } from '../components/editable';\nimport { usePermission } from '/@/hooks/web/usePermission';\nimport { useI18n } from '/@/hooks/web/useI18n';\nimport { isArray, isBoolean, isFunction, isMap, isString } from '/@/utils/is';\nimport { cloneDeep, isEqual } from 'lodash-es';\nimport { formatToDate } from '/@/utils/dateUtil';\nimport { ACTION_COLUMN_FLAG, DEFAULT_ALIGN, INDEX_COLUMN_FLAG, PAGE_SIZE } from '../const';\nimport { formatNumber, formatMoney } from '/@/utils/formatUtil';\n\nfunction handleItem(item: BasicColumn, ellipsis: boolean) {\n  const { key, dataIndex, children } = item;\n  item.align = item.align || DEFAULT_ALIGN;\n  if (ellipsis) {\n    if (!key) {\n      item.key = dataIndex;\n    }\n    if (!isBoolean(item.ellipsis)) {\n      Object.assign(item, {\n        ellipsis,\n      });\n    }\n  }\n  if (children && children.length) {\n    handleChildren(children, !!ellipsis);\n  }\n}\n\nfunction handleChildren(children: BasicColumn[] | undefined, ellipsis: boolean) {\n  if (!children) return;\n  children.forEach((item) => {\n    const { children } = item;\n    handleItem(item, ellipsis);\n    handleChildren(children, ellipsis);\n  });\n}\n\nfunction handleIndexColumn(\n  propsRef: ComputedRef<BasicTableProps>,\n  getPaginationRef: ComputedRef<boolean | PaginationProps>,\n  columns: BasicColumn[],\n) {\n  const { t } = useI18n();\n\n  const { showIndexColumn, indexColumnProps, isTreeTable } = unref(propsRef);\n\n  let pushIndexColumns = false;\n  if (unref(isTreeTable)) {\n    return;\n  }\n  columns.forEach(() => {\n    const indIndex = columns.findIndex((column) => column.flag === INDEX_COLUMN_FLAG);\n    if (showIndexColumn) {\n      pushIndexColumns = indIndex === -1;\n    } else if (!showIndexColumn && indIndex !== -1) {\n      columns.splice(indIndex, 1);\n    }\n  });\n\n  if (!pushIndexColumns) return;\n\n  const isFixedLeft = columns.some((item) => item.fixed === 'left');\n\n  columns.unshift({\n    flag: INDEX_COLUMN_FLAG,\n    width: 50,\n    title: t('component.table.index'),\n    align: 'center',\n    customRender: ({ index }) => {\n      const getPagination = unref(getPaginationRef);\n      if (isBoolean(getPagination)) {\n        return `${index + 1}`;\n      }\n      const { current = 1, pageSize = PAGE_SIZE } = getPagination;\n      return ((current < 1 ? 1 : current) - 1) * pageSize + index + 1;\n    },\n    ...(isFixedLeft\n      ? {\n          fixed: 'left',\n        }\n      : {}),\n    ...indexColumnProps,\n  });\n\n  // 最后一个字段清除width\n  try {\n    if (columns.length >= 10) {\n      const column = columns[columns.length - 1];\n      delete column.width;\n    }\n  } catch (error) {\n    //\n  }\n}\n\nfunction handleActionColumn(propsRef: ComputedRef<BasicTableProps>, columns: BasicColumn[]) {\n  const { actionColumn } = unref(propsRef);\n  if (!actionColumn) return;\n\n  const hasIndex = columns.findIndex((column) => column.flag === ACTION_COLUMN_FLAG);\n  if (hasIndex === -1) {\n    columns.push({\n      ...columns[hasIndex],\n      fixed: 'right',\n      ...actionColumn,\n      flag: ACTION_COLUMN_FLAG,\n    });\n  }\n}\n\nexport function useColumns(\n  propsRef: ComputedRef<BasicTableProps>,\n  getPaginationRef: ComputedRef<boolean | PaginationProps>,\n) {\n  const columnsRef = ref(unref(propsRef).columns) as unknown as Ref<BasicColumn[]>;\n  let cacheColumns = unref(propsRef).columns;\n\n  const getColumnsRef = computed(() => {\n    const columns = cloneDeep(unref(columnsRef));\n\n    handleIndexColumn(propsRef, getPaginationRef, columns);\n    handleActionColumn(propsRef, columns);\n    if (!columns) {\n      return [];\n    }\n    const { ellipsis } = unref(propsRef);\n\n    columns.forEach((item) => {\n      const { customRender, slots } = item;\n\n      handleItem(\n        item,\n        Reflect.has(item, 'ellipsis') ? !!item.ellipsis : !!ellipsis && !customRender && !slots,\n      );\n    });\n    return columns;\n  });\n\n  function isIfShow(column: BasicColumn): boolean {\n    const ifShow = column.ifShow;\n\n    let isIfShow = true;\n\n    if (isBoolean(ifShow)) {\n      isIfShow = ifShow;\n    }\n    if (isFunction(ifShow)) {\n      isIfShow = ifShow(column);\n    }\n    return isIfShow;\n  }\n  const { hasPermission } = usePermission();\n\n  const getViewColumns = computed(() => {\n    const viewColumns = sortFixedColumn(unref(getColumnsRef));\n\n    const mapFn = (column) => {\n      const { slots, customRender, format, edit, editRow, flag } = column;\n\n      if (!slots || !slots?.title) {\n        // column.slots = { title: `header-${dataIndex}`, ...(slots || {}) };\n        column.customTitle = column.title;\n        Reflect.deleteProperty(column, 'title');\n      }\n      const isDefaultAction = [INDEX_COLUMN_FLAG, ACTION_COLUMN_FLAG].includes(flag!);\n      if (!customRender && format && !edit && !isDefaultAction) {\n        column.customRender = ({ text, record, index }) => {\n          return formatCell(text, format, record, index);\n        };\n      }\n\n      // edit table\n      if ((edit || editRow) && !isDefaultAction) {\n        column.customRender = renderEditCell(column);\n      }\n      return reactive(column);\n    };\n\n    const columns = cloneDeep(viewColumns);\n    return columns\n      .filter((column) => hasPermission(column.auth) && isIfShow(column))\n      .map((column) => {\n        if (column.children?.length) {\n          column.children = column.children.map(mapFn);\n        }\n        return mapFn(column);\n      });\n  });\n\n  watch(\n    () => unref(propsRef).columns,\n    (columns) => {\n      columnsRef.value = columns;\n      cacheColumns = columns?.filter((item) => !item.flag) ?? [];\n    },\n  );\n\n  function setCacheColumnsByField(dataIndex: string | undefined, value: Partial<BasicColumn>) {\n    if (!dataIndex || !value) {\n      return;\n    }\n    cacheColumns.forEach((item) => {\n      if (item.dataIndex === dataIndex) {\n        Object.assign(item, value);\n        return;\n      }\n    });\n  }\n  /**\n   * set columns\n   * @param columnList key｜column\n   */\n  function setColumns(columnList: Partial<BasicColumn>[] | (string | string[])[]) {\n    const columns = cloneDeep(columnList);\n    if (!isArray(columns)) return;\n\n    if (columns.length <= 0) {\n      columnsRef.value = [];\n      return;\n    }\n\n    const firstColumn = columns[0];\n\n    const cacheKeys = cacheColumns.map((item) => item.dataIndex);\n\n    if (!isString(firstColumn) && !isArray(firstColumn)) {\n      columnsRef.value = columns as BasicColumn[];\n    } else {\n      const columnKeys = (columns as (string | string[])[]).map((m) => m.toString());\n      const newColumns: BasicColumn[] = [];\n      cacheColumns.forEach((item) => {\n        newColumns.push({\n          ...item,\n          defaultHidden: !columnKeys.includes(item.dataIndex?.toString() || (item.key as string)),\n        });\n      });\n      // Sort according to another array\n      if (!isEqual(cacheKeys, columns)) {\n        newColumns.sort((prev, next) => {\n          return (\n            columnKeys.indexOf(prev.dataIndex?.toString() as string) -\n            columnKeys.indexOf(next.dataIndex?.toString() as string)\n          );\n        });\n      }\n      columnsRef.value = newColumns;\n    }\n  }\n\n  function getColumns(opt?: GetColumnsParams) {\n    const { ignoreIndex, ignoreAction, sort } = opt || {};\n    let columns = toRaw(unref(getColumnsRef));\n    if (ignoreIndex) {\n      columns = columns.filter((item) => item.flag !== INDEX_COLUMN_FLAG);\n    }\n    if (ignoreAction) {\n      columns = columns.filter((item) => item.flag !== ACTION_COLUMN_FLAG);\n    }\n\n    if (sort) {\n      columns = sortFixedColumn(columns);\n    }\n\n    return columns;\n  }\n  function getCacheColumns() {\n    return cacheColumns;\n  }\n  function setCacheColumns(columns: BasicColumn[]) {\n    if (!isArray(columns)) return;\n    cacheColumns = columns.filter((item) => !item.flag);\n  }\n\n  return {\n    getColumnsRef,\n    getCacheColumns,\n    getColumns,\n    setColumns,\n    getViewColumns,\n    setCacheColumnsByField,\n    setCacheColumns,\n  };\n}\n\nfunction sortFixedColumn(columns: BasicColumn[]) {\n  const fixedLeftColumns: BasicColumn[] = [];\n  const fixedRightColumns: BasicColumn[] = [];\n  const defColumns: BasicColumn[] = [];\n  for (const column of columns) {\n    if (column.fixed === 'left') {\n      fixedLeftColumns.push(column);\n      continue;\n    }\n    if (column.fixed === 'right') {\n      fixedRightColumns.push(column);\n      continue;\n    }\n    defColumns.push(column);\n  }\n  return [...fixedLeftColumns, ...defColumns, ...fixedRightColumns].filter(\n    (item) => !item.defaultHidden,\n  );\n}\n\n// format cell\nexport function formatCell(text: string, format: CellFormat, record: Recordable, index: number) {\n  if (!format) {\n    return text;\n  }\n\n  // custom function\n  if (isFunction(format)) {\n    return format(text, record, index);\n  }\n\n  try {\n    // date type\n    const DATE_FORMAT_PREFIX = 'date|';\n    if (isString(format) && format.startsWith(DATE_FORMAT_PREFIX) && text) {\n      const dateFormat = format.replace(DATE_FORMAT_PREFIX, '');\n\n      if (!dateFormat) {\n        return text;\n      }\n      return formatToDate(text, dateFormat);\n    }\n\n    // Map\n    if (isMap(format)) {\n      return format.get(text);\n    }\n\n    if (typeof format === 'object' && format.type) {\n      if (format.type === 'Text') {\n        // 文本\n        return text;\n      }\n      if (format.type === 'Date' && format.format) {\n        // 日期\n        const dateFormatTypes = {\n          date: 'YYYY-MM-DD',\n          datetime: 'YYYY-MM-DD HH:mm:ss',\n          time: 'HH:mm:ss',\n          datestime: 'YYYY-MM-DD HH:mm',\n          stime: 'HH:mm',\n        };\n        return formatToDate(text, dateFormatTypes[format.format]);\n      }\n      if (format.type === 'Number' && format.format) {\n        // 数字\n        let formatStr = format.format;\n        return formatNumber(text, formatStr);\n      }\n      if (format.type === 'Money' && format.format) {\n        // 金额\n        let formatStr = format.format;\n        return formatMoney(text, formatStr);\n      }\n    }\n  } catch (error) {\n    return text;\n  }\n}\n","import type { BasicTableProps, FetchParams, SorterResult } from '../types/table';\nimport type { PaginationProps } from '../types/pagination';\nimport {\n  ref,\n  unref,\n  ComputedRef,\n  computed,\n  onMounted,\n  watch,\n  reactive,\n  Ref,\n  watchEffect,\n  isRef,\n  isReactive,\n} from 'vue';\nimport { useTimeoutFn } from '@vben/hooks';\nimport { buildUUID } from '/@/utils/uuid';\nimport { isFunction, isBoolean, isObject } from '/@/utils/is';\nimport { get, cloneDeep, merge } from 'lodash-es';\nimport { FETCH_SETTING, ROW_KEY, PAGE_SIZE } from '../const';\n\ninterface ActionType {\n  getPaginationInfo: ComputedRef<boolean | PaginationProps>;\n  setPagination: (info: Partial<PaginationProps>) => void;\n  setLoading: (loading: boolean) => void;\n  getFieldsValue: () => Recordable;\n  clearSelectedRowKeys: () => void;\n  tableData: Ref<Recordable[]>;\n}\n\ninterface SearchState {\n  sortInfo: Recordable;\n  filterInfo: Record<string, string[]>;\n}\nexport function useDataSource(\n  propsRef: ComputedRef<BasicTableProps>,\n  {\n    getPaginationInfo,\n    setPagination,\n    setLoading,\n    getFieldsValue,\n    clearSelectedRowKeys,\n    tableData,\n  }: ActionType,\n  emit: EmitType,\n) {\n  const searchState = reactive<SearchState>({\n    sortInfo: {},\n    filterInfo: {},\n  });\n  const dataSourceRef = ref<Recordable[]>([]);\n  const rawDataSourceRef = ref<Recordable>({});\n\n  watchEffect(() => {\n    tableData.value = unref(dataSourceRef);\n  });\n\n  watch(\n    () => unref(propsRef).dataSource,\n    () => {\n      const { dataSource, api } = unref(propsRef);\n      !api && dataSource && (dataSourceRef.value = dataSource);\n    },\n    {\n      immediate: true,\n    },\n  );\n\n  function handleTableChange(\n    pagination: PaginationProps,\n    filters: Partial<Recordable<string[]>>,\n    sorter: SorterResult,\n  ) {\n    const { clearSelectOnPageChange, sortFn, filterFn } = unref(propsRef);\n    if (clearSelectOnPageChange) {\n      clearSelectedRowKeys();\n    }\n    setPagination(pagination);\n\n    const params: Recordable = {};\n    if (sorter && isFunction(sortFn)) {\n      const sortInfo = sortFn(sorter);\n      searchState.sortInfo = sortInfo;\n      params.sortInfo = sortInfo;\n    }\n\n    if (filters && isFunction(filterFn)) {\n      const filterInfo = filterFn(filters);\n      searchState.filterInfo = filterInfo;\n      params.filterInfo = filterInfo;\n    }\n    fetch(params);\n  }\n\n  function setTableKey(items: any[]) {\n    if (!items || !Array.isArray(items)) return;\n    items.forEach((item) => {\n      if (!item[ROW_KEY]) {\n        item[ROW_KEY] = buildUUID();\n      }\n      if (item.children && item.children.length) {\n        setTableKey(item.children);\n      }\n    });\n  }\n\n  const getAutoCreateKey = computed(() => {\n    return unref(propsRef).autoCreateKey && !unref(propsRef).rowKey;\n  });\n\n  const getRowKey = computed(() => {\n    const { rowKey } = unref(propsRef);\n    return unref(getAutoCreateKey) ? ROW_KEY : rowKey;\n  });\n\n  const getDataSourceRef = computed(() => {\n    const dataSource = unref(dataSourceRef);\n    if (!dataSource || dataSource.length === 0) {\n      return unref(dataSourceRef);\n    }\n    if (unref(getAutoCreateKey)) {\n      const firstItem = dataSource[0];\n      const lastItem = dataSource[dataSource.length - 1];\n\n      if (firstItem && lastItem) {\n        if (!firstItem[ROW_KEY] || !lastItem[ROW_KEY]) {\n          const data = cloneDeep(unref(dataSourceRef));\n          data.forEach((item) => {\n            if (!item[ROW_KEY]) {\n              item[ROW_KEY] = buildUUID();\n            }\n            if (item.children && item.children.length) {\n              setTableKey(item.children);\n            }\n          });\n          dataSourceRef.value = data;\n        }\n      }\n    }\n    return unref(dataSourceRef);\n  });\n\n  async function updateTableData(index: number, key: string, value: any) {\n    const record = dataSourceRef.value[index];\n    if (record) {\n      dataSourceRef.value[index][key] = value;\n    }\n    return dataSourceRef.value[index];\n  }\n\n  function updateTableDataRecord(\n    rowKey: string | number,\n    record: Recordable,\n  ): Recordable | undefined {\n    const row = findTableDataRecord(rowKey);\n\n    if (row) {\n      for (const field in row) {\n        if (Reflect.has(record, field)) row[field] = record[field];\n      }\n      return row;\n    }\n  }\n\n  function deleteTableDataRecord(rowKey: string | number | string[] | number[]) {\n    if (!dataSourceRef.value || dataSourceRef.value.length == 0) return;\n    const rowKeyName = unref(getRowKey);\n    if (!rowKeyName) return;\n    const rowKeys = !Array.isArray(rowKey) ? [rowKey] : rowKey;\n\n    function deleteRow(data, key) {\n      const row: { index: number; data: [] } = findRow(data, key);\n      if (row === null || row.index === -1) {\n        return;\n      }\n      row.data.splice(row.index, 1);\n\n      function findRow(data, key) {\n        if (data === null || data === undefined) {\n          return null;\n        }\n        for (let i = 0; i < data.length; i++) {\n          const row = data[i];\n          let targetKeyName: string = rowKeyName as string;\n          if (isFunction(rowKeyName)) {\n            targetKeyName = rowKeyName(row);\n          }\n          if (row[targetKeyName] === key) {\n            return { index: i, data };\n          }\n          if (row.children?.length > 0) {\n            const result = findRow(row.children, key);\n            if (result != null) {\n              return result;\n            }\n          }\n        }\n        return null;\n      }\n    }\n\n    for (const key of rowKeys) {\n      deleteRow(dataSourceRef.value, key);\n      deleteRow(unref(propsRef).dataSource, key);\n    }\n    setPagination({\n      total: unref(propsRef).dataSource?.length,\n    });\n  }\n\n  function insertTableDataRecord(\n    record: Recordable | Recordable[],\n    index: number,\n  ): Recordable[] | undefined {\n    // if (!dataSourceRef.value || dataSourceRef.value.length == 0) return;\n    index = index ?? dataSourceRef.value?.length;\n    const _record = isObject(record) ? [record as Recordable] : (record as Recordable[]);\n    unref(dataSourceRef).splice(index, 0, ..._record);\n    return unref(dataSourceRef);\n  }\n\n  function findTableDataRecord(rowKey: string | number) {\n    if (!dataSourceRef.value || dataSourceRef.value.length == 0) return;\n\n    const rowKeyName = unref(getRowKey);\n    if (!rowKeyName) return;\n\n    const { childrenColumnName = 'children' } = unref(propsRef);\n\n    const findRow = (array: any[]) => {\n      let ret;\n      array.some(function iter(r) {\n        if (typeof rowKeyName === 'function') {\n          if ((rowKeyName(r) as string) === rowKey) {\n            ret = r;\n            return true;\n          }\n        } else {\n          if (Reflect.has(r, rowKeyName) && r[rowKeyName] === rowKey) {\n            ret = r;\n            return true;\n          }\n        }\n        return r[childrenColumnName] && r[childrenColumnName].some(iter);\n      });\n      return ret;\n    };\n\n    // const row = dataSourceRef.value.find(r => {\n    //   if (typeof rowKeyName === 'function') {\n    //     return (rowKeyName(r) as string) === rowKey\n    //   } else {\n    //     return Reflect.has(r, rowKeyName) && r[rowKeyName] === rowKey\n    //   }\n    // })\n    return findRow(dataSourceRef.value);\n  }\n\n  const addMissingColumns = (item: Recordable, columns) => {\n    columns.forEach((column: any) => {\n      if (!Reflect.has(item, column.dataIndex)) {\n        item[column.dataIndex] = null;\n      }\n    });\n  };\n\n  async function fetchByDataSource(data: any[] = []) {\n    const { columns, fetchSetting, pagination } = unref(propsRef);\n\n    try {\n      const { pageField, sizeField } = Object.assign({}, FETCH_SETTING, fetchSetting);\n      let pageParams: Recordable = {};\n\n      const paginationInfo = unref(getPaginationInfo);\n      const { current = 1, pageSize = PAGE_SIZE } = isBoolean(paginationInfo) ? {} : unref(paginationInfo);\n\n      if ((isBoolean(pagination) && !pagination) || isBoolean(paginationInfo)) {\n        pageParams = {};\n      } else {\n        pageParams[pageField] = current;\n        pageParams[sizeField] = pageSize;\n      }\n\n      const resultItems: Recordable[] = data.slice((current - 1) * pageSize, current * pageSize);\n      const resultTotal: number = data?.length || 0;\n\n      if (Number(resultTotal)) {\n        const currentTotalPage = Math.ceil(resultTotal / pageSize);\n        if (current > currentTotalPage) {\n          setPagination({\n            current: currentTotalPage,\n          });\n        }\n      }\n\n      resultItems.forEach((item) => {\n        addMissingColumns(item, columns);\n      });\n\n      rawDataSourceRef.value = { list: data, total: resultTotal };\n      dataSourceRef.value = resultItems;\n\n      setPagination({\n        total: resultTotal || 0,\n      });\n\n      emit('fetch-success', {\n        items: unref(resultItems),\n        total: resultTotal,\n      });\n\n      return resultItems;\n    } catch (error) {\n      // 错误处理逻辑...\n    } finally {\n      setLoading(false);\n    }\n  }\n\n  async function fetch(opt?: FetchParams, loading?: Boolean) {\n    const {\n      api,\n      columns,\n      searchInfo,\n      defSort,\n      fetchSetting,\n      beforeFetch,\n      afterFetch,\n      useSearchForm,\n      pagination,\n    } = unref(propsRef);\n    if (!api || !isFunction(api)) return;\n    try {\n      if (typeof loading == 'undefined') {\n        loading = true;\n      }\n      setLoading(loading as boolean);\n      const { pageField, sizeField, listField, totalField } = Object.assign(\n        {},\n        FETCH_SETTING,\n        fetchSetting,\n      );\n      let pageParams: Recordable = {};\n\n      const { current = 1, pageSize = PAGE_SIZE } = unref(getPaginationInfo) as PaginationProps;\n\n      if ((isBoolean(pagination) && !pagination) || isBoolean(getPaginationInfo)) {\n        pageParams = {};\n      } else {\n        pageParams[pageField] = (opt && opt.page) || current;\n        pageParams[sizeField] = pageSize;\n      }\n\n      const { sortInfo = {}, filterInfo } = searchState;\n\n      let params: Recordable = merge(\n        pageParams,\n        useSearchForm ? getFieldsValue() : {},\n        searchInfo,\n        opt?.searchInfo ?? {},\n        defSort,\n        sortInfo,\n        filterInfo,\n        opt?.sortInfo ?? {},\n        opt?.filterInfo ?? {},\n      );\n      if (beforeFetch && isFunction(beforeFetch)) {\n        params = (await beforeFetch(params)) || params;\n      }\n\n      const res = await api(params);\n      rawDataSourceRef.value = res;\n\n      const isArrayResult = Array.isArray(res);\n\n      let resultItems: Recordable[] = isArrayResult ? res : get(res, listField);\n      let resultTotal: number = isArrayResult ? res.length : get(res, totalField);\n\n      // 如果res是Proxy对象，则上述取值方式存在问题\n      if (typeof resultItems === 'undefined' && typeof resultTotal === 'undefined') {\n        if ((isRef(res) || isReactive(res)) && !isArrayResult) {\n          // 如果 res 是 ref 或者 reactive ，取出字段为 listField 和 totalField 的值\n          resultItems = get(unref(res), listField);\n          resultTotal = get(unref(res), totalField);\n        }\n      }\n\n      // 假如数据变少，导致总页数变少并小于当前选中页码，通过getPaginationRef获取到的页码是不正确的，需获取正确的页码再次执行\n      if (Number(resultTotal)) {\n        const currentTotalPage = Math.ceil(resultTotal / pageSize);\n        if (current > currentTotalPage) {\n          setPagination({\n            current: currentTotalPage,\n          });\n          return await fetch(opt);\n        }\n      }\n\n      if (afterFetch && isFunction(afterFetch)) {\n        resultItems = (await afterFetch(resultItems)) || resultItems;\n      }\n\n      // 添加缺失字段\n      resultItems.forEach((item) => {\n        addMissingColumns(item, columns);\n      });\n\n      dataSourceRef.value = resultItems;\n      setPagination({\n        total: resultTotal || 0,\n      });\n      if (opt && opt.page) {\n        setPagination({\n          current: opt.page || 1,\n        });\n      }\n      emit('fetch-success', {\n        items: unref(resultItems),\n        total: resultTotal,\n      });\n      return resultItems;\n    } catch (error) {\n      emit('fetch-error', error);\n      dataSourceRef.value = [];\n      setPagination({\n        total: 0,\n      });\n    } finally {\n      setLoading(false);\n    }\n  }\n\n  function setTableData<T = Recordable>(values: T[]) {\n    dataSourceRef.value = values;\n  }\n\n  function getDataSource<T = Recordable>() {\n    return getDataSourceRef.value as T[];\n  }\n\n  function getRawDataSource<T = Recordable>() {\n    return rawDataSourceRef.value as T;\n  }\n\n  async function reload(opt?: FetchParams) {\n    return await fetch(opt, true);\n  }\n\n  async function reloadData(opt?: FetchParams, loading?: Boolean) {\n    return await fetch(opt, loading);\n  }\n\n  async function reloadByDataSource(data: any[] = []) {\n    return await fetchByDataSource(data);\n  }\n\n  async function reloadApiDataByLocal(data: any[] = []) {\n    const { current = 1, pageSize = PAGE_SIZE } = unref(getPaginationInfo) as PaginationProps;\n    const total = data?.length;\n    const list = data?.slice((current - 1) * pageSize, current * pageSize);\n    return { total, list };\n  }\n\n  onMounted(() => {\n    useTimeoutFn(() => {\n      unref(propsRef).immediate && fetch();\n    }, 16);\n  });\n\n  return {\n    getDataSourceRef,\n    getDataSource,\n    getRawDataSource,\n    getRowKey,\n    setTableData,\n    getAutoCreateKey,\n    fetch,\n    reload,\n    reloadData,\n    reloadByDataSource,\n    reloadApiDataByLocal,\n    updateTableData,\n    updateTableDataRecord,\n    deleteTableDataRecord,\n    insertTableDataRecord,\n    findTableDataRecord,\n    handleTableChange,\n  };\n}\n","import { ref, ComputedRef, unref, computed, watch } from 'vue';\nimport type { BasicTableProps } from '../types/table';\n\nexport function useLoading(props: ComputedRef<BasicTableProps>) {\n  const loadingRef = ref(unref(props).loading);\n\n  watch(\n    () => unref(props).loading,\n    (loading) => {\n      loadingRef.value = loading;\n    },\n  );\n\n  const getLoading = computed(() => unref(loadingRef));\n\n  function setLoading(loading: boolean) {\n    loadingRef.value = loading;\n  }\n\n  return { getLoading, setLoading };\n}\n","import { isFunction } from '/@/utils/is';\nimport type { BasicTableProps, TableRowSelection } from '../types/table';\nimport { computed, ComputedRef, nextTick, Ref, ref, toRaw, unref, watch } from 'vue';\nimport { ROW_KEY } from '../const';\nimport { omit } from 'lodash-es';\nimport { findNodeAll } from '/@/utils/helper/treeHelper';\n\nexport function useRowSelection(\n  propsRef: ComputedRef<BasicTableProps>,\n  tableData: Ref<Recordable[]>,\n  emit: EmitType,\n) {\n  const selectedRowKeysRef = ref<string[]>([]);\n  const selectedRowRef = ref<Recordable[]>([]);\n\n  const getRowSelectionRef = computed((): TableRowSelection | null => {\n    const { rowSelection } = unref(propsRef);\n    if (!rowSelection) {\n      return null;\n    }\n\n    return {\n      selectedRowKeys: unref(selectedRowKeysRef),\n      onChange: (selectedRowKeys: string[]) => {\n        setSelectedRowKeys(selectedRowKeys);\n      },\n      ...omit(rowSelection, ['onChange']),\n    };\n  });\n\n  watch(\n    () => unref(propsRef).rowSelection?.selectedRowKeys,\n    (v: string[]) => {\n      setSelectedRowKeys(v);\n    },\n  );\n\n  watch(\n    () => unref(selectedRowKeysRef),\n    () => {\n      nextTick(() => {\n        const { rowSelection } = unref(propsRef);\n        if (rowSelection) {\n          const { onChange } = rowSelection;\n          if (onChange && isFunction(onChange)) onChange(getSelectRowKeys(), getSelectRows());\n        }\n        emit('selection-change', {\n          keys: getSelectRowKeys(),\n          rows: getSelectRows(),\n        });\n      });\n    },\n    { deep: true },\n  );\n\n  const getAutoCreateKey = computed(() => {\n    return unref(propsRef).autoCreateKey && !unref(propsRef).rowKey;\n  });\n\n  const getRowKey = computed(() => {\n    const { rowKey } = unref(propsRef);\n    return unref(getAutoCreateKey) ? ROW_KEY : rowKey;\n  });\n\n  function setSelectedRowKeys(rowKeys: string[]) {\n    selectedRowKeysRef.value = rowKeys;\n    const allSelectedRows = findNodeAll(\n      toRaw(unref(tableData)).concat(toRaw(unref(selectedRowRef))),\n      (item) => rowKeys?.includes(item[unref(getRowKey) as string]),\n      {\n        children: propsRef.value.childrenColumnName ?? 'children',\n      },\n    );\n    const trueSelectedRows: any[] = [];\n    rowKeys?.forEach((key: string) => {\n      const found = allSelectedRows.find((item) => item[unref(getRowKey) as string] === key);\n      found && trueSelectedRows.push(found);\n    });\n    selectedRowRef.value = trueSelectedRows;\n  }\n\n  function setSelectedRows(rows: Recordable[]) {\n    selectedRowRef.value = rows;\n  }\n\n  function clearSelectedRowKeys() {\n    selectedRowRef.value = [];\n    selectedRowKeysRef.value = [];\n  }\n\n  function deleteSelectRowByKey(key: string) {\n    const selectedRowKeys = unref(selectedRowKeysRef);\n    const index = selectedRowKeys.findIndex((item) => item === key);\n    if (index !== -1) {\n      unref(selectedRowKeysRef).splice(index, 1);\n    }\n  }\n\n  function getSelectRowKeys() {\n    return unref(selectedRowKeysRef);\n  }\n\n  function getSelectRows<T = Recordable>() {\n    // const ret = toRaw(unref(selectedRowRef)).map((item) => toRaw(item));\n    return unref(selectedRowRef) as T[];\n  }\n\n  function getRowSelection() {\n    return unref(getRowSelectionRef)!;\n  }\n\n  return {\n    getRowSelection,\n    getRowSelectionRef,\n    getSelectRows,\n    getSelectRowKeys,\n    setSelectedRowKeys,\n    clearSelectedRowKeys,\n    deleteSelectRowByKey,\n    setSelectedRows,\n  };\n}\n","import type { BasicTableProps, TableRowSelection, BasicColumn } from '../types/table';\nimport { Ref, ComputedRef, ref, computed, unref, nextTick, watch } from 'vue';\nimport { getViewportOffset } from '/@/utils/domUtils';\nimport { isBoolean } from '/@/utils/is';\nimport { useWindowSizeFn, onMountedOrActivated } from '@vben/hooks';\nimport { useModalContext } from '/@/components/Modal';\nimport { useDebounceFn } from '@vueuse/core';\nimport { setTimeoutExecs } from '/@/utils/limits';\n\nexport function useTableScroll(\n  propsRef: ComputedRef<BasicTableProps>,\n  tableElRef: Ref<ComponentRef>,\n  columnsRef: ComputedRef<BasicColumn[]>,\n  rowSelectionRef: ComputedRef<TableRowSelection | null>,\n  getDataSourceRef: ComputedRef<Recordable[]>,\n  wrapRef: Ref<HTMLElement | null>,\n  formRef: Ref<ComponentRef>,\n) {\n  const tableHeightRef: Ref<Nullable<number | string>> = ref(167);\n  const modalFn = useModalContext();\n\n  // Greater than animation time 280\n  const debounceRedoHeight = useDebounceFn(redoHeight, 100);\n\n  const getCanResize = computed(() => {\n    const { canResize, scroll } = unref(propsRef);\n    return canResize && !(scroll || {}).y;\n  });\n\n  watch(\n    () => [unref(getCanResize), unref(getDataSourceRef)?.length],\n    () => {\n      debounceRedoHeight();\n    },\n    {\n      flush: 'post',\n    },\n  );\n\n  function redoHeight() {\n    nextTick(() => {\n      calcTableHeight();\n    });\n  }\n\n  function setHeight(height: number) {\n    tableHeightRef.value = height;\n    //  Solve the problem of modal adaptive height calculation when the form is placed in the modal\n    modalFn?.redoModalHeight?.();\n  }\n\n  // No need to repeat queries\n  let paginationEl: HTMLElement | null;\n  let footerEl: HTMLElement | null;\n  let bodyEl: HTMLElement | null;\n\n  function handleScrollBar(bodyEl: HTMLElement, tableEl: Element) {\n    const hasScrollBarY = bodyEl.scrollHeight > bodyEl.clientHeight;\n    const hasScrollBarX = bodyEl.scrollWidth > bodyEl.clientWidth;\n\n    if (hasScrollBarY) {\n      tableEl.classList.contains('hide-scrollbar-y') &&\n        tableEl.classList.remove('hide-scrollbar-y');\n    } else {\n      !tableEl.classList.contains('hide-scrollbar-y') && tableEl.classList.add('hide-scrollbar-y');\n    }\n\n    if (hasScrollBarX) {\n      tableEl.classList.contains('hide-scrollbar-x') &&\n        tableEl.classList.remove('hide-scrollbar-x');\n    } else {\n      !tableEl.classList.contains('hide-scrollbar-x') && tableEl.classList.add('hide-scrollbar-x');\n    }\n  }\n\n  function caclPaginationHeight(tableEl: Element): number {\n    const { pagination } = unref(propsRef);\n    // Pager height\n    let paginationHeight = 2;\n    if (!isBoolean(pagination)) {\n      paginationEl = tableEl.querySelector('.ant-pagination') as HTMLElement;\n      if (paginationEl) {\n        const offsetHeight = paginationEl.offsetHeight;\n        paginationHeight += offsetHeight || 0;\n      } else {\n        // TODO First fix 24\n        paginationHeight += 24;\n      }\n    } else {\n      paginationHeight = -8;\n    }\n    return paginationHeight;\n  }\n\n  function caclFooterHeight(tableEl: Element): number {\n    const { pagination } = unref(propsRef);\n    let footerHeight = 0;\n    if (!isBoolean(pagination)) {\n      if (!footerEl) {\n        footerEl = tableEl.querySelector('.ant-table-footer') as HTMLElement;\n      } else {\n        const offsetHeight = footerEl.offsetHeight;\n        footerHeight += offsetHeight || 0;\n      }\n    }\n    return footerHeight;\n  }\n\n  function calcHeaderHeight(headEl: Element): number {\n    let headerHeight = 0;\n    if (headEl) {\n      headerHeight = (headEl as HTMLElement).offsetHeight;\n    }\n    return headerHeight;\n  }\n\n  function calcBottomAndPaddingHeight(tableEl: Element, headEl: Element) {\n    const { pagination, isCanResizeParent, useSearchForm } = unref(propsRef);\n    // Table height from bottom height-custom offset\n    let paddingHeight = 30;\n    let bottomIncludeBody = 0;\n    if (unref(wrapRef) && isCanResizeParent) {\n      const tablePadding = 12;\n      const formMargin = 16;\n      let paginationMargin = 10;\n      const wrapHeight = unref(wrapRef)?.offsetHeight ?? 0;\n\n      let formHeight = unref(formRef)?.$el.offsetHeight ?? 0;\n      if (formHeight) {\n        formHeight += formMargin;\n      }\n      if (isBoolean(pagination) && !pagination) {\n        paginationMargin = 0;\n      }\n      if (isBoolean(useSearchForm) && !useSearchForm) {\n        paddingHeight = 0;\n      }\n\n      const headerCellHeight =\n        (tableEl.querySelector('.ant-table-title') as HTMLElement)?.offsetHeight ?? 0;\n\n      console.log(wrapHeight - formHeight - headerCellHeight - tablePadding - paginationMargin);\n      bottomIncludeBody =\n        wrapHeight - formHeight - headerCellHeight - tablePadding - paginationMargin;\n    } else {\n      // Table height from bottom\n      bottomIncludeBody = getViewportOffset(headEl).bottomIncludeBody;\n    }\n\n    return {\n      paddingHeight,\n      bottomIncludeBody,\n    };\n  }\n\n  async function calcTableHeight() {\n    const { resizeHeightOffset, maxHeight } = unref(propsRef);\n    const tableData = unref(getDataSourceRef);\n\n    const table = unref(tableElRef);\n    if (!table) return;\n\n    const tableEl: Element = table.$el;\n    if (!tableEl) return;\n\n    if (!bodyEl) {\n      bodyEl = tableEl.querySelector('.ant-table-body');\n      setTimeoutExecs(() => {\n        bodyEl && bodyEl.style ? (bodyEl.style.height = `${maxHeight}px`) : null;\n      }, [0, 1500, 3000]);\n      if (!bodyEl) return;\n    }\n\n    handleScrollBar(bodyEl, tableEl);\n\n    // bodyEl!.style.height = 'unset';\n    // if (!unref(getCanResize) || !unref(tableData) || tableData.length === 0) return;\n\n    await nextTick();\n    // Add a delay to get the correct bottomIncludeBody paginationHeight footerHeight headerHeight\n\n    const headEl = tableEl.querySelector('.ant-table-thead ');\n\n    if (!headEl) return;\n\n    const paginationHeight = caclPaginationHeight(tableEl);\n    const footerHeight = caclFooterHeight(tableEl);\n    const headerHeight = calcHeaderHeight(headEl);\n    const { paddingHeight, bottomIncludeBody } = calcBottomAndPaddingHeight(tableEl, headEl);\n\n    let height =\n      bottomIncludeBody -\n      (resizeHeightOffset || 0) -\n      paddingHeight -\n      paginationHeight -\n      footerHeight -\n      headerHeight;\n    height = (height > maxHeight! ? (maxHeight as number) : height) ?? height;\n    setHeight(height);\n\n    bodyEl!.style.height = `${height}px`;\n  }\n  useWindowSizeFn(calcTableHeight, { wait: 280 });\n  onMountedOrActivated(() => {\n    calcTableHeight();\n    nextTick(() => {\n      debounceRedoHeight();\n    });\n  });\n\n  const getScrollX = computed(() => {\n    let width = 0;\n    if (unref(rowSelectionRef)) {\n      width += 60;\n    }\n\n    // TODO props ?? 0;\n    const NORMAL_WIDTH = 150;\n\n    const columns = unref(columnsRef).filter((item) => !item.defaultHidden);\n    columns.forEach((item) => {\n      width += Number.parseFloat(item.width as string) || 0;\n    });\n    const unsetWidthColumns = columns.filter((item) => !Reflect.has(item, 'width'));\n\n    const len = unsetWidthColumns.length;\n    if (len !== 0) {\n      width += len * NORMAL_WIDTH;\n    }\n\n    const table = unref(tableElRef);\n    const tableWidth = table?.$el?.offsetWidth ?? 0;\n    return tableWidth > width ? '100%' : width;\n  });\n\n  const getScrollRef = computed(() => {\n    const tableHeight = unref(tableHeightRef);\n    const { canResize, scroll } = unref(propsRef);\n    return {\n      x: unref(getScrollX),\n      y: canResize ? tableHeight : null,\n      scrollToFirstRowOnChange: false,\n      ...scroll,\n    };\n  });\n\n  return { getScrollRef, redoHeight };\n}\n","import type { ComputedRef, Ref } from 'vue';\nimport { nextTick, unref } from 'vue';\nimport { warn } from '/@/utils/log';\n\nexport function useTableScrollTo(\n  tableElRef: Ref<ComponentRef>,\n  getDataSourceRef: ComputedRef<Recordable[]>,\n) {\n  let bodyEl: HTMLElement | null;\n\n  async function findTargetRowToScroll(targetRowData: Recordable) {\n    const { id } = targetRowData;\n    const targetRowEl: HTMLElement | null | undefined = bodyEl?.querySelector(\n      `[data-row-key=\"${id}\"]`,\n    );\n    //Add a delay to get new dataSource\n    await nextTick();\n    bodyEl?.scrollTo({\n      top: targetRowEl?.offsetTop ?? 0,\n      behavior: 'smooth',\n    });\n  }\n\n  function scrollTo(pos: string): void {\n    const table = unref(tableElRef);\n    if (!table) return;\n\n    const tableEl: Element = table.$el;\n    if (!tableEl) return;\n\n    if (!bodyEl) {\n      bodyEl = tableEl.querySelector('.ant-table-body');\n      if (!bodyEl) return;\n    }\n\n    const dataSource = unref(getDataSourceRef);\n    if (!dataSource) return;\n\n    // judge pos type\n    if (pos === 'top') {\n      findTargetRowToScroll(dataSource[0]);\n    } else if (pos === 'bottom') {\n      findTargetRowToScroll(dataSource[dataSource.length - 1]);\n    } else {\n      const targetRowData = dataSource.find((data) => data.id === pos);\n      if (targetRowData) {\n        findTargetRowToScroll(targetRowData);\n      } else {\n        warn(`id: ${pos} doesn't exist`);\n      }\n    }\n  }\n\n  return { scrollTo };\n}\n","import type { ComputedRef } from 'vue';\nimport type { BasicTableProps } from '../types/table';\nimport { unref } from 'vue';\nimport { ROW_KEY } from '../const';\nimport { isString, isFunction } from '/@/utils/is';\n\ninterface Options {\n  setSelectedRowKeys: (keys: string[]) => void;\n  getSelectRowKeys: () => string[];\n  clearSelectedRowKeys: () => void;\n  emit: EmitType;\n  getAutoCreateKey: ComputedRef<boolean | undefined>;\n}\n\nfunction getKey(\n  record: Recordable,\n  rowKey: string | ((record: Record<string, any>) => string) | undefined,\n  autoCreateKey?: boolean,\n) {\n  if (!rowKey || autoCreateKey) {\n    return record[ROW_KEY];\n  }\n  if (isString(rowKey)) {\n    return record[rowKey];\n  }\n  if (isFunction(rowKey)) {\n    return record[rowKey(record)];\n  }\n  return null;\n}\n\nexport function useCustomRow(\n  propsRef: ComputedRef<BasicTableProps>,\n  { setSelectedRowKeys, getSelectRowKeys, getAutoCreateKey, clearSelectedRowKeys, emit }: Options,\n) {\n  const customRow = (record: Recordable, index: number) => {\n    return {\n      onClick: (e: Event) => {\n        e?.stopPropagation();\n        function handleClick() {\n          const { rowSelection, rowKey, clickToRowSelect } = unref(propsRef);\n          if (!rowSelection || !clickToRowSelect) return;\n          const keys = getSelectRowKeys() || [];\n          const key = getKey(record, rowKey, unref(getAutoCreateKey));\n          if (key === null) return;\n\n          const isCheckbox = rowSelection.type === 'checkbox';\n          if (isCheckbox) {\n            // 找到tr\n            const tr: HTMLElement = (e as MouseEvent)\n              .composedPath?.()\n              .find((dom: HTMLElement) => dom.tagName === 'TR') as HTMLElement;\n            if (!tr) return;\n            // 找到Checkbox，检查是否为disabled\n            const checkBox = tr.querySelector('input[type=checkbox]');\n            if (!checkBox || checkBox.hasAttribute('disabled')) return;\n            if (!keys.includes(key)) {\n              keys.push(key);\n              setSelectedRowKeys(keys);\n              return;\n            }\n            const keyIndex = keys.findIndex((item) => item === key);\n            keys.splice(keyIndex, 1);\n            setSelectedRowKeys(keys);\n            return;\n          }\n\n          const isRadio = rowSelection.type === 'radio';\n          if (isRadio) {\n            if (!keys.includes(key)) {\n              if (keys.length) {\n                clearSelectedRowKeys();\n              }\n              setSelectedRowKeys([key]);\n              return;\n            }\n            clearSelectedRowKeys();\n          }\n        }\n        handleClick();\n        emit('row-click', record, index, e);\n      },\n      onDblclick: (event: Event) => {\n        emit('row-dbClick', record, index, event);\n      },\n      onContextmenu: (event: Event) => {\n        emit('row-contextmenu', record, index, event);\n      },\n      onMouseenter: (event: Event) => {\n        emit('row-mouseenter', record, index, event);\n      },\n      onMouseleave: (event: Event) => {\n        emit('row-mouseleave', record, index, event);\n      },\n    };\n  };\n\n  return {\n    customRow,\n  };\n}\n","import type { ComputedRef } from 'vue';\nimport type { BasicTableProps, TableCustomRecord } from '../types/table';\nimport { unref } from 'vue';\nimport { isFunction } from '/@/utils/is';\n\nexport function useTableStyle(propsRef: ComputedRef<BasicTableProps>, prefixCls: string) {\n  function getRowClassName(record: TableCustomRecord, index: number) {\n    const { striped, rowClassName } = unref(propsRef);\n    const classNames: string[] = [];\n    if (striped) {\n      classNames.push((index || 0) % 2 === 1 ? `${prefixCls}-row__striped` : '');\n    }\n    if (rowClassName && isFunction(rowClassName)) {\n      classNames.push(rowClassName(record, index));\n    }\n    return classNames.filter((cls) => !!cls).join(' ');\n  }\n\n  return { getRowClassName };\n}\n","<template>\n  <Tooltip placement=\"top\">\n    <template #title>\n      <span>{{ t('component.table.settingColumn') }}</span>\n    </template>\n    <Popover\n      placement=\"bottomLeft\"\n      trigger=\"click\"\n      @visible-change=\"handleVisibleChange\"\n      :overlayClassName=\"`${prefixCls}__cloumn-list`\"\n      :getPopupContainer=\"getPopupContainer\"\n    >\n      <template #title>\n        <div :class=\"`${prefixCls}__popover-title`\">\n          <Checkbox\n            :indeterminate=\"indeterminate\"\n            v-model:checked=\"checkAll\"\n            @change=\"onCheckAllChange\"\n          >\n            {{ t('component.table.settingColumnShow') }}\n          </Checkbox>\n\n          <Checkbox v-model:checked=\"checkIndex\" @change=\"handleIndexCheckChange\">\n            {{ t('component.table.settingIndexColumnShow') }}\n          </Checkbox>\n\n          <Checkbox\n            v-model:checked=\"checkSelect\"\n            @change=\"handleSelectCheckChange\"\n            :disabled=\"!defaultRowSelection\"\n          >\n            {{ t('component.table.settingSelectColumnShow') }}\n          </Checkbox>\n\n          <a-button size=\"small\" type=\"link\" @click=\"reset\">\n            {{ t('common.resetText') }}\n          </a-button>\n        </div>\n      </template>\n\n      <template #content>\n        <ScrollContainer>\n          <CheckboxGroup v-model:value=\"checkedList\" @change=\"onChange\" ref=\"columnListRef\">\n            <template v-for=\"item in plainOptions\" :key=\"item.value\">\n              <div :class=\"`${prefixCls}__check-item`\" v-if=\"!('ifShow' in item && !item.ifShow)\">\n                <DragOutlined class=\"table-column-drag-icon\" />\n                <Checkbox :value=\"item.value\">\n                  {{ item.label }}\n                </Checkbox>\n\n                <Tooltip\n                  placement=\"bottomLeft\"\n                  :mouseLeaveDelay=\"0.4\"\n                  :getPopupContainer=\"getPopupContainer\"\n                >\n                  <template #title>\n                    {{ t('component.table.settingFixedLeft') }}\n                  </template>\n                  <Icon\n                    icon=\"line-md:arrow-align-left\"\n                    :class=\"[\n                      `${prefixCls}__fixed-left`,\n                      {\n                        active: item.fixed === 'left',\n                        disabled: !checkedList.includes(item.value),\n                      },\n                    ]\"\n                    @click=\"handleColumnFixed(item, 'left')\"\n                  />\n                </Tooltip>\n                <Divider type=\"vertical\" />\n                <Tooltip\n                  placement=\"bottomLeft\"\n                  :mouseLeaveDelay=\"0.4\"\n                  :getPopupContainer=\"getPopupContainer\"\n                >\n                  <template #title>\n                    {{ t('component.table.settingFixedRight') }}\n                  </template>\n                  <Icon\n                    icon=\"line-md:arrow-align-left\"\n                    :class=\"[\n                      `${prefixCls}__fixed-right`,\n                      {\n                        active: item.fixed === 'right',\n                        disabled: !checkedList.includes(item.value),\n                      },\n                    ]\"\n                    @click=\"handleColumnFixed(item, 'right')\"\n                  />\n                </Tooltip>\n              </div>\n            </template>\n          </CheckboxGroup>\n        </ScrollContainer>\n      </template>\n      <SettingOutlined />\n    </Popover>\n  </Tooltip>\n</template>\n<script lang=\"ts\">\n  import type { BasicColumn, BasicTableProps, ColumnChangeParam } from '../../types/table';\n  import {\n    defineComponent,\n    ref,\n    reactive,\n    toRefs,\n    watchEffect,\n    nextTick,\n    unref,\n    computed,\n  } from 'vue';\n  import { Tooltip, Popover, Checkbox, Divider } from 'ant-design-vue';\n  import type { CheckboxChangeEvent } from 'ant-design-vue/lib/checkbox/interface';\n  import { SettingOutlined, DragOutlined } from '@ant-design/icons-vue';\n  import Icon from '@/components/Icon/Icon.vue';\n  import { ScrollContainer } from '/@/components/Container';\n  import { useI18n } from '/@/hooks/web/useI18n';\n  import { useTableContext } from '../../hooks/useTableContext';\n  import { useDesign } from '/@/hooks/web/useDesign';\n  // import { useSortable } from '/@/hooks/web/useSortable';\n  import { isFunction, isNullAndUnDef } from '/@/utils/is';\n  import { getPopupContainer as getParentContainer } from '/@/utils';\n  import { cloneDeep, omit } from 'lodash-es';\n  import Sortablejs from 'sortablejs';\n  import type Sortable from 'sortablejs';\n\n  interface State {\n    checkAll: boolean;\n    isInit?: boolean;\n    checkedList: string[];\n    defaultCheckList: string[];\n  }\n\n  interface Options {\n    label: string;\n    value: string;\n    fixed?: boolean | 'left' | 'right';\n  }\n\n  export default defineComponent({\n    name: 'ColumnSetting',\n    components: {\n      SettingOutlined,\n      Popover,\n      Tooltip,\n      Checkbox,\n      CheckboxGroup: Checkbox.Group,\n      DragOutlined,\n      ScrollContainer,\n      Divider,\n      Icon,\n    },\n    emits: ['columns-change'],\n\n    setup(_, { emit, attrs }) {\n      const { t } = useI18n();\n      const table = useTableContext();\n\n      const defaultRowSelection = omit(table.getRowSelection(), 'selectedRowKeys');\n      let inited = false;\n      // 是否当前的setColums触发的\n      let isSetColumnsFromThis = false;\n      // 是否当前组件触发的setProps\n      let isSetPropsFromThis = false;\n\n      const cachePlainOptions = ref<Options[]>([]);\n      const plainOptions = ref<Options[] | any>([]);\n\n      const plainSortOptions = ref<Options[]>([]);\n\n      const columnListRef = ref(null);\n\n      const state = reactive<State>({\n        checkAll: true,\n        checkedList: [],\n        defaultCheckList: [],\n      });\n      /** 缓存初始化props */\n      let cacheTableProps: Partial<BasicTableProps<any>> = {};\n      const checkIndex = ref(false);\n      const checkSelect = ref(false);\n\n      const { prefixCls } = useDesign('basic-column-setting');\n\n      const getValues = computed(() => {\n        return unref(table?.getBindValues) || {};\n      });\n\n      watchEffect(() => {\n        const columns = table.getColumns();\n        setTimeout(() => {\n          if (isSetColumnsFromThis) {\n            isSetColumnsFromThis = false;\n          } else if (columns.length) {\n            init();\n          }\n        }, 0);\n      });\n\n      watchEffect(() => {\n        const values = unref(getValues);\n        if (isSetPropsFromThis) {\n          isSetPropsFromThis = false;\n        } else {\n          cacheTableProps = cloneDeep(values);\n        }\n        checkIndex.value = !!values.showIndexColumn;\n        checkSelect.value = !!values.rowSelection;\n      });\n\n      function getColumns() {\n        const ret: Options[] = [];\n        table.getColumns({ ignoreIndex: true, ignoreAction: true }).forEach((item) => {\n          ret.push({\n            label: (item.title as string) || (item.customTitle as string),\n            value: (item.dataIndex || item.title) as string,\n            ...item,\n          });\n        });\n        return ret;\n      }\n\n      async function init(isReset = false) {\n        // Sortablejs存在bug，不知道在哪个步骤中会向el append了一个childNode，因此这里先清空childNode\n        // 有可能复现上述问题的操作：拖拽一个元素，快速的上下移动，最后放到最后的位置中松手\n        plainOptions.value = [];\n        const columnListEl = unref(columnListRef);\n        if (columnListEl && (columnListEl as any).$el) {\n          const el = (columnListEl as any).$el as Element;\n          Array.from(el.children).forEach((item) => el.removeChild(item));\n        }\n        await nextTick();\n        const columns = isReset ? cloneDeep(cachePlainOptions.value) : getColumns();\n\n        const checkList = table\n          .getColumns({ ignoreAction: true, ignoreIndex: true })\n          .map((item) => {\n            if (item.defaultHidden) {\n              return '';\n            }\n            return item.dataIndex || item.title;\n          })\n          .filter(Boolean) as string[];\n        plainOptions.value = columns;\n        plainSortOptions.value = columns;\n        // 更新缓存配置\n        table.setCacheColumns?.(columns);\n        !isReset && (cachePlainOptions.value = cloneDeep(columns));\n        state.defaultCheckList = checkList;\n        state.checkedList = checkList;\n        // 是否列展示全选\n        state.checkAll = checkList.length === columns.length;\n        inited = false;\n        handleVisibleChange();\n      }\n\n      // checkAll change\n      function onCheckAllChange(e: CheckboxChangeEvent) {\n        const checkList = plainSortOptions.value.map((item) => item.value);\n        plainSortOptions.value.forEach(\n          (item) => ((item as BasicColumn).defaultHidden = !e.target.checked),\n        );\n        if (e.target.checked) {\n          state.checkedList = checkList;\n          setColumns(checkList);\n        } else {\n          state.checkedList = [];\n          setColumns([]);\n        }\n      }\n\n      const indeterminate = computed(() => {\n        const len = plainOptions.value.length;\n        let checkedLen = state.checkedList.length;\n        // unref(checkIndex) && checkedLen--;\n        return checkedLen > 0 && checkedLen < len;\n      });\n\n      // Trigger when check/uncheck a column\n      function onChange(checkedList: string[]) {\n        const len = plainSortOptions.value.length;\n        state.checkAll = checkedList.length === len;\n        const sortList = unref(plainSortOptions).map((item) => item.value);\n        checkedList.sort((prev, next) => {\n          return sortList.indexOf(prev) - sortList.indexOf(next);\n        });\n        unref(plainSortOptions).forEach((item) => {\n          (item as BasicColumn).defaultHidden = !checkedList.includes(item.value);\n        });\n        setColumns(checkedList);\n      }\n\n      let sortable: Sortable;\n      let sortableOrder: string[] = [];\n      // reset columns\n      function reset() {\n        setColumns(cachePlainOptions.value);\n        init(true);\n        checkIndex.value = !!cacheTableProps.showIndexColumn;\n        checkSelect.value = !!cacheTableProps.rowSelection;\n        table.setProps({\n          showIndexColumn: checkIndex.value,\n          rowSelection: checkSelect.value ? defaultRowSelection : undefined,\n        });\n        sortable.sort(sortableOrder);\n      }\n\n      // Open the pop-up window for drag and drop initialization\n      function handleVisibleChange() {\n        if (inited) return;\n        nextTick(() => {\n          const columnListEl = unref(columnListRef);\n          if (!columnListEl) return;\n          const el = (columnListEl as any).$el;\n          if (!el) return;\n          // Drag and drop sort\n          sortable = Sortablejs.create(unref(el), {\n            animation: 500,\n            delay: 400,\n            delayOnTouchOnly: true,\n            handle: '.table-column-drag-icon ',\n            onEnd: (evt) => {\n              const { oldIndex, newIndex } = evt;\n              if (isNullAndUnDef(oldIndex) || isNullAndUnDef(newIndex) || oldIndex === newIndex) {\n                return;\n              }\n              // Sort column\n              const columns = cloneDeep(plainSortOptions.value);\n\n              if (oldIndex > newIndex) {\n                columns.splice(newIndex, 0, columns[oldIndex]);\n                columns.splice(oldIndex + 1, 1);\n              } else {\n                columns.splice(newIndex + 1, 0, columns[oldIndex]);\n                columns.splice(oldIndex, 1);\n              }\n\n              plainSortOptions.value = columns;\n              setColumns(columns.filter((item) => state.checkedList.includes(item.value)));\n            },\n          });\n          // 记录原始order 序列\n          sortableOrder = sortable.toArray();\n          inited = true;\n        });\n      }\n\n      // Control whether the serial number column is displayed\n      function handleIndexCheckChange(e: CheckboxChangeEvent) {\n        isSetPropsFromThis = true;\n        isSetColumnsFromThis = true;\n        table.setProps({\n          showIndexColumn: e.target.checked,\n        });\n      }\n\n      // Control whether the check box is displayed\n      function handleSelectCheckChange(e: CheckboxChangeEvent) {\n        isSetPropsFromThis = true;\n        isSetColumnsFromThis = true;\n        table.setProps({\n          rowSelection: e.target.checked ? defaultRowSelection : undefined,\n        });\n      }\n\n      function handleColumnFixed(item: BasicColumn, fixed?: 'left' | 'right') {\n        if (!state.checkedList.includes(item.dataIndex as string)) return;\n        const columns = getColumns().filter((c: BasicColumn) => {\n          if (c.dataIndex) {\n            return state.checkedList.includes(c.dataIndex as string);\n          } else if (c?.label) {\n            return state.checkedList.includes(c?.label as string);\n          } else if (c?.title) {\n            return state.checkedList.includes(c?.title as string);\n          }\n        }) as BasicColumn[];\n        const isFixed = item.fixed === fixed ? false : fixed;\n        const index = columns.findIndex((col) => col.dataIndex === item.dataIndex);\n        if (index !== -1) {\n          columns[index].fixed = isFixed;\n        }\n        item.fixed = isFixed;\n\n        if (isFixed && !item.width) {\n          item.width = 100;\n        }\n        updateSortOption(item);\n        table.setCacheColumnsByField?.(item.dataIndex as string, { fixed: isFixed });\n        setColumns(columns);\n      }\n\n      function setColumns(columns: BasicColumn[] | string[]) {\n        isSetPropsFromThis = true;\n        isSetColumnsFromThis = true;\n        table.setColumns(columns);\n        const data: ColumnChangeParam[] = unref(plainSortOptions).map((col) => {\n          const visible =\n            columns.findIndex(\n              (c: BasicColumn | string) =>\n                c === col.value || (typeof c !== 'string' && c.dataIndex === col.value),\n            ) !== -1;\n          return { dataIndex: col.value, fixed: col.fixed, visible };\n        });\n\n        emit('columns-change', data);\n      }\n\n      function getPopupContainer() {\n        return isFunction(attrs.getPopupContainer)\n          ? attrs.getPopupContainer()\n          : getParentContainer();\n      }\n\n      function updateSortOption(column: BasicColumn) {\n        plainSortOptions.value.forEach((item) => {\n          if (item.value === column.dataIndex) {\n            Object.assign(item, column);\n          }\n        });\n      }\n\n      return {\n        t,\n        ...toRefs(state),\n        indeterminate,\n        onCheckAllChange,\n        onChange,\n        plainOptions,\n        reset,\n        prefixCls,\n        columnListRef,\n        handleVisibleChange,\n        checkIndex,\n        checkSelect,\n        handleIndexCheckChange,\n        handleSelectCheckChange,\n        defaultRowSelection,\n        handleColumnFixed,\n        getPopupContainer,\n      };\n    },\n  });\n</script>\n<style lang=\"less\">\n  @prefix-cls: ~'@{namespace}-basic-column-setting';\n\n  .table-column-drag-icon {\n    margin: 0 5px;\n    cursor: move;\n  }\n\n  .@{prefix-cls} {\n    &__popover-title {\n      display: flex;\n      position: relative;\n      align-items: center;\n      justify-content: space-between;\n    }\n\n    &__check-item {\n      display: flex;\n      align-items: center;\n      min-width: 100%;\n      padding: 4px 16px 8px 0;\n\n      .ant-checkbox-wrapper {\n        width: 100%;\n\n        &:hover {\n          color: @primary-color;\n        }\n      }\n    }\n\n    &__fixed-left,\n    &__fixed-right {\n      color: rgb(0 0 0 / 45%);\n      cursor: pointer;\n\n      &.active,\n      &:hover {\n        color: @primary-color;\n      }\n\n      &.disabled {\n        color: @disabled-color;\n        cursor: not-allowed;\n      }\n    }\n\n    &__fixed-right {\n      transform: rotate(180deg);\n    }\n\n    &__cloumn-list {\n      svg {\n        width: 1em !important;\n        height: 1em !important;\n      }\n\n      .ant-popover-inner-content {\n        // max-height: 360px;\n        padding-right: 0;\n        padding-left: 0;\n        // overflow: auto;\n      }\n\n      .ant-checkbox-group {\n        width: 100%;\n        min-width: 260px;\n        // flex-wrap: wrap;\n      }\n\n      .scrollbar {\n        height: 220px;\n      }\n    }\n  }\n</style>\n","<template>\n  <Tooltip placement=\"top\">\n    <template #title>\n      <span>{{ t('component.table.settingDens') }}</span>\n    </template>\n\n    <Dropdown placement=\"bottom\" :trigger=\"['click']\" :getPopupContainer=\"getPopupContainer\">\n      <ColumnHeightOutlined />\n      <template #overlay>\n        <Menu @click=\"handleTitleClick\" selectable v-model:selectedKeys=\"selectedKeysRef\">\n          <MenuItem key=\"default\">\n            <span>{{ t('component.table.settingDensDefault') }}</span>\n          </MenuItem>\n          <MenuItem key=\"middle\">\n            <span>{{ t('component.table.settingDensMiddle') }}</span>\n          </MenuItem>\n          <MenuItem key=\"small\">\n            <span>{{ t('component.table.settingDensSmall') }}</span>\n          </MenuItem>\n        </Menu>\n      </template>\n    </Dropdown>\n  </Tooltip>\n</template>\n<script lang=\"ts\">\n  import type { SizeType } from '../../types/table';\n  import { defineComponent, ref } from 'vue';\n  import { Tooltip, Dropdown, Menu } from 'ant-design-vue';\n  import { ColumnHeightOutlined } from '@ant-design/icons-vue';\n  import { useI18n } from '/@/hooks/web/useI18n';\n  import { useTableContext } from '../../hooks/useTableContext';\n  import { getPopupContainer } from '/@/utils';\n\n  export default defineComponent({\n    name: 'SizeSetting',\n    components: {\n      ColumnHeightOutlined,\n      Tooltip,\n      Dropdown,\n      Menu,\n      MenuItem: Menu.Item,\n    },\n    setup() {\n      const table = useTableContext();\n      const { t } = useI18n();\n\n      const selectedKeysRef = ref<SizeType[]>([table.getSize()]);\n\n      function handleTitleClick({ key }: { key: SizeType }) {\n        selectedKeysRef.value = [key];\n        table.setProps({\n          size: key,\n        });\n      }\n\n      return {\n        handleTitleClick,\n        selectedKeysRef,\n        getPopupContainer,\n        t,\n      };\n    },\n  });\n</script>\n","<template>\n  <Tooltip placement=\"top\">\n    <template #title>\n      <span>{{ t('common.redo') }}</span>\n    </template>\n    <RedoOutlined @click=\"redo\" />\n  </Tooltip>\n</template>\n<script lang=\"ts\">\n  import { defineComponent } from 'vue';\n  import { Tooltip } from 'ant-design-vue';\n  import { RedoOutlined } from '@ant-design/icons-vue';\n  import { useI18n } from '/@/hooks/web/useI18n';\n  import { useTableContext } from '../../hooks/useTableContext';\n\n  export default defineComponent({\n    name: 'RedoSetting',\n    components: {\n      RedoOutlined,\n      Tooltip,\n    },\n    setup() {\n      const table = useTableContext();\n      const { t } = useI18n();\n\n      function redo() {\n        table.reload();\n      }\n\n      return { redo, t };\n    },\n  });\n</script>\n","<template>\n  <Tooltip placement=\"top\">\n    <template #title>\n      <span>{{ t('component.table.settingFullScreen') }}</span>\n    </template>\n    <FullscreenOutlined @click=\"toggle\" v-if=\"!isFullscreen\" />\n    <FullscreenExitOutlined @click=\"toggle\" v-else />\n  </Tooltip>\n</template>\n<script lang=\"ts\">\n  import { defineComponent } from 'vue';\n  import { Tooltip } from 'ant-design-vue';\n  import { FullscreenOutlined, FullscreenExitOutlined } from '@ant-design/icons-vue';\n  import { useFullscreen } from '@vueuse/core';\n  import { useI18n } from '/@/hooks/web/useI18n';\n  import { useTableContext } from '../../hooks/useTableContext';\n\n  export default defineComponent({\n    name: 'FullScreenSetting',\n    components: {\n      FullscreenExitOutlined,\n      FullscreenOutlined,\n      Tooltip,\n    },\n\n    setup() {\n      const table = useTableContext();\n      const { t } = useI18n();\n      const { toggle, isFullscreen } = useFullscreen(table.wrapRef);\n\n      return {\n        toggle,\n        isFullscreen,\n        t,\n      };\n    },\n  });\n</script>\n","<template>\n  <div class=\"table-settings\">\n    <RedoSetting v-if=\"getSetting.redo\" :getPopupContainer=\"getTableContainer\" />\n    <SizeSetting v-if=\"getSetting.size\" :getPopupContainer=\"getTableContainer\" />\n    <ColumnSetting\n      v-if=\"getSetting.setting\"\n      @columns-change=\"handleColumnChange\"\n      :getPopupContainer=\"getTableContainer\"\n    />\n    <FullScreenSetting v-if=\"getSetting.fullScreen\" :getPopupContainer=\"getTableContainer\" />\n  </div>\n</template>\n<script lang=\"ts\">\n  import type { PropType } from 'vue';\n  import type { TableSetting, ColumnChangeParam } from '../../types/table';\n  import { defineComponent, computed, unref } from 'vue';\n  import ColumnSetting from './ColumnSetting.vue';\n  import SizeSetting from './SizeSetting.vue';\n  import RedoSetting from './RedoSetting.vue';\n  import FullScreenSetting from './FullScreenSetting.vue';\n  import { useI18n } from '/@/hooks/web/useI18n';\n  import { useTableContext } from '../../hooks/useTableContext';\n\n  export default defineComponent({\n    name: 'TableSetting',\n    components: {\n      ColumnSetting,\n      SizeSetting,\n      RedoSetting,\n      FullScreenSetting,\n    },\n    props: {\n      setting: {\n        type: Object as PropType<TableSetting>,\n        default: () => ({}),\n      },\n    },\n    emits: ['columns-change'],\n    setup(props, { emit }) {\n      const { t } = useI18n();\n      const table = useTableContext();\n\n      const getSetting = computed((): TableSetting => {\n        return {\n          redo: true,\n          size: true,\n          setting: true,\n          fullScreen: false,\n          ...props.setting,\n        };\n      });\n\n      function handleColumnChange(data: ColumnChangeParam[]) {\n        emit('columns-change', data);\n      }\n\n      function getTableContainer() {\n        return table ? unref(table.wrapRef) : document.body;\n      }\n\n      return { getSetting, t, handleColumnChange, getTableContainer };\n    },\n  });\n</script>\n<style lang=\"less\">\n  .table-settings {\n    & > * {\n      margin-right: 12px;\n    }\n\n    svg {\n      width: 1.3em;\n      height: 1.3em;\n    }\n  }\n</style>\n","<template>\n  <BasicTitle :class=\"prefixCls\" v-if=\"getTitle\" :helpMessage=\"helpMessage\">\n    {{ getTitle }}\n  </BasicTitle>\n</template>\n<script lang=\"ts\">\n  import { computed, defineComponent, PropType } from 'vue';\n  import { BasicTitle } from '/@/components/Basic/index';\n  import { useDesign } from '/@/hooks/web/useDesign';\n  import { isFunction } from '/@/utils/is';\n\n  export default defineComponent({\n    name: 'BasicTableTitle',\n    components: { BasicTitle },\n    props: {\n      title: {\n        type: [Function, String] as PropType<string | ((data) => string)>,\n      },\n      getSelectRows: {\n        type: Function as PropType<() => any[]>,\n      },\n      helpMessage: {\n        type: [String, Array] as PropType<string | string[]>,\n      },\n    },\n    setup(props) {\n      const { prefixCls } = useDesign('basic-table-title');\n\n      const getTitle = computed(() => {\n        const { title, getSelectRows = () => {} } = props;\n        let tit = title;\n\n        if (isFunction(title)) {\n          tit = title({\n            selectRows: getSelectRows(),\n          });\n        }\n        return tit;\n      });\n\n      return { getTitle, prefixCls };\n    },\n  });\n</script>\n<style lang=\"less\">\n  @prefix-cls: ~'@{namespace}-basic-table-title';\n\n  .@{prefix-cls} {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n  }\n</style>\n","<template>\n  <div style=\"width: 100%\" class=\"table-header-content\">\n    <div v-if=\"$slots.headerTop\" style=\"margin: 5px\">\n      <slot name=\"headerTop\"></slot>\n    </div>\n    <div class=\"flex items-center\">\n      <slot name=\"tableTitle\" v-if=\"$slots.tableTitle\"></slot>\n      <TableTitle\n        :helpMessage=\"titleHelpMessage\"\n        :title=\"title\"\n        v-if=\"!$slots.tableTitle && title\"\n      />\n      <div :id=\"randomID\" class=\"vben-btable-toolbar\">\n        <div :class=\"`${prefixCls}__toolbar`\">\n          <slot name=\"toolbar\"></slot>\n          <Divider type=\"vertical\" v-if=\"$slots.toolbar && showTableSetting\" />\n          <TableSettingComponent\n            :setting=\"tableSetting\"\n            v-if=\"showTableSetting\"\n            @columns-change=\"handleColumnChange\"\n          />\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\n  import { ref, toRefs, onMounted, nextTick, watch } from 'vue';\n  import { Divider } from 'ant-design-vue';\n  import TableSettingComponent from './settings/index.vue';\n  import TableTitle from './TableTitle.vue';\n  import { useDesign } from '/@/hooks/web/useDesign';\n  import type { TableSetting, ColumnChangeParam } from '../types/table';\n  import type { PropType } from 'vue';\n\n  // Props\n  const props = defineProps({\n    title: { type: [Function, String] as PropType<string | ((data) => string)> },\n    tableSetting: { type: Object as PropType<TableSetting> },\n    showTableSetting: { type: Boolean },\n    titleHelpMessage: { type: [String, Array] as PropType<string | string[]>, default: '' },\n    target: { type: [String], default: '' },\n    targetTabKey: { type: [String, Number], default: '' },\n    targetTabValue: { type: [String, Number], default: '' },\n  });\n\n  // Emit\n  const emit = defineEmits(['columns-change']);\n\n  // Use Design Hook\n  const { prefixCls } = useDesign('basic-table-header');\n\n  // Expose Refs to Template\n  const {\n    title,\n    tableSetting,\n    showTableSetting,\n    titleHelpMessage,\n    target,\n    targetTabKey,\n    targetTabValue,\n  } = toRefs(props);\n  const domElement = ref();\n\n  const randomID = ref('vben-btable-toolbar-' + Math.floor(Math.random() * 10000000));\n\n  // Handle Column Change\n  function handleColumnChange(data: ColumnChangeParam[]) {\n    emit('columns-change', data);\n  }\n\n  watch(\n    () => props.targetTabValue,\n    () => {\n      nextTick(() => {\n        handleTargetToggle();\n      });\n    },\n  );\n\n  // 执行 dom 迁移操作\n  const handleTargetToggle = () => {\n    try {\n      const toolbar = document.querySelector('div#' + randomID.value);\n      domElement.value = toolbar ? toolbar : domElement.value;\n      if (targetTabValue.value == targetTabKey.value) {\n        domElement.value.style.display = 'block';\n      } else {\n        domElement.value.style.display = 'none';\n      }\n    } catch {\n      //\n    }\n  };\n\n  // 执行 dom 迁移操作\n  const handleTargetTransfer = () => {\n    try {\n      const targetElement = document.querySelector(target.value + ' .ant-tabs-nav-wrap');\n      const toolbar = document.querySelector(target.value + ' div#' + randomID.value);\n      const title = document.querySelector(target.value + ' div.ant-table-title');\n      domElement.value = toolbar;\n      if (target.value) {\n        targetElement?.appendChild(domElement.value);\n        title?.remove();\n      }\n      if (targetTabValue.value == targetTabKey.value) {\n        domElement.value.style.display = 'block';\n      } else {\n        domElement.value.style.display = 'none';\n      }\n    } catch {\n      //\n    }\n  };\n\n  onMounted(() => {\n    nextTick(() => {\n      handleTargetTransfer();\n    });\n  });\n</script>\n<style lang=\"less\" scoped>\n  @prefix-cls: ~'@{namespace}-basic-table-header';\n\n  :deep(.vben-basic-table-header__toolbar) {\n    margin-top: 8px;\n  }\n\n  .vben-btable-toolbar {\n    display: flex;\n    flex: 1;\n    align-items: center;\n    justify-content: flex-end;\n\n    .@{prefix-cls} {\n      &__toolbar {\n        display: flex;\n        flex: 1;\n        align-items: center;\n        justify-content: flex-end;\n\n        > * {\n          margin-right: 8px;\n        }\n      }\n    }\n  }\n</style>\n","import type { ComputedRef, Slots } from 'vue';\nimport type { BasicTableProps, InnerHandlers } from '../types/table';\nimport { unref, computed, h } from 'vue';\nimport TableHeader from '../components/TableHeader.vue';\nimport { isString } from '/@/utils/is';\nimport { getSlot } from '/@/utils/helper/tsxHelper';\n\nexport function useTableHeader(\n  propsRef: ComputedRef<BasicTableProps>,\n  slots: Slots,\n  handlers: InnerHandlers,\n) {\n  const getHeaderProps = computed((): Recordable => {\n    const {\n      title,\n      showTableSetting,\n      titleHelpMessage,\n      tableSetting,\n      target,\n      targetTabKey,\n      targetTabValue,\n    } = unref(propsRef);\n\n    const hideTitle = !slots.tableTitle && !title && !slots.toolbar && !showTableSetting;\n    if (hideTitle && !isString(title)) {\n      return {};\n    }\n\n    return {\n      title: hideTitle\n        ? null\n        : () =>\n            h(\n              TableHeader,\n              {\n                title,\n                titleHelpMessage,\n                showTableSetting,\n                tableSetting,\n                target,\n                targetTabKey,\n                targetTabValue,\n                onColumnsChange: handlers.onColumnsChange,\n              } as Recordable,\n              {\n                ...(slots.toolbar\n                  ? {\n                      toolbar: () => getSlot(slots, 'toolbar'),\n                    }\n                  : {}),\n                ...(slots.tableTitle\n                  ? {\n                      tableTitle: () => getSlot(slots, 'tableTitle'),\n                    }\n                  : {}),\n                ...(slots.headerTop\n                  ? {\n                      headerTop: () => getSlot(slots, 'headerTop'),\n                    }\n                  : {}),\n              },\n            ),\n    };\n  });\n  return { getHeaderProps };\n}\n","import type { ComputedRef, Ref } from 'vue';\nimport type { BasicTableProps } from '../types/table';\nimport { computed, unref, ref, toRaw } from 'vue';\nimport { ROW_KEY } from '../const';\n\nexport function useTableExpand(\n  propsRef: ComputedRef<BasicTableProps>,\n  tableData: Ref<Recordable[]>,\n  emit: EmitType,\n) {\n  const expandedRowKeys = ref<string[]>([]);\n\n  const getAutoCreateKey = computed(() => {\n    return unref(propsRef).autoCreateKey && !unref(propsRef).rowKey;\n  });\n\n  const getRowKey = computed(() => {\n    const { rowKey } = unref(propsRef);\n    return unref(getAutoCreateKey) ? ROW_KEY : rowKey;\n  });\n\n  const getExpandOption = computed(() => {\n    const { isTreeTable } = unref(propsRef);\n    if (!isTreeTable) return {};\n\n    return {\n      expandedRowKeys: unref(expandedRowKeys),\n      onExpandedRowsChange: (keys: string[]) => {\n        expandedRowKeys.value = keys;\n        emit('expanded-rows-change', keys);\n      },\n    };\n  });\n\n  function expandAll() {\n    const keys = getAllKeys();\n    expandedRowKeys.value = keys;\n  }\n\n  function expandRows(keys: string[]) {\n    // use row ID expands the specified table row\n    const { isTreeTable } = unref(propsRef);\n    if (!isTreeTable) return;\n    expandedRowKeys.value = [...expandedRowKeys.value, ...keys];\n  }\n\n  function getAllKeys(data?: Recordable[]) {\n    const keys: string[] = [];\n    const { childrenColumnName } = unref(propsRef);\n    toRaw(data || unref(tableData)).forEach((item) => {\n      keys.push(item[unref(getRowKey) as string]);\n      const children = item[childrenColumnName || 'children'];\n      if (children?.length) {\n        keys.push(...getAllKeys(children));\n      }\n    });\n    return keys;\n  }\n\n  function collapseAll() {\n    expandedRowKeys.value = [];\n  }\n\n  return { getExpandOption, expandAll, expandRows, collapseAll };\n}\n","<template>\n  <Table\n    v-if=\"summaryFunc || summaryData\"\n    :showHeader=\"false\"\n    :bordered=\"false\"\n    :pagination=\"false\"\n    :dataSource=\"getDataSource\"\n    :rowKey=\"(r) => r[rowKey]\"\n    :columns=\"getColumns\"\n    tableLayout=\"fixed\"\n    :scroll=\"scroll\"\n  />\n</template>\n<script lang=\"ts\">\n  import type { PropType } from 'vue';\n  import { defineComponent, unref, computed, toRaw } from 'vue';\n  import { Table } from 'ant-design-vue';\n  import { cloneDeep } from 'lodash-es';\n  import { isFunction } from '/@/utils/is';\n  import type { BasicColumn } from '../types/table';\n  import { INDEX_COLUMN_FLAG } from '../const';\n  import { propTypes } from '/@/utils/propTypes';\n  import { useTableContext } from '../hooks/useTableContext';\n\n  const SUMMARY_ROW_KEY = '_row';\n  const SUMMARY_INDEX_KEY = '_index';\n  export default defineComponent({\n    name: 'BasicTableFooter',\n    components: { Table },\n    props: {\n      summaryFunc: {\n        type: Function as PropType<Fn>,\n      },\n      summaryData: {\n        type: Array as PropType<Recordable[]>,\n      },\n      scroll: {\n        type: Object as PropType<Recordable>,\n      },\n      rowKey: propTypes.string.def('key'),\n    },\n    setup(props) {\n      const table = useTableContext();\n\n      const getDataSource = computed((): Recordable[] => {\n        const { summaryFunc, summaryData } = props;\n        if (summaryData?.length) {\n          summaryData.forEach((item, i) => (item[props.rowKey] = `${i}`));\n          return summaryData;\n        }\n        if (!isFunction(summaryFunc)) {\n          return [];\n        }\n        let dataSource = toRaw(unref(table.getDataSource()));\n        dataSource = summaryFunc(dataSource);\n        dataSource.forEach((item, i) => {\n          item[props.rowKey] = `${i}`;\n        });\n        return dataSource;\n      });\n\n      const getColumns = computed(() => {\n        const dataSource = unref(getDataSource);\n        const columns: BasicColumn[] = cloneDeep(table.getColumns());\n        const index = columns.findIndex((item) => item.flag === INDEX_COLUMN_FLAG);\n        const hasRowSummary = dataSource.some((item) => Reflect.has(item, SUMMARY_ROW_KEY));\n        const hasIndexSummary = dataSource.some((item) => Reflect.has(item, SUMMARY_INDEX_KEY));\n\n        if (index !== -1) {\n          if (hasIndexSummary) {\n            columns[index].customRender = ({ record }) => record[SUMMARY_INDEX_KEY];\n            columns[index].ellipsis = false;\n          } else {\n            Reflect.deleteProperty(columns[index], 'customRender');\n          }\n        }\n\n        if (table.getRowSelection() && hasRowSummary) {\n          const isFixed = columns.some((col) => col.fixed === 'left');\n          columns.unshift({\n            width: 60,\n            title: 'selection',\n            key: 'selectionKey',\n            align: 'center',\n            ...(isFixed ? { fixed: 'left' } : {}),\n            customRender: ({ record }) => record[SUMMARY_ROW_KEY],\n          });\n        }\n        return columns;\n      });\n      return { getColumns, getDataSource };\n    },\n  });\n</script>\n","import type { ComputedRef, Ref } from 'vue';\nimport type { BasicTableProps } from '../types/table';\nimport { unref, computed, h, nextTick, watchEffect } from 'vue';\nimport TableFooter from '../components/TableFooter.vue';\nimport { useEventListener } from '/@/hooks/event/useEventListener';\n\nexport function useTableFooter(\n  propsRef: ComputedRef<BasicTableProps>,\n  scrollRef: ComputedRef<{\n    x: string | number | true;\n    y: string | number | null;\n    scrollToFirstRowOnChange: boolean;\n  }>,\n  tableElRef: Ref<ComponentRef>,\n  getDataSourceRef: ComputedRef<Recordable>,\n) {\n  const getIsEmptyData = computed(() => {\n    return (unref(getDataSourceRef) || []).length === 0;\n  });\n\n  const getFooterProps = computed((): Recordable | undefined => {\n    const { summaryFunc, showSummary, summaryData } = unref(propsRef);\n    return showSummary && !unref(getIsEmptyData)\n      ? () => h(TableFooter, { summaryFunc, summaryData, scroll: unref(scrollRef) })\n      : undefined;\n  });\n\n  watchEffect(() => {\n    handleSummary();\n  });\n\n  function handleSummary() {\n    const { showSummary } = unref(propsRef);\n    if (!showSummary || unref(getIsEmptyData)) return;\n\n    nextTick(() => {\n      const tableEl = unref(tableElRef);\n      if (!tableEl) return;\n      const bodyDom = tableEl.$el.querySelector('.ant-table-content');\n      useEventListener({\n        el: bodyDom,\n        name: 'scroll',\n        listener: () => {\n          const footerBodyDom = tableEl.$el.querySelector(\n            '.ant-table-footer .ant-table-content',\n          ) as HTMLDivElement;\n          if (!footerBodyDom || !bodyDom) return;\n          footerBodyDom.scrollLeft = bodyDom.scrollLeft;\n        },\n        wait: 0,\n        options: true,\n      });\n    });\n  }\n  return { getFooterProps };\n}\n","import type { ComputedRef, Slots } from 'vue';\nimport type { BasicTableProps, FetchParams } from '../types/table';\nimport { unref, computed } from 'vue';\nimport type { FormProps } from '/@/components/Form';\nimport { isFunction } from '/@/utils/is';\n\nexport function useTableForm(\n  propsRef: ComputedRef<BasicTableProps>,\n  slots: Slots,\n  fetch: (opt?: FetchParams | undefined) => Promise<void>,\n  getLoading: ComputedRef<boolean | undefined>,\n) {\n  const getFormProps = computed((): Partial<FormProps> => {\n    const { formConfig } = unref(propsRef);\n    const { submitButtonOptions } = formConfig || {};\n    return {\n      showAdvancedButton: true,\n      ...formConfig,\n      submitButtonOptions: { loading: unref(getLoading), ...submitButtonOptions },\n      compact: true,\n    };\n  });\n\n  const getFormSlotKeys: ComputedRef<string[]> = computed(() => {\n    const keys = Object.keys(slots);\n    return keys\n      .map((item) => (item.startsWith('form-') ? item : null))\n      .filter((item) => !!item) as string[];\n  });\n\n  function replaceFormSlotKey(key: string) {\n    if (!key) return '';\n    return key?.replace?.(/form-/, '') ?? '';\n  }\n\n  function handleSearchInfoChange(info: Recordable) {\n    const { handleSearchInfoFn } = unref(propsRef);\n    if (handleSearchInfoFn && isFunction(handleSearchInfoFn)) {\n      info = handleSearchInfoFn(info) || info;\n    }\n    fetch({ searchInfo: info, page: 1 });\n  }\n\n  return {\n    getFormProps,\n    replaceFormSlotKey,\n    getFormSlotKeys,\n    handleSearchInfoChange,\n  };\n}\n","<template>\n  <div ref=\"wrapRef\" :class=\"getWrapperClass\">\n    <BasicForm\n      ref=\"formRef\"\n      submitOnReset\n      v-bind=\"getFormProps\"\n      v-if=\"getBindValues.useSearchForm\"\n      :tableAction=\"tableAction\"\n      @register=\"registerForm\"\n      @submit=\"handleSearchInfoChange\"\n      @advanced-change=\"redoHeight\"\n      @toggle=\"handleFormToggle\"\n    >\n      <template #[replaceFormSlotKey(item)]=\"data\" v-for=\"item in getFormSlotKeys\">\n        <slot :name=\"item\" v-bind=\"data || {}\"></slot>\n      </template>\n    </BasicForm>\n\n    <Table\n      ref=\"tableElRef\"\n      :class=\"`btable ${tableClass}`\"\n      v-bind=\"getBindValues\"\n      :tableLayout=\"tableLayout\"\n      :rowClassName=\"getRowClassName\"\n      v-show=\"getEmptyDataIsShowTable\"\n      @drag-end=\"handleResizeColumn\"\n      @resize-column=\"handleResizeColumn\"\n      @change=\"handleTableChange\"\n    >\n      <template #[item]=\"data\" v-for=\"item in Object.keys($slots)\" :key=\"item\">\n        <slot :name=\"item\" v-bind=\"data || {}\"></slot>\n      </template>\n      <template #headerCell=\"{ column }\">\n        <HeaderCell :column=\"column\" />\n      </template>\n      <!--    增加对antdv3.x兼容    -->\n      <template #bodyCell=\"data\">\n        <slot name=\"bodyCell\" v-bind=\"data || {}\"></slot>\n      </template>\n      <!--      <template #[`header-${column.dataIndex}`] v-for=\"(column, index) in columns\" :key=\"index\">    -->\n      <!--        <HeaderCell :column=\"column\" />      -->\n      <!--      </template>     -->\n    </Table>\n  </div>\n</template>\n<script lang=\"ts\">\n  import type {\n    BasicTableProps,\n    TableActionType,\n    SizeType,\n    ColumnChangeParam,\n  } from './types/table';\n\n  import { defineComponent, ref, computed, unref, toRaw, inject, watchEffect } from 'vue';\n  import { Table } from 'ant-design-vue';\n  import { BasicForm, useForm } from '/@/components/Form/index';\n  import { PageWrapperFixedHeightKey } from '/@/enums/pageEnum';\n  import HeaderCell from './components/HeaderCell.vue';\n  import { InnerHandlers } from './types/table';\n\n  import { usePagination } from './hooks/usePagination';\n  import { useColumns } from './hooks/useColumns';\n  import { useDataSource } from './hooks/useDataSource';\n  import { useLoading } from './hooks/useLoading';\n  import { useRowSelection } from './hooks/useRowSelection';\n  import { useTableScroll } from './hooks/useTableScroll';\n  import { useTableScrollTo } from './hooks/useScrollTo';\n  import { useCustomRow } from './hooks/useCustomRow';\n  import { useTableStyle } from './hooks/useTableStyle';\n  import { useTableHeader } from './hooks/useTableHeader';\n  import { useTableExpand } from './hooks/useTableExpand';\n  import { createTableContext } from './hooks/useTableContext';\n  import { useTableFooter } from './hooks/useTableFooter';\n  import { useTableForm } from './hooks/useTableForm';\n  import { useDesign } from '/@/hooks/web/useDesign';\n\n  import { omit } from 'lodash-es';\n  import { basicProps } from './props';\n  import { isFunction } from '/@/utils/is';\n  import { warn } from '/@/utils/log';\n\n  export default defineComponent({\n    name: 'BasicTable',\n    components: {\n      Table,\n      BasicForm,\n      HeaderCell,\n    },\n    props: basicProps,\n    emits: [\n      'fetch-success',\n      'fetch-error',\n      'selection-change',\n      'register',\n      'row-click',\n      'row-dbClick',\n      'row-contextmenu',\n      'row-mouseenter',\n      'row-mouseleave',\n      'edit-end',\n      'edit-cancel',\n      'edit-row-end',\n      'edit-change',\n      'expanded-rows-change',\n      'change',\n      'columns-change',\n    ],\n    setup(props, { attrs, emit, slots, expose }) {\n      const tableElRef = ref(null);\n      const tableData = ref([]);\n\n      const wrapRef = ref(null);\n      const formRef = ref(null);\n      const dragCell = ref(null);\n      const dragStartTime = ref(0);\n      const innerPropsRef = ref<Partial<BasicTableProps>>();\n\n      const { prefixCls } = useDesign('basic-table');\n      const [registerForm, formActions] = useForm();\n\n      const tableClass = `btable-${Math.floor(Math.random() * 10000)}`;\n\n      const getProps = computed(() => {\n        return { ...props, ...unref(innerPropsRef) } as BasicTableProps;\n      });\n\n      const isFixedHeightPage = inject(PageWrapperFixedHeightKey, false);\n      watchEffect(() => {\n        unref(isFixedHeightPage) &&\n          props.canResize &&\n          warn(\n            \"'canResize' of BasicTable may not work in PageWrapper with 'fixedHeight' (especially in hot updates)\",\n          );\n      });\n\n      const { getLoading, setLoading } = useLoading(getProps);\n      const {\n        getPaginationInfo,\n        getPagination,\n        setPagination,\n        setShowPagination,\n        getShowPagination,\n      } = usePagination(getProps);\n\n      const {\n        getRowSelection,\n        getRowSelectionRef,\n        getSelectRows,\n        setSelectedRows,\n        clearSelectedRowKeys,\n        getSelectRowKeys,\n        deleteSelectRowByKey,\n        setSelectedRowKeys,\n      } = useRowSelection(getProps, tableData, emit);\n\n      const {\n        handleTableChange: onTableChange,\n        getDataSourceRef,\n        getDataSource,\n        getRawDataSource,\n        setTableData,\n        updateTableDataRecord,\n        deleteTableDataRecord,\n        insertTableDataRecord,\n        findTableDataRecord,\n        fetch,\n        getRowKey,\n        reload,\n        reloadData,\n        reloadByDataSource,\n        reloadApiDataByLocal,\n        getAutoCreateKey,\n        updateTableData,\n      } = useDataSource(\n        getProps,\n        {\n          tableData,\n          getPaginationInfo,\n          setLoading,\n          setPagination,\n          getFieldsValue: formActions.getFieldsValue,\n          clearSelectedRowKeys,\n        },\n        emit,\n      );\n\n      const handleRemoveIconActive = () => {\n        const dom = document.querySelector('.anticon.active');\n        dom.classList.remove('active');\n      };\n\n      function handleTableChange(...args) {\n        // 标题拖拽会触发此处，如果key字段一致则不触发\n        const now = new Date().getTime();\n        const diff = now - dragStartTime.value;\n        if (dragCell.value && dragCell.value.key === args[2]['field'] && diff < 1000) {\n          setTimeout(handleRemoveIconActive, 75);\n          setTimeout(handleRemoveIconActive, 100);\n          setTimeout(handleRemoveIconActive, 150);\n          setTimeout(handleRemoveIconActive, 175);\n          setTimeout(handleRemoveIconActive, 300);\n        } else {\n          onTableChange.call(undefined, ...args);\n          emit('change', ...args);\n          // 解决通过useTable注册onChange时不起作用的问题\n          const { onChange } = unref(getProps);\n          onChange && isFunction(onChange) && onChange.call(undefined, ...args);\n        }\n      }\n\n      const {\n        getViewColumns,\n        getColumns,\n        setCacheColumnsByField,\n        setCacheColumns,\n        setColumns,\n        getColumnsRef,\n        getCacheColumns,\n      } = useColumns(getProps, getPaginationInfo);\n\n      const { getScrollRef, redoHeight } = useTableScroll(\n        getProps,\n        tableElRef,\n        getColumnsRef,\n        getRowSelectionRef,\n        getDataSourceRef,\n        wrapRef,\n        formRef,\n      );\n\n      const { scrollTo } = useTableScrollTo(tableElRef, getDataSourceRef);\n\n      const { customRow } = useCustomRow(getProps, {\n        setSelectedRowKeys,\n        getSelectRowKeys,\n        clearSelectedRowKeys,\n        getAutoCreateKey,\n        emit,\n      });\n\n      const { getRowClassName } = useTableStyle(getProps, prefixCls);\n\n      const { getExpandOption, expandAll, expandRows, collapseAll } = useTableExpand(\n        getProps,\n        tableData,\n        emit,\n      );\n\n      const handlers: InnerHandlers = {\n        onColumnsChange: (data: ColumnChangeParam[]) => {\n          emit('columns-change', data);\n          unref(getProps).onColumnsChange?.(data);\n        },\n      };\n\n      const { getHeaderProps } = useTableHeader(getProps, slots, handlers);\n\n      const { getFooterProps } = useTableFooter(\n        getProps,\n        getScrollRef,\n        tableElRef,\n        getDataSourceRef,\n      );\n\n      const { getFormProps, replaceFormSlotKey, getFormSlotKeys, handleSearchInfoChange } =\n        useTableForm(getProps, slots, fetch, getLoading);\n\n      const getBindValues = computed(() => {\n        const dataSource = unref(getDataSourceRef);\n        let propsData: any = {\n          tableSetting: {\n            redo: false,\n            size: false,\n            setting: true,\n            fullScreen: false,\n          },\n          ...attrs,\n          customRow,\n          ...unref(getProps),\n          ...unref(getHeaderProps),\n          scroll: unref(getScrollRef),\n          loading: unref(getLoading),\n          tableLayout: 'fixed',\n          rowSelection: unref(getRowSelectionRef),\n          rowKey: unref(getRowKey),\n          columns: toRaw(unref(getViewColumns)),\n          pagination: toRaw(unref(getPaginationInfo)),\n          dataSource,\n          footer: unref(getFooterProps),\n          ...unref(getExpandOption),\n          showSorterTooltip: false\n        };\n        propsData.tableSetting = {\n          redo: false,\n          size: false,\n          setting: true,\n          fullScreen: false,\n        };\n\n        propsData = omit(propsData, ['class', 'onChange']);\n        return propsData;\n      });\n\n      const getWrapperClass = computed(() => {\n        const values = unref(getBindValues);\n        return [\n          prefixCls,\n          attrs.class,\n          {\n            [`${prefixCls}-form-container`]: values.useSearchForm,\n            [`${prefixCls}--inset`]: values.inset,\n          },\n        ];\n      });\n\n      const getEmptyDataIsShowTable = computed(() => {\n        const { emptyDataIsShowTable, useSearchForm } = unref(getProps);\n        if (emptyDataIsShowTable || !useSearchForm) {\n          return true;\n        }\n        return !!unref(getDataSourceRef).length;\n      });\n\n      function setProps(props: Partial<BasicTableProps>) {\n        innerPropsRef.value = { ...unref(innerPropsRef), ...props };\n      }\n\n      const selectTableRow = (index = 0) => {\n        try {\n          const selector = `.${tableClass} .ant-table .ant-table-container .ant-table-body tbody.ant-table-tbody .ant-table-row`;\n          document.querySelectorAll(selector)[index].click();\n        } catch (error) {\n          //\n        }\n      };\n\n      const handleFormToggle = (flag) => {\n        emit('form-toggle', flag);\n      };\n\n      const handleResizeColumn = (w, col) => {\n        if (col) {\n          dragCell.value = col;\n          dragStartTime.value = new Date().getTime();\n          setTimeout(() => {\n            dragCell.value = null;\n          }, 1500);\n        }\n      };\n\n      const tableAction: TableActionType = {\n        reload,\n        reloadData,\n        reloadByDataSource,\n        reloadApiDataByLocal,\n        selectTableRow,\n        getSelectRows,\n        setSelectedRows,\n        clearSelectedRowKeys,\n        getSelectRowKeys,\n        deleteSelectRowByKey,\n        setPagination,\n        setTableData,\n        updateTableDataRecord,\n        deleteTableDataRecord,\n        insertTableDataRecord,\n        findTableDataRecord,\n        redoHeight,\n        setSelectedRowKeys,\n        setColumns,\n        setLoading,\n        getDataSource,\n        getRawDataSource,\n        setProps,\n        getRowSelection,\n        getPaginationRef: getPagination,\n        getColumns,\n        getCacheColumns,\n        emit,\n        updateTableData,\n        setShowPagination,\n        getShowPagination,\n        setCacheColumnsByField,\n        expandAll,\n        expandRows,\n        collapseAll,\n        scrollTo,\n        getSize: () => {\n          return unref(getBindValues).size as SizeType;\n        },\n        setCacheColumns,\n      };\n      createTableContext({ ...tableAction, wrapRef, getBindValues });\n\n      expose(tableAction);\n\n      emit('register', tableAction, formActions);\n\n      return {\n        formRef,\n        tableElRef,\n        tableClass,\n        getBindValues,\n        getLoading,\n        registerForm,\n        handleSearchInfoChange,\n        getEmptyDataIsShowTable,\n        handleTableChange,\n        getRowClassName,\n        wrapRef,\n        tableAction,\n        redoHeight,\n        getFormProps: getFormProps as any,\n        replaceFormSlotKey,\n        getFormSlotKeys,\n        getWrapperClass,\n        handleFormToggle,\n        handleResizeColumn,\n        columns: getViewColumns,\n      };\n    },\n  });\n</script>\n<style lang=\"less\">\n  @border-color: #cecece4d;\n\n  @prefix-cls: ~'@{namespace}-basic-table';\n\n  [data-theme='dark'] {\n    .ant-table-tbody > tr:hover.ant-table-row-selected > td,\n    .ant-table-tbody > tr.ant-table-row-selected td {\n      background-color: #262626;\n    }\n  }\n\n  .ant-modal-content {\n    .@{prefix-cls} {\n      &-form-container {\n        .vben-basic-form {\n          .ant-col[tableaction] {\n            position: absolute;\n            right: 0;\n          }\n        }\n      }\n    }\n  }\n\n  .@{prefix-cls} {\n    max-width: 100%;\n    height: 100%;\n\n    &-row__striped {\n      td {\n        background-color: @app-content-background;\n      }\n    }\n\n    &-form-container {\n      padding: 16px;\n\n      .ant-form {\n        width: 100%;\n        margin-bottom: 16px;\n        padding: 12px 10px 6px;\n        border-radius: 2px;\n        background-color: @component-background;\n      }\n\n      .vben-basic-form {\n        .ant-row {\n          position: relative;\n        }\n\n        .ant-col[tableaction] {\n          position: fixed;\n          right: 1rem;\n        }\n      }\n    }\n\n    .ant-table-cell {\n      .ant-tag {\n        margin-right: 0;\n      }\n    }\n\n    .vben-basic-table-header__toolbar {\n      div.ant-divider-vertical[role='separator'] {\n        display: none;\n      }\n\n      .table-settings {\n        span[aria-label='redo'] {\n          display: none; // display: inline-block;\n        }\n\n        span[aria-label='fullscreen'] {\n          display: none; // display: inline-block;\n        }\n\n        span[aria-label='column-height'] {\n          display: none; // display: inline-block;\n        }\n      }\n    }\n\n    .ant-table-wrapper {\n      padding: 6px;\n      border-radius: 2px;\n      background-color: @component-background;\n\n      .ant-table-title {\n        min-height: 40px;\n        padding: 0 0 8px !important;\n      }\n\n      .ant-table.ant-table-bordered .ant-table-title {\n        border: none !important;\n      }\n    }\n\n    .ant-table {\n      width: 100%;\n      overflow-x: hidden;\n\n      &.ant-table-empty {\n        padding-bottom: 34px;\n      }\n\n      &-title {\n        display: flex;\n        align-items: center;\n        justify-content: space-between;\n        padding: 8px 6px;\n        border-bottom: none;\n      }\n\n      .ant-table-body {\n        .ant-table-tbody {\n          .ant-table-placeholder {\n            height: 100%;\n          }\n        }\n      }\n\n      //.ant-table-tbody > tr.ant-table-row-selected td {\n      //background-color: fade(@primary-color, 8%) !important;\n      //}\n    }\n\n    .ant-pagination {\n      margin: 10px 0 0;\n    }\n\n    .ant-table-footer {\n      padding: 0;\n\n      .ant-table-wrapper {\n        padding: 0;\n      }\n\n      table {\n        border: none !important;\n      }\n\n      .ant-table-body {\n        overflow-x: hidden !important;\n        //  overflow-y: scroll !important;\n      }\n\n      td {\n        padding: 12px 8px;\n      }\n    }\n\n    &--inset {\n      .ant-table-wrapper {\n        padding: 0;\n      }\n    }\n  }\n</style>\n"],"names":["_sfc_main$7","defineComponent","FormOutlined","_resolveComponent","_openBlock","_createElementBlock","_renderSlot","_ctx","_createTextVNode","_toDisplayString","_sfc_main$6","EditTableHeaderCell","BasicHelp","props","prefixCls","useDesign","getIsEdit","computed","_a","getTitle","_b","getHelpMessage","headAlign","_Fragment","_createBlock","_component_EditTableHeaderCell","_withCtx","_normalizeStyle","_component_BasicHelp","itemRender","page","type","originalElement","_createVNode","LeftOutlined","RightOutlined","usePagination","refProps","t","useI18n","configRef","ref","show","watch","unref","pagination","isBoolean","value","__spreadValues","getPaginationInfo","current","pageSize","PAGE_SIZE","size","defaultPageSize","showTotal","total","pageSizeOptions","PAGE_SIZE_OPTIONS","showSizeChanger","DEFAULT_SIZE_CHANGER","showQuickJumper","DEFAULT_QUICK_JUMPER","setPagination","info","paginationInfo","getPagination","getShowPagination","setShowPagination","flag","__async","renderEditCell","column","record","index","toRaw","isArray","validFns","fn","item","edit","submit","h","EditableCell","formatNumber","format","reg1","reg2","newValue","fixedNum","decimalPart","splitNum","intPart","formattedNumber","formatMoney","isPrefix","prefix","formatPrefix","handleItem","ellipsis","key","dataIndex","children","DEFAULT_ALIGN","handleChildren","handleIndexColumn","propsRef","getPaginationRef","columns","showIndexColumn","indexColumnProps","isTreeTable","pushIndexColumns","indIndex","INDEX_COLUMN_FLAG","isFixedLeft","error","handleActionColumn","actionColumn","hasIndex","ACTION_COLUMN_FLAG","__spreadProps","useColumns","columnsRef","cacheColumns","getColumnsRef","cloneDeep","customRender","slots","isIfShow","ifShow","isFunction","hasPermission","usePermission","getViewColumns","viewColumns","sortFixedColumn","mapFn","editRow","isDefaultAction","text","formatCell","reactive","setCacheColumnsByField","setColumns","columnList","firstColumn","cacheKeys","isString","columnKeys","m","newColumns","isEqual","prev","next","getColumns","opt","ignoreIndex","ignoreAction","sort","getCacheColumns","setCacheColumns","fixedLeftColumns","fixedRightColumns","defColumns","DATE_FORMAT_PREFIX","dateFormat","formatToDate","isMap","formatStr","useDataSource","setLoading","getFieldsValue","clearSelectedRowKeys","tableData","emit","searchState","dataSourceRef","rawDataSourceRef","watchEffect","dataSource","api","handleTableChange","filters","sorter","clearSelectOnPageChange","sortFn","filterFn","params","sortInfo","filterInfo","fetch","setTableKey","items","ROW_KEY","buildUUID","getAutoCreateKey","getRowKey","rowKey","getDataSourceRef","firstItem","lastItem","data","updateTableData","updateTableDataRecord","row","findTableDataRecord","field","deleteTableDataRecord","rowKeyName","rowKeys","deleteRow","findRow","i","targetKeyName","result","insertTableDataRecord","_record","isObject","childrenColumnName","array","ret","iter","r","addMissingColumns","fetchByDataSource","fetchSetting","pageField","sizeField","FETCH_SETTING","pageParams","resultItems","resultTotal","currentTotalPage","loading","searchInfo","defSort","beforeFetch","afterFetch","useSearchForm","listField","totalField","merge","_c","res","isArrayResult","get","isRef","isReactive","setTableData","values","getDataSource","getRawDataSource","reload","reloadData","reloadByDataSource","reloadApiDataByLocal","list","onMounted","useTimeoutFn","useLoading","loadingRef","getLoading","useRowSelection","selectedRowKeysRef","selectedRowRef","getRowSelectionRef","rowSelection","selectedRowKeys","setSelectedRowKeys","omit","v","nextTick","onChange","getSelectRowKeys","getSelectRows","allSelectedRows","findNodeAll","trueSelectedRows","found","setSelectedRows","rows","deleteSelectRowByKey","getRowSelection","useTableScroll","tableElRef","rowSelectionRef","wrapRef","formRef","tableHeightRef","modalFn","useModalContext","debounceRedoHeight","useDebounceFn","redoHeight","getCanResize","canResize","scroll","calcTableHeight","setHeight","height","paginationEl","footerEl","bodyEl","handleScrollBar","tableEl","hasScrollBarY","hasScrollBarX","caclPaginationHeight","paginationHeight","offsetHeight","caclFooterHeight","footerHeight","calcHeaderHeight","headEl","headerHeight","calcBottomAndPaddingHeight","isCanResizeParent","paddingHeight","bottomIncludeBody","paginationMargin","wrapHeight","formHeight","_d","headerCellHeight","_f","_e","getViewportOffset","resizeHeightOffset","maxHeight","table","setTimeoutExecs","useWindowSizeFn","onMountedOrActivated","getScrollX","width","NORMAL_WIDTH","len","tableHeight","useTableScrollTo","findTargetRowToScroll","targetRowData","id","targetRowEl","scrollTo","pos","warn","getKey","autoCreateKey","useCustomRow","e","handleClick","clickToRowSelect","keys","tr","dom","checkBox","keyIndex","event","useTableStyle","getRowClassName","striped","rowClassName","classNames","cls","_component_Tooltip","_createElementVNode","_component_Popover","_normalizeClass","_component_Checkbox","_cache","$event","_component_a_button","_component_ScrollContainer","_component_CheckboxGroup","_renderList","_component_DragOutlined","_component_Icon","_component_Divider","_component_Dropdown","_component_Menu","_component_MenuItem","_sfc_main$5","RedoOutlined","Tooltip","useTableContext","redo","_sfc_main$4","FullscreenExitOutlined","FullscreenOutlined","toggle","isFullscreen","useFullscreen","_component_FullscreenExitOutlined","_component_FullscreenOutlined","_sfc_main$3","ColumnSetting","SizeSetting","RedoSetting","FullScreenSetting","getSetting","handleColumnChange","getTableContainer","_hoisted_1","_component_RedoSetting","_createCommentVNode","_component_SizeSetting","_component_ColumnSetting","_component_FullScreenSetting","_sfc_main$2","BasicTitle","title","tit","_component_BasicTitle","tableSetting","showTableSetting","titleHelpMessage","target","targetTabKey","targetTabValue","toRefs","domElement","randomID","handleTargetToggle","toolbar","handleTargetTransfer","targetElement","useTableHeader","handlers","hideTitle","TableHeader","getSlot","useTableExpand","expandedRowKeys","getExpandOption","expandAll","getAllKeys","expandRows","collapseAll","_component_Table","useTableFooter","scrollRef","getIsEmptyData","getFooterProps","summaryFunc","showSummary","summaryData","TableFooter","handleSummary","bodyDom","useEventListener","footerBodyDom","useTableForm","getFormProps","formConfig","submitButtonOptions","getFormSlotKeys","replaceFormSlotKey","handleSearchInfoChange","handleSearchInfoFn","_sfc_main","Table","BasicForm","HeaderCell","basicProps","attrs","expose","dragCell","dragStartTime","innerPropsRef","registerForm","formActions","useForm","tableClass","getProps","isFixedHeightPage","inject","PageWrapperFixedHeightKey","onTableChange","handleRemoveIconActive","args","diff","getScrollRef","customRow","getHeaderProps","getBindValues","propsData","getWrapperClass","getEmptyDataIsShowTable","emptyDataIsShowTable","setProps","selectTableRow","selector","handleFormToggle","handleResizeColumn","w","col","tableAction","createTableContext","_component_BasicForm","_mergeProps","_createSlots","_withDirectives","_component_HeaderCell"],"mappings":"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"}