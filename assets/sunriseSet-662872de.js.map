{"version":3,"file":"sunriseSet-662872de.js","sources":["../../src/views/baseset/monitor/sunrise/sunriseSet.vue"],"sourcesContent":["<template>\n  <PageWrapper\n    class=\"sunrise-page-wrapper\"\n    dense\n    contentFullHeight\n    fixedHeight\n    contentClass=\"flex\"\n    style=\"position: relative\"\n  >\n    <!-- 电站组织树 -->\n    <CommonTree\n      title=\"电站组织\"\n      @select=\"handleSelect\"\n      :value=\"treeData\"\n      class=\"left-tree-layout\"\n      :canEdit=\"false\"\n      :canAdd=\"false\"\n      :canDelete=\"false\"\n      :isShowOperationBtns=\"false\"\n      :fieldNames=\"{ key: 'id', title: 'name' }\"\n    />\n    <!-- 数据表格 -->\n    <div class=\"right-table-layout\">\n      <BasicTable\n        @register=\"registerTable\"\n        class=\"fix-basic-table\"\n        :searchInfo=\"searchInfo\"\n        @resize-column=\"(w, col) => (col.width = w)\"\n        :scroll=\"{ y: 'calc(100vh )' }\"\n      >\n        <template #toolbar>\n          <a-button type=\"primary\" :preIcon=\"IconEnum.ADD\" @click=\"handleCreate\">生成数据</a-button>\n        </template>\n        <template #bodyCell=\"{ column, record }\">\n          <template v-if=\"column.key === 'action'\">\n            <TableAction :actions=\"getAccountAction(handleView, record)\" />\n          </template>\n        </template>\n      </BasicTable>\n    </div>\n    <!-- 新增弹窗 -->\n    <Dialog\n      v-model:visible=\"open\"\n      width=\"600px\"\n      height=\"200px\"\n      title=\"生成数据\"\n      @cancel=\"handleCancel\"\n    >\n      <div v-show=\"loadingFlag\" class=\"dialog-loading\">\n        <a-spin />\n      </div>\n\n      <a-form :model=\"formState\" name=\"createCycle\" labelAlign=\"center\" v-bind=\"formItemLayout\">\n        <a-form-item name=\"formState.selectYear\" label=\"年份范围\">\n          <a-range-picker v-model:value=\"yearValue\" picker=\"year\" @change=\"onChangeYear\" />\n        </a-form-item>\n      </a-form>\n\n      <a-progress v-show=\"loadingFlag\" :percent=\"30\" />\n      <template #footer>\n        <a-button key=\"back\" @click=\"handleCancel\">取消</a-button>\n        <a-button key=\"submit\" type=\"primary\" style=\"margin-left: 5px\" @click=\"handleSuccess\"\n          >确定</a-button\n        >\n      </template>\n    </Dialog>\n    <!-- 进度条 -->\n    <Dialog\n      style=\"margin: auto\"\n      v-model:visible=\"proOpen\"\n      title=\"数据生成进度\"\n      :showBtm=\"false\"\n      height=\"100px\"\n      target=\"\"\n    >\n      <a-progress v-show=\"true\" :percent=\"insertPercent\" />\n    </Dialog>\n    <!-- <Modal title=\"操作进度\" :visible=\"true\" maskClosable=\"false\">\n      <Progress percent=\"50\" />\n    </Modal> -->\n    <!-- <Dialog v-model:visible=\"proOpen\" width=\"600px\" height=\"180px\" title=\"生成数据\">\n      <a-progress v-show=\"true\" :percent=\"30\" />\n    </Dialog> -->\n    <div v-if=\"loadingFlag\" class=\"dialog-mask\"> </div>\n\n    <!-- 日期详情弹窗 -->\n    <Dialog\n      v-model:visible=\"detailVisible\"\n      :title=\"dialogTitle\"\n      width=\"1000px\"\n      height=\"680px\"\n      @cancel=\"detailCancel\"\n    >\n      <template #footer>\n        <a-button key=\"submit\" :preIcon=\"IconEnum.DOWNLOAD\" :loading=\"loading\" @click=\"exportExcel\"\n          >导出</a-button\n        >\n      </template>\n      <a-table\n        :columns=\"detailColumns\"\n        :data-source=\"detailList\"\n        :pagination=\"false\"\n        size=\"small\"\n        :scroll=\"{ y: '500px' }\"\n        bordered\n      >\n        <template #bodyCell=\"{ text }\">\n          <span>{{ text }}</span>\n        </template>\n      </a-table>\n    </Dialog>\n    <!-- <detailModal @register=\"registerModal\" :minHeight=\"600\" /> -->\n  </PageWrapper>\n</template>\n<script lang=\"ts\" setup>\n  import { onMounted, reactive, ref } from 'vue';\n  import { BasicTable, useTable, TableAction } from '/@/components/Table';\n  import { TreeItem } from '/@/components/Tree';\n  import { PageWrapper } from '/@/components/Page';\n  import { useModal } from '/@/components/Modal';\n  import { IconEnum } from '@/enums/appEnum';\n  import CommonTree from '@/components/Framework/Tree/CommonTree.vue';\n  import dayjs, { Dayjs } from 'dayjs';\n  import { message } from 'ant-design-vue';\n  import { exportExcelFile } from '@/utils/file/download';\n  import { useMessage } from '@/hooks/web/useMessage';\n  import Dialog from '@/components/Framework/Modal/Dialog.vue';\n  import { TaskExecutor } from '/@/executor/taskExecutor';\n  import {\n    columns,\n    getAccountAction,\n    getDataList,\n    insert,\n    perQuery,\n    getTreeData,\n    getDetailList,\n    getDetailColumns,\n    exportSunriseSunset,\n  } from './sunriseSet';\n  import { enableCache } from '@purge-icons/generated';\n  import { useUserStore } from '/@/store/modules/user';\n\n  const { createConfirm } = useMessage();\n  const searchInfo = reactive<Recordable>({}); // 查询信息\n  const treeData = ref<TreeItem[]>([]); // 左侧电站树数据\n  const selectedNode = ref({}); // 被选择的电站节点\n  const open = ref<boolean>(false);\n  const proOpen = ref<boolean>(false);\n  const insertPercent = ref(0);\n  // 是否可生成数据的全局标记\n  // const disabledCreate = ref<boolean>(false);\n  const detailVisible = ref<boolean>(false);\n  const loadingFlag = ref<boolean>(false);\n  const formState = reactive({\n    startYear: '',\n    endYear: '',\n    stationId: '',\n  });\n  const dialogTitle = ref('');\n  let detailList = ref([]);\n  const detailColumns = getDetailColumns();\n  let yearValue = ref<[Dayjs, Dayjs]>();\n\n  const getDataListParam = async () => {\n    if (selectedNode.value.searchId == null) {\n      return [];\n    }\n    selectedNode.value.sortField = searchInfo.sortField;\n    selectedNode.value.sortOrder = searchInfo.sortOrder;\n    let dataObj = await getDataList(selectedNode.value);\n    return dataObj.result;\n  };\n\n  const [registerTable, { reload }] = useTable({\n    title: '日出日落列表',\n    api: getDataListParam,\n    rowKey: 'id',\n    columns,\n    useSearchForm: false,\n    showTableSetting: true,\n    bordered: true,\n    pagination: false,\n    handleSearchInfoFn(info) {\n      return info;\n    },\n    actionColumn: {\n      title: '操作',\n      dataIndex: 'action',\n    },\n    sortFn: (sortInfo: SorterResult) => {\n      if (sortInfo.order) {\n        searchInfo.sortField = sortInfo.field;\n        searchInfo.sortOrder = sortInfo.order.replace('end', '');\n      } else {\n        searchInfo.sortField = '';\n        searchInfo.sortOrder = '';\n      }\n    },\n  });\n\n  const formItemLayout = {\n    labelCol: {\n      xs: { span: 24 },\n      sm: { span: 4 },\n    },\n    wrapperCol: {\n      xs: { span: 24 },\n      sm: { span: 20 },\n    },\n  };\n\n  // 查询左侧电站树数据\n  async function queryDeptTreeList() {\n    const deptList = await getTreeData({});\n    treeData.value = deptList.result as unknown[] as TreeItem[];\n    let element = deptList.result[0];\n    selectedNode.value.nodeKindId = element.nodeKindId;\n    selectedNode.value.searchId = element.id;\n    reload();\n  }\n\n  function handleCancel() {\n    open.value = false;\n  }\n  // 生成数据\n  function handleCreate() {\n    let crateFlag = useUserStore().getSunSetCreateFlag;\n    if (!crateFlag) {\n      message.info('数据生成中，请稍后操作。');\n      proOpen.value = true;\n      return;\n    }\n    if (selectedNode.value.stationId == null) {\n      message.error('请先选择电站。');\n      return;\n    }\n    open.value = true;\n    let date = new Date(); //获取新的时间\n    //获取当前年份,并且转为字符串\n    let start = date.getFullYear().toString();\n    let end = (date.getFullYear() + 25).toString();\n    formState.startYear = start;\n    formState.endYear = end;\n    yearValue.value = [dayjs(start, 'YYYY'), dayjs(end, 'YYYY')];\n  }\n  function onChangeYear(value, dateString) {\n    formState.startYear = dateString[0];\n    formState.endYear = dateString[1];\n  }\n\n  // 数据生成成功回调函数\n  function handleSuccess() {\n    formState.stationId = selectedNode.value.stationId;\n    insert(formState).then((code) => {});\n    let secondTime = (formState.endYear - formState.startYear + 1) * 40;\n    message.success('数据生成预计耗时：' + secondTime + 's，请稍后刷新列表。');\n    proOpen.value = true;\n    open.value = false;\n    freshProStatus();\n  }\n\n  const taskRefreshID = 'CREATE_SUN_DATA';\n  const freshProStatus = async () => {\n    useUserStore().setSunSetCreateFlag(false);\n    // 启动刷新线程\n    TaskExecutor.getInstance().start();\n    if (!useUserStore().getSunSetCreateFlag) {\n      TaskExecutor.getInstance().pushListTask(taskRefreshID, refreshData, 3000);\n    } else {\n      TaskExecutor.getInstance().removeListTask(taskRefreshID);\n    }\n  };\n\n  // 刷新页面数据\n  const sleep = (ms: number) => {\n    return new Promise((resolve) => setTimeout(resolve, ms));\n  };\n  const refreshData = async () => {\n    try {\n      perQuery(formState).then(async (data) => {\n        if (data.result > 98) {\n          let sleepTime = 2500 / (100 - insertPercent.value);\n          for (let i = insertPercent.value; i <= 100; i++) {\n            await sleep(sleepTime);\n            insertPercent.value = i;\n          }\n          useUserStore().setSunSetCreateFlag(true);\n          proOpen.value = false;\n          insertPercent.value = 0;\n          reload();\n          TaskExecutor.getInstance().removeListTask(taskRefreshID);\n        } else {\n          let sleepTime = 2500 / (data.result - insertPercent.value);\n          for (let i = insertPercent.value; i <= data.result; i++) {\n            await sleep(sleepTime);\n            insertPercent.value = i;\n          }\n        }\n      });\n    } catch (error) {\n      //\n    }\n  };\n\n  // 左侧树状菜单选中事件\n  function handleSelect(nodes = {}) {\n    selectedNode.value.stationId = null;\n    if (nodes.id != null && nodes.nodeKindId == 'station') {\n      selectedNode.value.stationId = nodes.powerStationId;\n    }\n    selectedNode.value.nodeKindId = nodes.nodeKindId;\n    selectedNode.value.searchId = nodes.id;\n    reload();\n  }\n\n  // 擦看详细数据\n  function handleView(record: any) {\n    detailVisible.value = true;\n    let param = { stationId: record.stationId, year: record.year };\n    searchInfo.stationId = record.stationId;\n    searchInfo.year = record.year;\n    dialogTitle.value = record.stationName;\n    getDetailList(param).then((data) => {\n      detailList.value = data.result;\n    });\n  }\n  // 关闭详细数据\n  function detailCancel() {\n    detailVisible.value = false;\n  }\n\n  // 导出到excel\n  function exportExcel() {\n    createConfirm({\n      title: '提示',\n      iconType: 'warning',\n      content: '确定要导出所有记录？',\n      zIndex: 10010,\n      async onOk() {\n        exportSunriseSunset(searchInfo).then((res) => {\n          exportExcelFile(res?.data, dialogTitle.value + '-日出数据.xls');\n        });\n      },\n    });\n  }\n\n  // 启动执行代码\n  onMounted(async () => {\n    await queryDeptTreeList();\n  });\n</script>\n<style lang=\"less\" scoped>\n  .dialog-loading {\n    position: absolute;\n    z-index: 1000 !important;\n    top: 45%;\n    left: 45%;\n  }\n\n  .dialog-mask {\n    position: absolute;\n    z-index: 1001 !important;\n    top: -1px;\n    width: 100%;\n    height: 100%;\n    opacity: 0.3;\n    background: #ccc;\n  }\n\n  .left-tree-layout {\n    flex-shrink: 0;\n    width: 298px;\n    border-radius: 2px;\n  }\n\n  .right-table-layout {\n    width: calc(100% - 308px);\n  }\n\n  .fix-basic-table {\n    padding: 10px;\n\n    :deep(&.vben-basic-table .ant-table-wrapper) {\n      height: 100%;\n      max-height: 100%;\n      padding: 10px 16px 12px;\n      overflow: hidden;\n    }\n\n    :deep(.table-settings) {\n      margin-right: 0;\n    }\n\n    :deep(.table-settings .anticon-setting) {\n      margin-right: 0;\n    }\n  }\n</style>\n"],"names":["taskRefreshID","createConfirm","useMessage","searchInfo","reactive","treeData","ref","selectedNode","open","proOpen","insertPercent","detailVisible","loadingFlag","formState","dialogTitle","detailList","detailColumns","getDetailColumns","yearValue","getDataListParam","__async","getDataList","registerTable","reload","useTable","columns","info","sortInfo","formItemLayout","queryDeptTreeList","deptList","getTreeData","element","handleCancel","handleCreate","useUserStore","message","date","start","end","dayjs","onChangeYear","value","dateString","handleSuccess","insert","code","secondTime","freshProStatus","TaskExecutor","refreshData","sleep","ms","resolve","perQuery","data","sleepTime","i","error","handleSelect","nodes","handleView","record","param","getDetailList","detailCancel","exportExcel","exportSunriseSunset","res","exportExcelFile","onMounted"],"mappings":"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"}