{"version":3,"file":"subareaOverview-040cd218.js","sources":["../../src/views/monitor/PVArea/subareaOverview/subareaOverview.vue"],"sourcesContent":["<!--\n * @Description: 分区总览\n * @Date: 2023-10-08 16:59:48\n * @LastEditTime: 2023-11-02 10:11:03\n * @FilePath: \\ygwl-framework\\src\\views\\monitor\\PVArea\\subareaOverview\\subareaOverview.vue\n-->\n<template>\n  <PageWrapper fixedHeight contentClass=\"flex\" style=\"overflow: hidden\">\n    <div class=\"subarea-overview\">\n      <div class=\"area-box box-style\">\n        <div class=\"area-hearder-box\">\n          <div class=\"station-selector-box\">\n            <Icon class=\"icon-left\" icon=\"mdi:house-city\" color=\"#1890FF\" :size=\"15\" />\n            <Select\n              style=\"width: 200px\"\n              v-model:value=\"curStationId\"\n              show-search\n              :options=\"stationList\"\n              :filter-option=\"filterOption\"\n              :fieldNames=\"{ value: 'id', label: 'name' }\"\n              @change=\"handleChange\"\n            />\n          </div>\n          <div class=\"warning-box\" v-if=\"warningList.length\">\n            <Marquee :style=\"`width: 900px;`\">\n              <div class=\"warning-list\">\n                <span v-if=\"alarmTotal > 0\">告警总览：</span>\n                <div class=\"warning-item\" v-for=\"(item, index) in warningList\" :key=\"index\">\n                  <div v-if=\"item.value > 0\">\n                    <span>{{ item.label }}：</span>\n                    <span class=\"red-text\">{{ item.value }}</span>\n                    <span>{{ item.unit }}</span>\n                  </div>\n                </div>\n              </div>\n            </Marquee>\n          </div>\n          <div class=\"refresh-box\">\n            <Checkbox v-model:checked=\"isAutoRefresh\" @change=\"handleAutoRefresh\"\n              >自动刷新</Checkbox\n            >\n          </div>\n        </div>\n        <div class=\"area-content-box\">\n          <div class=\"area-list-box\">\n            <AreaItem\n              class=\"area-item-layout\"\n              :class=\"{ active: curAreaId === item.areaId }\"\n              v-for=\"(item, index) in areaList\"\n              :key=\"index\"\n              :areaData=\"item\"\n              @click=\"handleSelectArea(item)\"\n              @dblclick=\"handleOpenAreaDialog(item)\"\n            />\n          </div>\n          <div class=\"area-pagination-box\">\n            <div\n              class=\"pagination-item\"\n              :class=\"{ 'current-page': curPage === i }\"\n              v-for=\"i in totalPage\"\n              :key=\"i\"\n              @click=\"handleChangePage(i)\"\n              >{{ i }}</div\n            >\n            <!-- <div class=\"pagination-item current-page\">2</div> -->\n          </div>\n        </div>\n      </div>\n      <div class=\"device-box box-style\">\n        <Tabs v-model:activeKey=\"activeKey\" size=\"large\" @change=\"changeTab\">\n          <TabPane v-for=\"item in deviceTypes\" :key=\"item.deviceType\">\n            <template #tab>\n              <div class=\"tab-bar-item\">\n                {{ item.typeName }}\n                <span class=\"tab-badges\">\n                  <span v-if=\"item.red\" class=\"tab-red\">{{ item.red }}</span>\n                  <span v-if=\"item.orange\" class=\"tab-orange\">{{ item.orange }}</span>\n                </span>\n              </div>\n            </template>\n            <InverterList\n              ref=\"deviceListRef\"\n              :statusOptionsIn=\"\n                statusOptions[item.deviceType] != null\n                  ? statusOptions[item.deviceType]\n                  : statusOptions['other']\n              \"\n              :stationId=\"curStationId\"\n              :areaId=\"curAreaId\"\n              :deviceType=\"item.deviceType\"\n              :typeName=\"item.typeName\"\n              @select-all=\"selectAllStatus\"\n            />\n          </TabPane>\n        </Tabs>\n      </div>\n      <!-- 区域弹框 -->\n      <AreaDialog\n        ref=\"areaDialogRef\"\n        :title=\"areaDialogTitle\"\n        :visible=\"areaDialogVisible\"\n        :data=\"selectedArea\"\n        :areaOptions=\"areaList\"\n        @update:visible=\"areaDialogVisible = $event\"\n      />\n    </div>\n  </PageWrapper>\n</template>\n\n<script lang=\"ts\" setup>\n  import { computed, onMounted, ref } from 'vue';\n  import { Checkbox, Tabs, TabPane, Select } from 'ant-design-vue';\n  import { Vue3SeamlessScroll } from 'vue3-seamless-scroll';\n  import Icon from '@/components/Icon/Icon.vue';\n  import AreaItem from './areaItem.vue';\n  import InverterList from './inverterList.vue';\n  import AreaDialog from './areaDialog.vue';\n  // import CategoryDialog from '/@/components/Framework/Modal/CategoryDialog.vue';\n  import {\n    getStations,\n    getStationAlarm,\n    getAreasByStationId,\n    getDeviceTypes,\n    getAlarmNumByType,\n  } from '../../monitorApi.ts';\n  import { TaskExecutor } from '/@/executor/taskExecutor';\n  import Marquee from '@/components/Framework/Marquee/Marquee.vue';\n\n  const taskRefreshID = 'SUB_AREA_REFRESH';\n  // 选择的电站\n  const curStationId = ref();\n  const curStationName = ref('');\n  const stationList = ref([]);\n  const handleChange = (value: string, option) => {\n    console.log(`selected ${value}`);\n    console.log(`selected`, option);\n    curStationName.value = option.name;\n    getStationAlarmList();\n    curAreaId.value = '';\n    // 区域分页参数设置\n    curPage.value = 1;\n    getAreaData();\n  };\n  const filterOption = (input: string, option: any) => {\n    return option.name.indexOf(input) >= 0;\n  };\n  // 获取电站列表数据\n  const getPowerStationList = async () => {\n    let res = await getStations();\n    if (res?.length) {\n      stationList.value = res;\n      if (!curStationId.value) {\n        curStationId.value = stationList.value[0].id;\n        curStationName.value = stationList.value[0].name;\n        getAreaData();\n      }\n    }\n  };\n  // const handleCategoryConfirm = (node) => {\n  //   console.info('分类Dialog确定，返回结果：' + JSON.stringify(node));\n  // };\n\n  // 设备类型数据\n  const deviceTypes = ref([]);\n  // tab\n  const activeKey = ref('StringFormation');\n  // 查询设备类型\n  const getDeviceType = async () => {\n    let res = await getDeviceTypes({\n      stationId: curStationId.value,\n      areaId: curAreaId.value,\n      deviceCategory: 'PvAreaDev',\n    });\n    let result = await getAlarmNumByType({\n      stationId: curStationId.value,\n      areaId: curAreaId.value,\n      deviceCategory: 'PvAreaDev',\n    });\n    if (res != null) {\n      deviceTypes.value = res;\n      let types = res.map((item) => item.deviceType);\n      if (!types.includes(activeKey.value)) {\n        activeKey.value = res[0].deviceType;\n      }\n      if (result != null) {\n        deviceTypes.value.forEach((element) => {\n          element.red = result[element.deviceType].red;\n          element.orange = result[element.deviceType].orange;\n        });\n      }\n    }\n  };\n\n  // 告警数据\n  const warningList = ref([]);\n  const areaList = ref([]);\n  const curPage = ref(1);\n  const pageSize = 16;\n  const totalPage = ref(1);\n  const curAreaId = ref('');\n  const alarmType = {\n    stringFormationErrorNum: ['组串', '条'],\n    trackingAxis: ['跟踪轴', '台'],\n    communicateFailureNum: ['通讯故障', '台'],\n    inverter: ['逆变器', '台'],\n    combinder: ['汇流箱', '台'],\n    dataCollector: ['数采', '台'],\n    transFormer: ['箱变', '台'],\n    transformerMeter: ['箱变电表', '台'],\n  };\n\n  const alarmTotal = ref();\n  const getStationAlarmList = async () => {\n    let res = await getStationAlarm({ stationId: curStationId.value });\n    if (Object.keys(res)?.length) {\n      let tempList = [];\n      let totalTemp = 0;\n      for (let key in res) {\n        if (res[key] > 0) {\n          tempList.push({\n            label: alarmType[key][0],\n            value: res[key],\n            unit: alarmType[key][1],\n          });\n          totalTemp = totalTemp + res[key];\n        }\n      }\n      alarmTotal.value = totalTemp;\n      // 当待滚动数据数量较少时，无法触发滚动，需填充数据\n      // if (tempList && tempList.length <= 5) {\n      //   tempList = tempList.concat(tempList, tempList, tempList);\n      // }\n      warningList.value = tempList;\n    }\n  };\n\n  const getAreaData = async (refreshFlag: boolean) => {\n    let param = { pageSize: pageSize, pageNo: curPage.value, stationId: curStationId.value };\n    let res = await getAreasByStationId(param);\n    areaList.value = [];\n    totalPage.value = 1;\n    if (!isAutoRefresh.value) {\n      curAreaId.value = '';\n    }\n    if (res.list.length > 0) {\n      totalPage.value = Math.ceil(res.total / pageSize);\n      console.log('totalPage.value', totalPage.value);\n      // for (let i = 0; i < totalPage.value; i++) {\n      //   let startIndex = i * pageSize;\n      //   let endIndex = Math.min((i + 1) * pageSize, res.total);\n      //   areaList.value.push(res.list.slice(startIndex, endIndex));\n      // }\n\n      areaList.value = res.list;\n      console.log('areaList', areaList.value);\n      if (curAreaId.value == '') {\n        curAreaId.value = areaList.value[0].areaId;\n        selectedArea.value = areaList.value[0];\n        areaDialogRef.value.loadIndexData();\n      }\n      getDeviceType();\n    }\n  };\n  // 区域翻页\n  const handleChangePage = (page) => {\n    curPage.value = page;\n    getAreaData();\n  };\n  // 选择区域\n  const handleSelectArea = (areaItem) => {\n    curAreaId.value = areaItem.areaId;\n    console.log('curAreaId', curAreaId.value);\n    selectAllStatus();\n    getDeviceType();\n  };\n\n  // 区域弹框\n  const areaDialogVisible = ref(false);\n  const areaDialogTitle = ref('');\n  const selectedArea = ref({});\n  const areaDialogRef = ref();\n  // 打开区域弹框\n  const handleOpenAreaDialog = (areaItem) => {\n    areaDialogVisible.value = true;\n    areaDialogTitle.value = curStationName.value + '/' + areaItem.areaName;\n    selectedArea.value = areaItem;\n    areaDialogRef.value.loadIndexData();\n  };\n  const deviceListRef = ref();\n\n  async function selectAllStatus() {\n    let types = deviceTypes.value;\n    let itemIndex;\n    types.forEach((item, index) => {\n      if (activeKey.value == item.deviceType) {\n        itemIndex = index;\n      }\n    });\n\n    const element = deviceListRef.value[itemIndex];\n    if (element) {\n      element.selectAll();\n    }\n  }\n  const changeTab = async () => {\n    selectAllStatus();\n  };\n\n  // 自动刷新\n  const isAutoRefresh = ref(true);\n\n  // 设备状态选项\n  const statusOptions = ref({\n    StringFormation: [\n      { valueRef: 'normalNum', label: '正常', value: 'normal', number: 0 },\n      { valueRef: 'haltNum', label: '停机', value: 'halt', number: 0 },\n      { valueRef: 'alarmNum', label: '告警', value: 'alarm', number: 0 },\n      { valueRef: 'interruptNum', label: '通讯中断', value: 'interrupt', number: 0 },\n    ],\n    Concentrate: [\n      { valueRef: 'normalNum', label: '正常', value: 'normal', number: 0 },\n      { valueRef: 'haltNum', label: '停机', value: 'halt', number: 0 },\n      { valueRef: 'alarmNum', label: '告警', value: 'alarm', number: 0 },\n      { valueRef: 'interruptNum', label: '通讯中断', value: 'interrupt', number: 0 },\n    ],\n    CombinerDc: [\n      { valueRef: 'normalNum', label: '正常', value: 'normal', number: 0 },\n      { valueRef: 'haltNum', label: '停机', value: 'halt', number: 0 },\n      { valueRef: 'alarmNum', label: '告警', value: 'alarm', number: 0 },\n      { valueRef: 'interruptNum', label: '通讯中断', value: 'interrupt', number: 0 },\n    ],\n    other: [\n      { valueRef: 'normalNum', label: '正常', value: 'normal', number: 0 },\n      { valueRef: 'alarmNum', label: '告警', value: 'alarm', number: 0 },\n      { valueRef: 'interruptNum', label: '通讯中断', value: 'interrupt', number: 0 },\n    ],\n  });\n\n  // const alarmItem = (value) => {\n  //   deviceTypes.value.forEach((item) => {\n  //     if (item.deviceType == value.deviceType) {\n  //       item.alarmNum = value.alarmNum;\n  //     }\n  //   });\n  //   console.log(value);\n  // };\n\n  // 刷新页面数据\n  const refreshData = async () => {\n    // await getPowerStationList();\n    console.info('refreshData:', Math.random());\n    try {\n      await getAreaData();\n      await getStationAlarmList();\n      let types = deviceTypes.value;\n      let itemIndex;\n      types.forEach((item, index) => {\n        if (activeKey.value == item.deviceType) {\n          itemIndex = index;\n        }\n      });\n      if (deviceListRef.value) {\n        deviceListRef.value[itemIndex].getDeviceData();\n      }\n    } catch (error) {\n      //\n    }\n  };\n\n  // 控制自动刷新函数\n  const handleAutoRefresh = (event) => {\n    try {\n      if (event?.target?.checked) {\n        // 如果勾选自动刷新，则将刷新函数加入线程，否则移除线程\n        TaskExecutor.getInstance().pushListTask(taskRefreshID, refreshData, 5000);\n      } else {\n        TaskExecutor.getInstance().removeListTask(taskRefreshID);\n      }\n    } catch (error) {\n      //\n    }\n  };\n\n  onMounted(async () => {\n    await getPowerStationList();\n    getStationAlarmList();\n    await getAreaData();\n    // 启动刷新线程\n    TaskExecutor.getInstance().start();\n    if (isAutoRefresh.value) {\n      TaskExecutor.getInstance().pushListTask(taskRefreshID, refreshData, 5000);\n    }\n  });\n</script>\n\n<style lang=\"less\">\n  @import '../../style/themes.less';\n</style>\n\n<style lang=\"less\" scoped>\n  .subarea-overview {\n    height: 100%;\n    padding: 10px;\n    overflow-x: hidden;\n    overflow-y: scroll;\n\n    .box-style {\n      margin-bottom: 10px;\n      border-radius: 2px;\n      // background-color: #fff;\n    }\n\n    .area-hearder-box {\n      display: flex;\n      align-items: center;\n      justify-content: space-between;\n      height: 54px;\n      padding: 0 16px;\n      border-bottom-width: 1px;\n      border-bottom-style: solid;\n\n      .station-selector-box {\n        display: flex;\n        align-items: center;\n\n        :deep(.ant-select) {\n          font-size: 16px;\n        }\n\n        :deep(.ant-select:not(.ant-select-customize-input) .ant-select-selector) {\n          border: none;\n        }\n\n        :deep(\n            .ant-select-focused:not(.ant-select-disabled).ant-select:not(.ant-select-customize-input)\n              .ant-select-selector\n          ) {\n          box-shadow: none;\n        }\n      }\n\n      .warning-box {\n        width: 900px;\n        overflow: hidden;\n\n        .warning-list {\n          display: flex;\n        }\n\n        .warning-item {\n          display: flex;\n          align-items: center;\n          margin-right: 10px;\n          font-size: 14px;\n\n          .red-text {\n            color: #ff4d4f;\n          }\n        }\n      }\n\n      .refresh-box {\n        width: 90px;\n      }\n    }\n\n    .area-content-box {\n      padding-bottom: 16px;\n\n      .area-list-box {\n        margin-right: -20px;\n        padding: 10px 16px 0;\n        overflow: hidden;\n      }\n\n      .area-item-layout {\n        margin: 0 20px 10px 0;\n        float: left;\n        cursor: pointer;\n      }\n\n      .area-pagination-box {\n        text-align: center;\n\n        .pagination-item {\n          display: inline-block;\n          width: 30px;\n          height: 30px;\n          margin-right: 10px;\n          border-width: 1px;\n          border-style: solid;\n          border-radius: 50%;\n          font-size: 14px;\n          line-height: 28px;\n          cursor: pointer;\n\n          &:last-child {\n            margin-right: 0;\n          }\n\n          &.current-page {\n            border-color: #1890ff;\n            opacity: 0.9;\n            background-color: #1890ff;\n            color: #fff;\n          }\n        }\n      }\n    }\n\n    .device-box {\n      :deep(.ant-tabs-large > .ant-tabs-nav .ant-tabs-tab) {\n        padding: 16px 4px;\n        line-height: 22px;\n      }\n\n      :deep(.ant-tabs-nav) {\n        padding-left: 15px;\n      }\n\n      .tab-bar-item {\n        position: relative;\n\n        .tab-badges {\n          position: absolute;\n          top: -10px;\n          left: 100%;\n        }\n\n        .tab-red {\n          display: inline-block;\n          min-width: 20px;\n          height: 20px;\n          padding: 0 4px;\n          border-radius: 10px;\n          background-color: #ff4d4f;\n          color: #fffefe;\n          font-size: 12px;\n          line-height: 20px;\n          text-align: center;\n        }\n\n        .tab-orange {\n          display: inline-block;\n          min-width: 20px;\n          height: 20px;\n          padding: 0 4px;\n          border-radius: 10px;\n          background-color: #f5b810;\n          color: #fffefe;\n          font-size: 12px;\n          line-height: 20px;\n          text-align: center;\n        }\n      }\n    }\n  }\n</style>\n"],"names":["taskRefreshID","pageSize","curStationId","ref","curStationName","stationList","handleChange","value","option","getStationAlarmList","curAreaId","curPage","getAreaData","filterOption","input","getPowerStationList","__async","res","getStations","deviceTypes","activeKey","getDeviceType","getDeviceTypes","result","getAlarmNumByType","item","element","warningList","areaList","totalPage","alarmType","alarmTotal","getStationAlarm","_a","tempList","totalTemp","key","refreshFlag","param","getAreasByStationId","isAutoRefresh","selectedArea","areaDialogRef","handleChangePage","page","handleSelectArea","areaItem","selectAllStatus","areaDialogVisible","areaDialogTitle","handleOpenAreaDialog","deviceListRef","types","itemIndex","index","changeTab","statusOptions","refreshData","error","handleAutoRefresh","event","TaskExecutor","onMounted"],"mappings":"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"}