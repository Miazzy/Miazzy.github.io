{"version":3,"file":"GenerationRanking-36789146.js","sources":["../../src/views/da/stationOperation/monitor/GenerationRanking.vue"],"sourcesContent":["<template>\n  <div class=\"generation-ranking\">\n    <SmallModule title=\"逆变器发电排行\">\n      <!-- <template #titleRight>\n        <div class=\"right-title-layout\">\n          <a-radio-group\n            class=\"operation-screen-radio-group\"\n            v-model:value=\"searchInfo.deviceType\"\n            size=\"small\"\n            @change=\"handleButtonChange\"\n          >\n            <a-radio-button value=\"StringFormation\">组串式</a-radio-button>\n            <a-radio-button value=\"Concentrate\">集中式</a-radio-button>\n          </a-radio-group>\n        </div>\n      </template> -->\n      <template #content>\n        <div class=\"content-layout\">\n          <div style=\"transform: scale(0.85); transform-origin: 0 0\">\n            <EchartLineBarChart\n              :data=\"inverterRankData\"\n              :width=\"`26.14vw`\"\n              :height=\"`28.06vh`\"\n              :category=\"inverterRankData.categories\"\n              ybgcolor=\"#01B7D730\"\n              xAxisLabelInterval=\"auto\"\n            />\n          </div>\n        </div>\n      </template>\n    </SmallModule>\n  </div>\n</template>\n\n<script lang=\"ts\" setup>\n  import { ref, reactive, UnwrapRef, onMounted } from 'vue';\n  import SmallModule from '/@/components/Framework/OperationScreen/SmallModule.vue';\n  import EchartLineBarChart from '/@/components/Framework/Chart/EchartLineBarChart.vue';\n\n  import { assign } from 'lodash-es';\n  import { getInverterRankData } from './data';\n  //搜索参数\n  const searchInfo: UnwrapRef<any> = reactive({});\n  interface Props {\n    monitorSearchInfo?: {};\n  }\n  const props = withDefaults(defineProps<Props>(), {});\n\n  onMounted(() => {\n    searchInfo.deviceType = 'Concentrate';\n    assign(searchInfo, props.monitorSearchInfo);\n    queryInverterRankData();\n  });\n\n  const handleButtonChange = (e: Event) => {\n    searchInfo.deviceType = e.target.value;\n    queryInverterRankData();\n  };\n\n  const inverterRankData = ref({\n    lineData: [],\n    categories: [],\n  });\n\n  const queryInverterRankData = async () => {\n    let data = await getInverterRankData(searchInfo);\n    if (data.result) {\n      if (data.result.lineData.length) {\n        inverterRankData.value.lineData[0] = data.result.lineData;\n      } else {\n        inverterRankData.value.lineData = [];\n      }\n      inverterRankData.value.categories = data.result.categories;\n    }\n  };\n</script>\n\n<style lang=\"less\" scoped>\n  // .right-title-layout {\n  //   padding: 0.2rem 0.16rem 0 0;\n  // }\n\n  .content-layout {\n    padding: 0 0.14rem;\n  }\n</style>\n"],"names":["searchInfo","reactive","onMounted","assign","props","queryInverterRankData","inverterRankData","ref","__async","data","getInverterRankData"],"mappings":"61BA0CQA,EAA6BC,EAAS,CAAA,CAAE,EAM9CC,EAAU,IAAM,CACdF,EAAW,WAAa,cACjBG,EAAAH,EAAYI,EAAM,iBAAiB,EACpBC,GAAA,CACvB,EAOD,MAAMC,EAAmBC,EAAI,CAC3B,SAAU,CAAC,EACX,WAAY,CAAC,CAAA,CACd,EAEKF,EAAwB,IAAYG,EAAA,sBACpC,IAAAC,EAAO,MAAMC,EAAoBV,CAAU,EAC3CS,EAAK,SACHA,EAAK,OAAO,SAAS,OACvBH,EAAiB,MAAM,SAAS,CAAC,EAAIG,EAAK,OAAO,SAEhCH,EAAA,MAAM,SAAW,GAEnBA,EAAA,MAAM,WAAaG,EAAK,OAAO,WAClD"}