{"version":3,"file":"infoKind-79e9629d.js","sources":["../../src/views/oa/info/infokind/infoKind.ts","../../src/views/oa/info/infokind/infoKind.vue"],"sourcesContent":["import { defHttp } from '/@/utils/http/axios';\nimport { BasicColumn } from '/@/components/Table';\nimport { reactive } from 'vue';\n\nenum Api {\n  getTreeTypeUrl = '/oa/infoKind/type/getTree',\n  getTypeUrl = '/oa/infoKind/type/get',\n  createTypeUrl = '/oa/infoKind/type/create',\n  updateTypeUrl = '/oa/infoKind/type/update',\n  deleteTypeUrl = '/oa/infoKind/type/delete',\n\n  listIdexUrl = '/oa/infoKind/page',\n  getIndexUrl = '/oa/infoKind/get',\n  createIndexUrl = '/oa/infoKind/create',\n  updateIndexUrl = '/oa/infoKind/update',\n  updateStatusIndexUrl = '/oa/infoKind/updateStatus',\n  updateBatchSortIndexUrl = '/oa/infoKind/updateBatchSort',\n  deleteIndexUrl = '/oa/infoKind/delete',\n  exportExcelIndexUrl = '/oa/infoKind/exportExcel',\n  detailList = '/oa/infoKind/detailList',\n  saveDetail = '/oa/infoKind/saveDetail',\n  deleteDetailUrl = '/oa/infoKind/deleteDetail',\n  LIST_ORG_TREE = '/system/org/list-tree',\n}\n\nexport function getIndexListColumns(): BasicColumn[] {\n  return [\n    {\n      title: '编码',\n      dataIndex: 'code',\n      width: 100,\n      resizable: true,\n      sorter: true,\n    },\n    {\n      title: '大类',\n      dataIndex: 'kind',\n      width: 100,\n      customRender: ({ text }) => {\n        return text.split('-')[0];\n      },\n      resizable: true,\n      sorter: true,\n    },\n    {\n      title: '小类',\n      dataIndex: 'infoKindTypeName',\n      width: 100,\n      resizable: true,\n      sorter: true,\n    },\n    {\n      title: '名称',\n      dataIndex: 'name',\n      width: 120,\n      resizable: true,\n      sorter: true,\n      headAlign: 'center',\n      align: 'left',\n    },\n    {\n      title: '是否启用',\n      dataIndex: 'status',\n      width: 120,\n      resizable: true,\n      sorter: true,\n    },\n    {\n      title: '排序',\n      dataIndex: 'sort',\n      width: 120,\n      editRow: true,\n      resizable: true,\n      sorter: true,\n    },\n  ];\n}\n\n// 组织树数据\nexport const getTreeData = (params) =>\n  defHttp.get(\n    {\n      url: Api.getTreeTypeUrl,\n      params,\n    },\n    {},\n  );\n\n// 获取信息分类\nexport const getType = (params) =>\n  defHttp.get(\n    {\n      url: Api.getTypeUrl,\n      params,\n    },\n    {},\n  );\n\n// 新增信息分类\nexport const insertType = (params) =>\n  defHttp.post(\n    {\n      url: Api.createTypeUrl,\n      params,\n    },\n    {},\n  );\n\n// 修改信息分类\nexport const updateType = (params) =>\n  defHttp.put(\n    {\n      url: Api.updateTypeUrl,\n      params,\n    },\n    {},\n  );\n\nexport const saveType = (params) => {\n  if (!params.id) {\n    return insertType(params);\n  }\n  return updateType(params);\n};\n\n// 删除信息分类\nexport const deleteType = (params) =>\n  defHttp.delete(\n    {\n      url: Api.deleteTypeUrl,\n      params,\n    },\n    {},\n  );\n\n// 获取信息列表\nexport const getIndexList = (params) =>\n  defHttp.get(\n    {\n      url: Api.listIdexUrl,\n      params,\n    },\n    {},\n  );\n\n// 获取信息\nexport const getIndex = (params) =>\n  defHttp.get(\n    {\n      url: Api.getIndexUrl,\n      params,\n    },\n    {},\n  );\n\n// 新增信息\nexport const insertIndex = (params) =>\n  defHttp.post(\n    {\n      url: Api.createIndexUrl,\n      params,\n    },\n    {},\n  );\n\n// 修改信息\nexport const updateIndex = (params) =>\n  defHttp.put(\n    {\n      url: Api.updateIndexUrl,\n      params,\n    },\n    {},\n  );\n\nexport const saveDetail = (params) =>\n  defHttp.post(\n    {\n      url: Api.saveDetail,\n      params,\n    },\n    {},\n  );\n\nexport const saveData = (params) => {\n  if (!params.id) {\n    return insertIndex(params);\n  }\n  return updateIndex(params);\n};\n\n// 启用、禁用信息\nexport const updateStatusIndex = (params) =>\n  defHttp.put(\n    {\n      url: Api.updateStatusIndexUrl,\n      params,\n    },\n    {},\n  );\n\n// 保存信息排序\nexport const updateBatchSortIndex = (params) =>\n  defHttp.put(\n    {\n      url: Api.updateBatchSortIndexUrl,\n      params,\n    },\n    {},\n  );\n\n// 删除信息\nexport const deleteIndex = (params) =>\n  defHttp.delete(\n    {\n      url: Api.deleteIndexUrl,\n      params,\n    },\n    {},\n  );\n\n// 导出信息\nexport const exportExcelIndex = (params) =>\n  defHttp.download(\n    {\n      url: Api.exportExcelIndexUrl,\n      params,\n    },\n    {},\n  );\n\n//明细\nexport const getDetailList = (params) =>\n  defHttp.post(\n    {\n      url: Api.detailList,\n      params,\n    },\n    {},\n  );\n\nexport const deleteDetail = (params) =>\n  defHttp.delete(\n    {\n      url: Api.deleteDetailUrl,\n      params,\n    },\n    {},\n  );\n\n// 获取组织树\nexport const getOrgTree = (params) =>\n  defHttp.post(\n    {\n      url: Api.LIST_ORG_TREE,\n      params,\n    },\n    {},\n  );\nexport const formIndexState = reactive({\n  id: '',\n  code: '',\n  name: '',\n  status: '1',\n  infoKindType: '',\n  infoKindTypeName: '',\n  sort: '',\n  isApprove: '',\n  isDefaultRead: '',\n  createTime: '',\n  updateTime: '',\n  creator: '',\n  updater: '',\n});\n\n// 操作附件\nexport const fileColumns: BasicColumn[] = [\n  {\n    title: '附件类型',\n    dataIndex: 'type',\n    width: 220,\n    align: 'left',\n  },\n  {\n    title: '附件',\n    dataIndex: 'name',\n    width: 100,\n  },\n];\n\n//授权\nexport const detailColumns: BasicColumn[] = [\n  {\n    title: 'ID',\n    dataIndex: 'id',\n    defaultHidden: true,\n  },\n  {\n    title: '组织',\n    dataIndex: 'fullName',\n    width: 300,\n  },\n  {\n    title: '类型',\n    dataIndex: 'orgKindId',\n    width: 100,\n  },\n];\n\nexport const detailTableProps: any = {\n  title: '授权',\n  pagination: false,\n  striped: false,\n  useSearchForm: false,\n  showTableSetting: false,\n  bordered: true,\n  showIndexColumn: true,\n  canResize: false,\n  actionColumn: {\n    width: 80,\n    title: '操作',\n    dataIndex: 'action',\n  },\n};\n","<template>\n  <PageWrapper dense contentFullHeight fixedHeight contentClass=\"flex\" style=\"position: relative\">\n    <!-- 信息分类树 -->\n    <CommonTree\n      ref=\"treeRef\"\n      title=\"信息分类\"\n      style=\"font-size: 1px\"\n      @select=\"handleSelect\"\n      :value=\"treeData\"\n      class=\"left-tree-layout\"\n      :toolbar=\"true\"\n      :isShowOperationBtns=\"true\"\n      :fieldNames=\"{ key: 'id', title: 'name' }\"\n      @add=\"handleTreeAdd\"\n      @edit=\"handleTreeEdit\"\n      @delete=\"handleTreeDelete\"\n      @refresh=\"handleTreeRefresh\"\n    />\n    <!-- 数据表格 -->\n    <div class=\"right-table-layout\">\n      <div class=\"top-table-layout\">\n        <BasicTable\n          class=\"fix-basic-table\"\n          @register=\"registerTable\"\n          :searchInfo=\"searchInfo\"\n          :scroll=\"{ y: topTableHeight }\"\n          @resize-column=\"(w, col) => (col.width = w)\"\n        >\n          <template #toolbar>\n            <a-button type=\"primary\" :preIcon=\"IconEnum.ADD\" @click=\"handleCreateIndex\"\n              >添加</a-button\n            >\n            <a-button type=\"primary\" :preIcon=\"IconEnum.EDIT\" @click=\"handleUpdateIndex\"\n              >修改</a-button\n            >\n            <a-button class=\"red-btn\" :preIcon=\"IconEnum.DELETE\" @click=\"handleDeleteIndex\"\n              >删除</a-button\n            >\n            <a-button type=\"primary\" @click=\"handleUpdateSortIndex\">保存排序</a-button>\n            <a-button class=\"green-btn\" :preIcon=\"IconEnum.ENABLE\" @click=\"handleEnableIndex\"\n              >启用</a-button\n            >\n            <a-button class=\"grey-btn\" :preIcon=\"IconEnum.DISABLE\" @click=\"handleDisableIndex\"\n              >禁用</a-button\n            >\n          </template>\n          <template #bodyCell=\"{ column, text, record }\">\n            <template v-if=\"column.dataIndex === 'status'\">\n              <span style=\"color: #19be6b\" v-if=\"text == 1\">启用</span>\n              <span style=\"color: red\" v-if=\"text == 0\">禁用</span>\n            </template>\n            <template v-if=\"column.dataIndex === 'sort'\">\n              <a-input-number\n                v-model:value=\"record[column.dataIndex]\"\n                :min=\"1\"\n                :max=\"10000\"\n                :step=\"1\"\n                :precision=\"0\"\n                status=\"error\"\n              />\n            </template>\n          </template>\n        </BasicTable>\n      </div>\n      <div class=\"bottom-table-layout\">\n        <!-- <a-card title=\"授权\" :bordered=\"false\"> -->\n        <BasicTable\n          class=\"fix-basic-table\"\n          @register=\"registerTaskTable\"\n          :scroll=\"{ y: bottomTableHeight }\"\n        >\n          <template #toolbar>\n            <a-button type=\"primary\" :preIcon=\"IconEnum.ADD\" @click=\"handleAddItem()\">\n              {{ t('common.action.create') }}\n            </a-button>\n          </template>\n          <template #bodyCell=\"{ column, text, record }\">\n            <template v-if=\"column.dataIndex === 'fullName'\">\n              <a-tree-select\n                v-model:value=\"record[column.dataIndex]\"\n                show-search\n                style=\"width: 100%\"\n                :dropdown-style=\"{ maxHeight: '400px', overflow: 'auto' }\"\n                allow-clear\n                tree-default-expand-all\n                :tree-data=\"orgTreeData\"\n                tree-node-filter-prop=\"label\"\n                @change=\"handleChangeTree(record)\"\n              />\n            </template>\n\n            <template v-if=\"column.dataIndex === 'orgKindId'\">\n              <span v-if=\"text == 'ogn'\">机构</span>\n              <span v-if=\"text == 'dpt'\">部门</span>\n              <span v-if=\"text == 'psm'\">人员</span>\n              <span v-if=\"text == 'pos'\">岗位</span>\n            </template>\n\n            <template v-if=\"column.dataIndex === 'action'\">\n              <TableAction\n                :actions=\"[\n                  {\n                    tooltip: '删除',\n                    color: 'error',\n                    icon: 'ant-design:delete-outlined',\n                    ifShow: true,\n                    onClick: handleDeleteItem.bind(null, record),\n                  },\n                ]\"\n              />\n            </template>\n          </template>\n        </BasicTable>\n        <!-- </a-card> -->\n      </div>\n    </div>\n    <!-- 信息分类弹窗 -->\n    <Dialog\n      v-model:visible=\"modal.open.type\"\n      :title=\"modal.title.type\"\n      @ok=\"handleSuccess\"\n      @cancel=\"cancel\"\n      :height=\"250\"\n      :width=\"600\"\n    >\n      <a-form ref=\"modalFormRef\" :model=\"formState\" name=\"userForm\">\n        <a-row :gutter=\"24\">\n          <a-col v-show=\"true\" :span=\"22\">\n            <a-form-item label=\"所属类型\" name=\"parentName\" :labelCol=\"{ span: 5 }\">\n              <a-input v-model:value=\"formState.parentName\" :disabled=\"true\" />\n            </a-form-item>\n          </a-col>\n        </a-row>\n        <a-row :gutter=\"24\">\n          <a-col v-show=\"true\" :span=\"22\">\n            <a-form-item\n              label=\"信息类型\"\n              name=\"name\"\n              :labelCol=\"{ span: 5 }\"\n              :rules=\"[{ required: true, max: 30 }]\"\n            >\n              <a-input v-model:value=\"formState.name\" :maxlength=\"30\" :disabled=\"disabledType\" />\n            </a-form-item>\n          </a-col>\n        </a-row>\n      </a-form>\n    </Dialog>\n\n    <!--信息类型弹窗-->\n    <Dialog\n      v-model:visible=\"modal.open.index\"\n      :title=\"modal.title.index\"\n      @ok=\"handleIndexSuccess\"\n      @cancel=\"cancel\"\n      :height=\"450\"\n      :width=\"800\"\n    >\n      <a-form ref=\"modalIndexFormRef\" :model=\"formIndexState\" name=\"userIndexForm\">\n        <a-row :gutter=\"24\">\n          <a-col v-show=\"true\" :span=\"22\">\n            <a-form-item\n              label=\"上级类型\"\n              name=\"infoKindTypeName\"\n              :labelCol=\"{ span: 5 }\"\n              :rules=\"[{ required: false }]\"\n            >\n              <a-input\n                v-model:value=\"formIndexState.infoKindTypeName\"\n                disabled\n                style=\"color: #0e7fe9\"\n              />\n            </a-form-item>\n          </a-col>\n        </a-row>\n        <a-row :gutter=\"24\">\n          <a-col v-show=\"true\" :span=\"22\">\n            <a-form-item\n              label=\"编码\"\n              name=\"code\"\n              :labelCol=\"{ span: 5 }\"\n              :rules=\"[{ required: false }]\"\n            >\n              <a-input v-model:value=\"formIndexState.code\" :min=\"1\" :max=\"100000\" disabled />\n            </a-form-item>\n          </a-col>\n        </a-row>\n        <a-row :gutter=\"24\">\n          <a-col v-show=\"true\" :span=\"22\">\n            <a-form-item\n              label=\"名称\"\n              name=\"name\"\n              :labelCol=\"{ span: 5 }\"\n              :rules=\"[{ required: true, message: '请填写名称' }]\"\n            >\n              <a-input v-model:value=\"formIndexState.name\" :min=\"1\" :max=\"100000\" />\n            </a-form-item>\n          </a-col>\n        </a-row>\n        <a-row :gutter=\"24\">\n          <a-col v-show=\"true\" :span=\"22\">\n            <a-form-item\n              name=\"status\"\n              label=\" 是否启用\"\n              :labelCol=\"{ span: 5 }\"\n              :rules=\"[{ required: true, message: '请选择是否启用' }]\"\n            >\n              <DictSelectBox\n                :type=\"`yes_or_no`\"\n                @change=\"`()=> formIndexState.status = value`\"\n                v-model:value=\"formIndexState.status\"\n              />\n            </a-form-item>\n          </a-col>\n        </a-row>\n        <a-row :gutter=\"24\">\n          <a-col v-show=\"true\" :span=\"22\">\n            <a-form-item\n              label=\"排序\"\n              name=\"sort\"\n              :labelCol=\"{ span: 5 }\"\n              :rules=\"[{ required: true, message: '请填写排序' }]\"\n            >\n              <a-input-number v-model:value=\"formIndexState.sort\" />\n            </a-form-item>\n          </a-col>\n        </a-row>\n      </a-form>\n    </Dialog>\n    <!-- 新增弹窗 -->\n    <div v-if=\"loadingFlag\" class=\"dialog-mask\"></div>\n  </PageWrapper>\n</template>\n<script lang=\"ts\" setup>\n  import Dialog from '@/components/Framework/Modal/Dialog.vue';\n  import type { FormProps } from '/@/components/Form/src/types/form';\n  import { onMounted, reactive, ref, toRaw, computed } from 'vue';\n  import {\n    BasicTable,\n    useTable,\n    EditRecordRow,\n    TableAction,\n    SorterResult,\n  } from '/@/components/Table';\n  import { TreeItem } from '/@/components/Tree';\n  import { PageWrapper } from '/@/components/Page';\n  import CommonTree from '@/components/Framework/Tree/CommonTree.vue';\n  import { message, FormInstance } from 'ant-design-vue';\n  import { IconEnum } from '@/enums/appEnum';\n  import {\n    getTreeData,\n    getType,\n    saveType,\n    deleteType,\n    getIndexListColumns,\n    getIndex,\n    getIndexList,\n    deleteIndex,\n    formIndexState,\n    saveData,\n    updateStatusIndex,\n    updateBatchSortIndex,\n    detailColumns,\n    detailTableProps,\n    getDetailList,\n    getOrgTree,\n    saveDetail,\n    deleteDetail,\n  } from './infoKind';\n  import { assign } from 'lodash-es';\n  import { trim } from 'xe-utils';\n  import { useRouter } from 'vue-router';\n  import { useI18n } from '@/hooks/web/useI18n';\n  import { useMessage } from '@/hooks/web/useMessage';\n  import DictSelectBox from '@/components/Framework/Combox/DictSelectBox.vue';\n  import type { TreeSelectProps } from 'ant-design-vue';\n  import { useDictStoreWithOut } from '@/store/modules/dict';\n\n  const dictStore = useDictStoreWithOut();\n  const orgTreeData = ref<TreeSelectProps['treeData']>();\n  const { t } = useI18n();\n  const { createConfirm } = useMessage();\n\n  const initOrgTree = async () => {\n    const typeList = await getOrgTree({\n      orgKindIds: 'ogn,dpt,pos,psm',\n      showPosition: true,\n      status: 1,\n    });\n    orgTreeData.value = dig(typeList.result);\n  };\n\n  function handleChangeTree(record) {\n    record.bizId = checkedKeys.value['0'];\n    saveDetail(record).then((data) => {\n      initTableData();\n    });\n  }\n\n  function dig(data) {\n    const list: TreeSelectProps['treeData'] = [];\n    for (let i = 0; i < data.length; i++) {\n      const item = data[i];\n      const treeNode: TreeSelectProps['treeData'][number] = {\n        label: item.name,\n        value: item.id,\n        orgKindId: item.orgKindId,\n        fullId: item.fullId,\n        fullName: item.fullName,\n        orgUnitId: item.id,\n        orgUnitName: item.name,\n      };\n\n      if (item.children && item.children.length > 0) {\n        treeNode.children = dig(item.children);\n      }\n\n      list.push(treeNode);\n    }\n    return list;\n  }\n  // 查询信息\n  const searchInfo = reactive<any>({ infoKindType: '' });\n  // 左侧树数据\n  const treeData = ref<TreeItem[]>([]);\n  // 被选择的树节点\n  const selectedNode = ref({\n    typeId: '',\n    fullName: '',\n    id: '',\n    name: '',\n    codePre: '',\n    existChildNode: false,\n  });\n  const router = useRouter();\n  const modal = reactive({\n    open: {\n      type: ref<boolean>(false),\n      index: ref<boolean>(false),\n    },\n    title: {\n      type: ref<string>(''),\n      index: ref<string>(''),\n    },\n  });\n  const loadingFlag = ref<boolean>(false);\n  const disabledType = ref<boolean>(false);\n  const checkedKeys = ref<Array<string | number>>([]);\n  const indexColumn = getIndexListColumns();\n  const formState = reactive({\n    id: '',\n    name: '',\n    fullId: '',\n    codePre: '',\n    infoKindTypeName: '',\n    infoKindType: '',\n    fullName: '',\n    parentId: '',\n    checkItem: '',\n    description: '',\n    parentName: '',\n    parentFullId: '',\n    parentFullName: '',\n  });\n\n  const formDetail = reactive({\n    id: '',\n    bizId: '',\n    kindId: '',\n    orgKindId: '',\n    orgUnitId: '',\n    orgUnitName: '',\n    fullId: '',\n    fullName: '',\n  });\n  const treeRef = ref();\n  const modalFormRef = ref<FormInstance>();\n  const modalIndexFormRef = ref<FormInstance>();\n  const indexList = ref<Array<any>>([]);\n  const getIndexListByParam = async () => {\n    let list = await getIndexList(searchInfo);\n    indexList.value = list.result;\n    checkedKeys.value = [];\n    clearSelectedRowKeys();\n    initTableData();\n    return indexList.value;\n  };\n\n  const searchForm: FormProps = {\n    baseColProps: { span: 8 },\n    labelWidth: 120,\n    showAdvancedButton: false,\n    schemas: [\n      {\n        label: '是否启用',\n        field: 'status',\n        component: 'DictSelectBox',\n        componentProps: {\n          type: 'yes_or_no',\n        },\n      },\n    ],\n  };\n\n  async function getDic(type: string) {\n    const arr: any = [\n      {\n        dictType: '',\n        value: '',\n        label: '',\n        colorType: '',\n        cssClass: '',\n      },\n    ];\n    const map = await dictStore.fetchBackendData(type, {\n      type: type,\n    });\n    return arr.concat(map);\n  }\n\n  function handleIndexSuccess() {\n    let value = modalIndexFormRef.value;\n    if (value) {\n      value.validateFields().then(() => {\n        loadingFlag.value = true;\n        let operateText = getOperateText(formState);\n        formIndexState.name = trim(formIndexState.name);\n        saveData(formIndexState)\n          .then(() => {\n            message.success(operateText + '成功');\n            resetForm();\n            reload();\n            modal.open.index = false;\n            loadingFlag.value = false;\n          })\n          .catch(() => {\n            loadingFlag.value = false;\n          });\n      });\n    }\n  }\n\n  const [registerTable, { reload, getPaginationRef, clearSelectedRowKeys }] = useTable({\n    title: '信息',\n    api: async () => {\n      const paginationRef = getPaginationRef() as any;\n      searchInfo.pageNo = paginationRef.current;\n      searchInfo.pageSize = paginationRef.pageSize;\n      let dataObj = await getIndexListByParam();\n      return dataObj;\n    },\n    columns: indexColumn,\n    useSearchForm: true,\n    showIndexColumn: false,\n    formConfig: searchForm,\n    showTableSetting: true,\n    pagination: true,\n    canResize: true,\n    bordered: true,\n    rowKey: 'id',\n    rowSelection: {\n      type: 'radio',\n      onChange: onSelect,\n    },\n    handleSearchInfoFn(info) {\n      searchInfo.status = info.status;\n      return info;\n    },\n    sortFn: (sortInfo: SorterResult) => {\n      if (sortInfo.order) {\n        searchInfo.sortField = sortInfo.field;\n        searchInfo.sortOrder = sortInfo.order.replace('end', '');\n      } else {\n        searchInfo.sortField = null;\n        searchInfo.sortOrder = null;\n      }\n    },\n  });\n\n  function onSelect(record, selected) {\n    if (selected.length > 0) {\n      checkedKeys.value = [record[0]];\n    } else {\n      checkedKeys.value = [];\n    }\n\n    initTableData();\n  }\n\n  // 查询左侧树数据\n  async function queryTreeList() {\n    const typeList = await getTreeData({ code: 'checkIndexType' });\n    treeData.value = typeList.result as unknown[] as TreeItem[];\n  }\n\n  // 新增树节点的的回调\n  function handleTreeAdd(node) {\n    formState.id = '';\n    formState.codePre = '';\n    formState.parentId = 'root';\n    formState.fullId = '';\n    formState.parentName = '';\n    formState.parentFullName = '';\n    formState.name = '';\n    if (node) {\n      formState.parentId = node.id;\n      formState.codePre = node.codePre;\n      formState.parentName = node.name;\n      formState.fullId = node.fullId;\n      formState.parentFullName = node.fullName;\n      if (node.fullId && node.fullId.split('/').length > 4) {\n        message.error('最多允许新增4个层级');\n        return;\n      }\n    }\n    const operateText = getOperateText(formState);\n    if (!isEditTree(node, operateText)) {\n      return;\n    }\n    modal.open.type = true;\n    modal.title.type = operateText + '信息类型';\n  }\n\n  function isSelectNode(node) {\n    if (!node) {\n      message.error('请选择信息类型节点');\n      return false;\n    }\n    return true;\n  }\n\n  // 修改树节点的的回调\n  function handleTreeEdit(node) {\n    if (!isSelectNode(node)) {\n      return;\n    }\n    const operateText = getOperateText({ id: node.id });\n    if (node.parentId === 'root') {\n      message.error(`父节点，不能${operateText}`);\n      return;\n    }\n    if (node.children.length > 0) {\n      message.error(`该信息类型存在子节点，不能${operateText}`);\n      return;\n    }\n    if (!isEditTree(node, operateText)) {\n      return;\n    }\n    getType({ id: node.id }).then((data) => {\n      assign(formState, data.result);\n    });\n    modal.open.type = true;\n    modal.title.type = operateText + '信息类型';\n  }\n  function isEditTree(node, operateText) {\n    if (!node) {\n      return true;\n    }\n    if (\n      node.children.length == 0 &&\n      node.fullId &&\n      indexList.value &&\n      indexList.value.list.length > 0\n    ) {\n      message.error('该信息分类存在信息，不能' + operateText);\n      return false;\n    }\n    return true;\n  }\n  // 删除树节点的回调\n  function handleTreeDelete(node) {\n    if (!isSelectNode(node)) {\n      return;\n    }\n\n    if (node.children.length > 0) {\n      message.error('该信息类型存在子节点，不能删除');\n      return false;\n    }\n    if (indexList.value.list.length > 0) {\n      message.error('该信息类型信息数据，不能删除');\n      return false;\n    }\n    deleteConfirm(function () {\n      deleteType('?id=' + node.id).then(() => {\n        handleTreeRefresh();\n      });\n    });\n  }\n\n  function deleteConfirm(callback: Function) {\n    createConfirm({\n      title: t('common.message.confirmTitle'),\n      iconType: 'warning',\n      content: t('common.message.delMessage'),\n      async onOk() {\n        await callback();\n        message.success(t('common.delSuccessText'));\n      },\n    });\n  }\n  // 刷新树的回调\n  function handleTreeRefresh() {\n    queryTreeList();\n  }\n\n  // 数据创建成功回调函数\n  function handleSuccess() {\n    let value = modalFormRef.value;\n    if (value) {\n      value.validateFields().then(() => {\n        loadingFlag.value = true;\n        formState.fullName = getFullName();\n        let operateText = getOperateText(formState);\n        saveType(formState)\n          .then(() => {\n            message.success(operateText + '成功');\n            resetForm();\n            handleTreeRefresh();\n            modal.open.type = false;\n            loadingFlag.value = false;\n          })\n          .catch(() => {\n            loadingFlag.value = false;\n          });\n      });\n    }\n  }\n\n  function getOperateText(params) {\n    return !params.id ? '添加' : '修改';\n  }\n\n  function getFullName() {\n    let parentFullName = formState.parentFullName;\n    if (parentFullName) {\n      return parentFullName + '-' + trim(formState.name);\n    }\n    return trim(formState.name);\n  }\n\n  function cancel() {\n    resetForm();\n    modal.open.type = false;\n    modal.open.index = false;\n  }\n\n  // 重置表单\n  function resetForm() {\n    modalFormRef.value?.resetFields();\n    modalIndexFormRef.value?.resetFields();\n  }\n\n  // 左侧树状菜单选中事件\n  function handleSelect(node) {\n    searchInfo.typeFullId = null;\n    searchInfo.infoKindType = null;\n    searchInfo.infoKindTypeName = null;\n    if (node) {\n      searchInfo.typeFullId = node.fullId;\n      searchInfo.infoKindType = node.id;\n      searchInfo.infoKindTypeName = node.name;\n      selectedNode.value = {\n        typeId: node.id,\n        fullName: node.fullName,\n        id: node.id,\n        name: node.name,\n        codePre: node.codePre,\n        existChildNode: node.children != null && node.children.length > 0,\n      };\n    }\n    reload();\n  }\n\n  // 添加信息\n  function handleCreateIndex() {\n    const node = treeRef.value.getSelectedTreeNode();\n    if (!node) {\n      message.error('请选择信息类型');\n      return;\n    }\n    if (node.children.length > 0) {\n      message.error('请选择信息类型的末级节点');\n      return;\n    }\n\n    formState.infoKindTypeName = selectedNode.value.name;\n    formState.infoKindType = selectedNode.value.id;\n    formIndexState.id = null;\n    formIndexState.code = selectedNode.value.codePre;\n    formIndexState.name = null;\n    formIndexState.sort = indexList.value.list.length + 1;\n    formIndexState.infoKindType = selectedNode.value.id;\n    formIndexState.infoKindTypeName = selectedNode.value.name;\n\n    modal.open.index = true;\n    modal.title.index = '添加信息类型';\n  }\n\n  function checkSelectData() {\n    console.log('checkedKeys', checkedKeys);\n    if (checkedKeys.value.length == 0 || checkedKeys.value.length > 1 || !checkedKeys.value['0']) {\n      message.error('请选择一行数据');\n      return false;\n    }\n    return true;\n  }\n\n  // 修改信息\n  function handleUpdateIndex() {\n    if (!checkSelectData()) {\n      return;\n    }\n    getIndex({ id: checkedKeys.value['0'] }).then((data) => {\n      assign(formIndexState, data.result);\n      modal.open.index = true;\n      modal.title.index = '修改信息类型';\n    });\n  }\n\n  // 删除信息\n  function handleDeleteIndex() {\n    if (!checkSelectData()) {\n      return;\n    }\n    createConfirm({\n      title: '提示',\n      iconType: 'warning',\n      content: '确定要删除选中记录？',\n      async onOk() {\n        deleteIndex('?id=' + checkedKeys.value['0']).then(() => {\n          message.success('已删除');\n          delete checkedKeys.value['0'];\n          reload();\n          initTableData();\n        });\n      },\n    });\n  }\n\n  // 启用信息类型\n  function handleEnableIndex() {\n    if (!checkSelectData()) {\n      return;\n    }\n    const params = '?id=' + checkedKeys.value['0'] + '&status=1';\n    updateStatusIndex(params).then(() => {\n      message.success('已启用');\n      reload();\n    });\n  }\n\n  // 禁用信息类型\n  function handleDisableIndex() {\n    if (!checkSelectData()) {\n      return;\n    }\n    const params = '?id=' + checkedKeys.value['0'] + '&status=0';\n    updateStatusIndex(params).then(() => {\n      message.success('已禁用');\n      reload();\n    });\n  }\n\n  // 保存信息类型排序\n  function handleUpdateSortIndex() {\n    const params = ref<Array<any>>([]);\n    indexList.value.list.forEach((item) => {\n      if (!item.sort) {\n        message.error('排序不能为空');\n        throw Error('排序不能为空');\n      }\n      params.value.push({ id: item.id, sort: item.sort });\n    });\n    updateBatchSortIndex(params.value).then(() => {\n      message.success('保存排序成功');\n      reload();\n    });\n  }\n\n  const innerHeight = ref(window.innerHeight);\n  const topTableHeight = computed(() => {\n    const height = innerHeight.value / 2 - 145;\n    return height > 0 ? height : 90;\n  });\n  const bottomTableHeight = computed(() => {\n    const height = innerHeight.value / 2 - 207;\n    return height > 0 ? height : 90;\n  });\n\n  // 启动执行代码\n  onMounted(() => {\n    queryTreeList();\n    initOrgTree();\n    // 添加事件监听器，当窗口大小变化时调用handleResize函数\n    window.addEventListener('resize', () => {\n      innerHeight.value = window.innerHeight;\n    });\n  });\n\n  const detailDataSource = ref<any[]>();\n  const [registerTaskTable, { getDataSource: getTaskDataSource }] = useTable(\n    assign(\n      {\n        dataSource: detailDataSource,\n        columns: detailColumns,\n      },\n      detailTableProps,\n    ),\n  );\n  const initTableData = async () => {\n    if (checkedKeys.value.length == 0 || checkedKeys.value.length > 1 || !checkedKeys.value['0']) {\n      detailDataSource.value = [];\n      return false;\n    }\n    detailDataSource.value = await getTaskData({ bizId: checkedKeys.value['0'] });\n  };\n\n  const getTaskData = async (paramObj) => {\n    const dataObj = await getDetailList(paramObj);\n    return dataObj.result;\n  };\n\n  function handleAddItem() {\n    if (!checkSelectData()) {\n      return;\n    }\n    const addRow: EditRecordRow = {};\n    pushItemRow(addRow);\n  }\n\n  function pushItemRow(addRow: EditRecordRow) {\n    const data = getTaskDataSource();\n    data.push(addRowOption(addRow));\n  }\n\n  function addRowOption(addRow: EditRecordRow) {\n    addRow.editable = true;\n    addRow.isNew = true;\n    addRow.key = `${Date.now()}`;\n    return addRow;\n  }\n\n  function handleDeleteItem(record) {\n    deleteConfirm(function () {\n      const data = getTaskDataSource();\n      let index = data.indexOf(record);\n      if (index !== -1) {\n        data.splice(index, 1);\n      }\n      deleteDetail('?id=' + record.id).then(() => {\n        initTableData();\n      });\n    });\n  }\n</script>\n<style lang=\"less\" scoped>\n  .dialog-loading {\n    position: absolute;\n    z-index: 1000 !important;\n    top: 45%;\n    left: 45%;\n  }\n\n  .tab-button-div {\n    height: auto;\n    padding: 14px;\n\n    :deep(.ant-form-inline .ant-form-item) {\n      margin-bottom: 10px;\n    }\n  }\n\n  .tab-button {\n    margin-right: 5px;\n  }\n\n  .dialog-mask {\n    position: absolute;\n    z-index: 1001 !important;\n    top: -1px;\n    width: 100%;\n    height: 100%;\n    opacity: 0.3;\n  }\n\n  .left-tree-layout {\n    flex-shrink: 0;\n    width: 298px;\n    border-radius: 2px;\n  }\n\n  .right-table-layout {\n    width: calc(100% - 308px);\n    height: 100vh;\n\n    .bottom-table-layout {\n      .fix-basic-table {\n        padding: 0 10px;\n\n        :deep(.vben-basic-table-header__toolbar .ant-btn) {\n          margin-right: 0;\n        }\n      }\n      :deep(.vben-basic-table .ant-table.ant-table-empty) {\n        padding-bottom: 0;\n      }\n      :deep(.vben-basic-table .ant-table-wrapper) {\n        padding: 10px 16px 11px;\n      }\n    }\n  }\n\n  .fix-basic-table {\n    :deep(.table-settings) {\n      margin-right: 0;\n    }\n\n    :deep(.table-settings .anticon-setting) {\n      margin-right: 0;\n    }\n  }\n</style>\n"],"names":["getIndexListColumns","text","getTreeData","params","defHttp","getType","insertType","updateType","saveType","deleteType","getIndexList","getIndex","insertIndex","updateIndex","saveDetail","saveData","updateStatusIndex","updateBatchSortIndex","deleteIndex","getDetailList","deleteDetail","getOrgTree","formIndexState","reactive","detailColumns","detailTableProps","useDictStoreWithOut","orgTreeData","ref","t","useI18n","createConfirm","useMessage","initOrgTree","__async","typeList","dig","handleChangeTree","record","checkedKeys","data","initTableData","list","i","item","treeNode","searchInfo","treeData","selectedNode","useRouter","modal","loadingFlag","disabledType","indexColumn","formState","treeRef","modalFormRef","modalIndexFormRef","indexList","getIndexListByParam","clearSelectedRowKeys","searchForm","handleIndexSuccess","value","operateText","getOperateText","trim","message","resetForm","reload","registerTable","getPaginationRef","useTable","paginationRef","onSelect","info","sortInfo","selected","queryTreeList","handleTreeAdd","node","isEditTree","isSelectNode","handleTreeEdit","assign","handleTreeDelete","deleteConfirm","handleTreeRefresh","callback","handleSuccess","getFullName","parentFullName","cancel","_a","_b","handleSelect","handleCreateIndex","checkSelectData","handleUpdateIndex","handleDeleteIndex","handleEnableIndex","handleDisableIndex","handleUpdateSortIndex","innerHeight","topTableHeight","computed","height","bottomTableHeight","onMounted","detailDataSource","registerTaskTable","getTaskDataSource","getTaskData","paramObj","handleAddItem","pushItemRow","addRow","addRowOption","handleDeleteItem","index"],"mappings":"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"}