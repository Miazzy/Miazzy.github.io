{"version":3,"file":"WfApproveBox-a3448232.js","sources":["../../src/components/Framework/ApprovalDrawer/components/ApprovalTab.vue","../../src/components/Framework/ApprovalDrawer/ApprovalDrawer.vue","../../src/components/Framework/WorkFlow/WfApproveBox.vue"],"sourcesContent":["<template>\n  <div class=\"approval-tab\">\n    <!-- <div class=\"flow-item\">\n      <div class=\"flow-item-left\">\n        <div class=\"circle-out\">\n          <div class=\"circle-inner-text blue\">云</div>\n          <div class=\"status-icon green\">\n            <Icon class=\"fit-status-icon\" icon=\"ant-design:check-outlined\" color=\"#fff\" size=\"8\" />\n          </div>\n        </div>\n        <div class=\"flow-vertical-line solid\"></div>\n      </div>\n      <div class=\"flow-item-right\">\n        <div class=\"flow-row-1\">\n          <span class=\"node-name-text\">发起申请</span>\n          <span class=\"node-time-text\">2010-05-01 16:30:05</span>\n        </div>\n        <div class=\"flow-row-2\">\n          <span class=\"person-text\">设计部－电气组工程师－杨光云</span>\n        </div>\n      </div>\n    </div>\n    <div class=\"flow-item\">\n      <div class=\"flow-item-left\">\n        <div class=\"circle-out\">\n          <div class=\"circle-inner-icon\">\n            <Icon icon=\"ant-design:usergroup-delete-outlined\" color=\"#fff\" size=\"16\" />\n          </div>\n          <div class=\"status-icon green\">\n            <Icon class=\"fit-status-icon\" icon=\"ant-design:check-outlined\" color=\"#fff\" size=\"8\" />\n          </div>\n        </div>\n      </div>\n      <div class=\"flow-item-right\">\n        <div class=\"flow-row-1\">\n          <span class=\"node-name-text\">多人并审</span>\n        </div>\n        <div class=\"flow-item\">\n          <div class=\"flow-item-left\">\n            <div class=\"circle-out\">\n              <div class=\"circle-inner-text blue\">福</div>\n              <div class=\"status-icon green\">\n                <Icon\n                  class=\"fit-status-icon\"\n                  icon=\"ant-design:check-outlined\"\n                  color=\"#fff\"\n                  size=\"8\"\n                />\n              </div>\n            </div>\n            <div class=\"flow-vertical-line solid\"></div>\n          </div>\n          <div class=\"flow-item-right\">\n            <div class=\"flow-row-1\">\n              <span class=\"node-name-text\">终端公司工程部负责人</span>\n              <span class=\"node-time-text\">2010-05-01 16:30:05</span>\n            </div>\n            <div class=\"flow-row-2\">\n              <span class=\"person-text\">开发部－李福</span>\n              <span class=\"flow-status-text blue\">(发起)</span>\n            </div>\n            <div class=\"flow-row-3\">\n              <div class=\"comment-text\">同意</div>\n            </div>\n          </div>\n        </div>\n        <div class=\"flow-item\">\n          <div class=\"flow-item-left\">\n            <div class=\"circle-out\">\n              <div class=\"circle-inner-text blue\">林</div>\n              <div class=\"status-icon green\">\n                <Icon\n                  class=\"fit-status-icon\"\n                  icon=\"ant-design:check-outlined\"\n                  color=\"#fff\"\n                  size=\"8\"\n                />\n              </div>\n            </div>\n            <div class=\"flow-vertical-line solid\"></div>\n          </div>\n          <div class=\"flow-item-right\">\n            <div class=\"flow-row-1\">\n              <span class=\"node-name-text\">终端公司工程部负责人</span>\n              <span class=\"node-time-text\">2010-05-01  16:30:05</span>\n            </div>\n            <div class=\"flow-row-2\">\n              <span class=\"person-text\">工程部－周克林</span>\n              <span class=\"flow-status-text green\"> (同意)</span>\n            </div>\n            <div class=\"flow-row-3\">\n              <div class=\"comment-text\">无异议同意此流程无异议同意此流程无异议同意此流程无异议</div>\n            </div>\n          </div>\n        </div>\n        <div class=\"flow-item\">\n          <div class=\"flow-item-left\">\n            <div class=\"circle-out\">\n              <div class=\"circle-inner-text blue\">林</div>\n              <div class=\"status-icon green\">\n                <Icon\n                  class=\"fit-status-icon\"\n                  icon=\"ant-design:check-outlined\"\n                  color=\"#fff\"\n                  size=\"8\"\n                />\n              </div>\n            </div>\n            <div class=\"flow-vertical-line solid\"></div>\n          </div>\n          <div class=\"flow-item-right\">\n            <div class=\"flow-row-1\">\n              <span class=\"node-name-text\">终端公司工程部负责人</span>\n              <span class=\"node-time-text\">2010-05-01  16:30:05</span>\n            </div>\n            <div class=\"flow-row-2\">\n              <span class=\"person-text\">工程部－王林</span>\n              <span class=\"flow-status-text green\">(同意)</span>\n            </div>\n            <div class=\"flow-row-3\">\n              <div class=\"comment-text\">同意没有为什么同意没有为什么同意没有为什么同意没有为什么同意没有为什么同意没有为什么</div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"flow-item\">\n      <div class=\"flow-item-left\">\n        <div class=\"circle-out\">\n          <div class=\"circle-inner-text blue\">青</div>\n          <div class=\"status-icon blue\">\n            <Icon class=\"fit-status-icon\" icon=\"ic:round-edit\" color=\"#fff\" size=\"8\" />\n          </div>\n        </div>\n        <div class=\"flow-vertical-line dash\"></div>\n      </div>\n      <div class=\"flow-item-right\">\n        <div class=\"flow-row-1\">\n          <span class=\"node-name-text\">工程管理部负责人</span>\n          <span class=\"node-time-text\">2010-05-01 16:30:05</span>\n        </div>\n        <div class=\"flow-row-2\">\n          <span class=\"person-text\">工程部－张长青</span>\n          <span class=\"flow-status-text blue\">(审批中)</span>\n        </div>\n        <div class=\"flow-row-3\">\n          <Textarea class=\"fit-comment-textarea\" v-model:value=\"comment\" placeholder=\"回复意见\" :auto-size=\"{ minRows: 5 }\" :bordered=\"false\" />\n        </div>\n      </div>\n    </div>\n    <div class=\"flow-item\">\n      <div class=\"flow-item-left\">\n        <div class=\"circle-out\">\n          <div class=\"circle-inner-text gray\">林</div>\n        </div>\n      </div>\n      <div class=\"flow-item-right\">\n        <div class=\"flow-row-1\">\n          <span class=\"node-name-text\">工程管理部总负责人</span>\n          <span class=\"node-time-text\">2010-05-01 16:30:05</span>\n        </div>\n        <div class=\"flow-row-2\">\n          <span class=\"person-text\">工程部－李木林</span>\n        </div>\n      </div>\n    </div> -->\n\n    <div class=\"flow-item\" v-for=\"(item, index) in innerFlowData\" :key=\"item.id\">\n      <div class=\"flow-item-left\">\n        <div class=\"circle-out\">\n          <div class=\"circle-inner-text blue\">{{\n            item?.assigneeUser?.name ? item?.assigneeUser?.name.slice(-1) : ''\n          }}</div>\n          <div v-if=\"item.result && item.result !== 1\" class=\"status-icon green\">\n            <Icon class=\"fit-status-icon\" icon=\"ant-design:check-outlined\" color=\"#fff\" size=\"8\" />\n          </div>\n          <div v-if=\"item.result && item.result === 1\" class=\"status-icon blue\">\n            <Icon class=\"fit-status-icon\" icon=\"ic:round-edit\" color=\"#fff\" size=\"8\" />\n          </div>\n        </div>\n        <div\n          class=\"flow-vertical-line\"\n          v-if=\"index < flowData.length - 1\"\n          :class=\"item.result === 1 ? 'dashed' : 'solid'\"\n        ></div>\n      </div>\n      <div class=\"flow-item-right\">\n        <div class=\"flow-row-1\">\n          <span class=\"node-name-text\">{{ item.name }}</span>\n          <span class=\"node-time-text\">{{ item.endTime }}</span>\n        </div>\n        <div class=\"flow-row-2\">\n          <span class=\"person-text\">{{\n            item?.assigneeUser?.deptName + '－' + item?.assigneeUser?.name\n          }}</span>\n          <span\n            v-if=\"item.result && resultObj[item.result]\"\n            class=\"flow-status-text\"\n            :style=\"{ color: resultObj[item.result].color }\"\n            >({{ resultObj[item.result].text }})</span\n          >\n        </div>\n        <div class=\"flow-row-3\">\n          <div v-if=\"props.type != 'approval'\" class=\"comment-text\">{{ item.reason }}</div>\n          <Textarea\n            v-if=\"props.type === 'approval' && item.result === 1 && editAuthority(item)\"\n            class=\"fit-comment-textarea\"\n            v-model:value=\"item.reason\"\n            placeholder=\"回复意见\"\n            :maxlength=\"200\"\n            :auto-size=\"{ minRows: 5 }\"\n            :bordered=\"false\"\n          />\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\" setup>\n  import { ref, toRaw, reactive, onMounted, watch } from 'vue';\n  import { Textarea } from 'ant-design-vue';\n  import Icon from '@/components/Icon/Icon.vue';\n  import { useUserStore } from '/@/store/modules/user';\n\n  const comment = ref<string>('');\n\n  const userStore = useUserStore();\n\n  const props = defineProps({\n    flowData: { type: Array },\n    type: { type: String }, // approval:审批，track:轨迹\n  });\n  const resultObj = reactive({\n    '1': {\n      text: '正在处理',\n      color: '#1890FF',\n    },\n    '2': {\n      text: '通过',\n      color: '#25C28A',\n    },\n    '3': {\n      text: '不通过',\n      color: '#FF4D4F',\n    },\n    '4': {\n      text: '打回',\n      color: '#FF4D4F',\n    },\n    '5': {\n      text: '已终止',\n      color: '#999',\n    },\n    '6': {\n      text: '已取消',\n      color: '#999',\n    },\n    '7': {\n      text: '已转办',\n      color: '#999',\n    },\n  });\n\n  const innerFlowData = ref([]);\n  function handleFlowData(data) {\n    // 流程数据是倒序的\n    if (props.type === 'track') {\n      let arr = [];\n      data?.forEach((item) => {\n        arr.unshift(item);\n      });\n      innerFlowData.value = arr;\n    } else if (props.type === 'approval') {\n      innerFlowData.value = data;\n    }\n  }\n\n  // TODO 编辑权限\n  const editAuthority = (item) => {\n    const getUserInfo = toRaw(userStore.getUserInfo);\n    return item?.assigneeUser?.id === getUserInfo?.userId && item?.processInstanceStatus === 1;\n  };\n\n  defineExpose({\n    innerFlowData,\n  });\n\n  watch(\n    () => props.flowData,\n    (newValue) => {\n      handleFlowData(newValue);\n    },\n  );\n\n  onMounted(() => {\n    handleFlowData(props.flowData);\n  });\n</script>\n\n<style lang=\"less\" scoped>\n  .approval-tab {\n    padding: 2px 20px;\n\n    .flow-item {\n      display: flex;\n      margin-bottom: 7px;\n\n      &:last-child {\n        margin-bottom: 0;\n      }\n\n      .flow-item-left {\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n        width: 28px;\n\n        .circle-out {\n          position: relative;\n\n          .circle-inner-text {\n            width: 28px;\n            height: 28px;\n            border-radius: 50%;\n            font-size: 15px;\n            line-height: 26px;\n            text-align: center;\n\n            &.blue {\n              border: 1px solid #1890ff;\n              color: #1890ff;\n            }\n          }\n\n          .circle-inner-icon {\n            width: 28px;\n            height: 28px;\n            border-radius: 50%;\n            background-color: #1890ff;\n            line-height: 28px;\n            text-align: center;\n          }\n\n          .status-icon {\n            position: absolute;\n            right: -4px;\n            bottom: -4px;\n            width: 12px;\n            height: 12px;\n            border-radius: 50%;\n            text-align: center;\n\n            &.green {\n              background-color: #25c28a;\n            }\n\n            &.blue {\n              background-color: #1890ff;\n            }\n\n            :deep(.fit-status-icon.anticon) {\n              vertical-align: 0.8em;\n            }\n          }\n        }\n\n        .flow-vertical-line {\n          flex: 1;\n          width: 1px;\n          min-height: 23px;\n          margin-top: 7px;\n\n          &.solid {\n            border-left: 1px solid #1890ff;\n          }\n        }\n      }\n\n      .flow-item-right {\n        flex: 1;\n        padding-left: 9px;\n\n        .flow-row-1 {\n          display: flex;\n          align-items: center;\n          justify-content: space-between;\n        }\n\n        .node-name-text {\n          font-size: 16px;\n          line-height: 28px;\n        }\n\n        .node-time-text {\n          font-size: 12px;\n        }\n\n        .person-text {\n          font-size: 13px;\n        }\n\n        .flow-status-text {\n          margin-left: 4px;\n          font-size: 13px;\n\n          &.blue {\n            color: #1890ff;\n          }\n\n          &.green {\n            color: #25c28a;\n          }\n        }\n\n        .comment-text {\n          font-size: 13px;\n          line-height: 22px;\n        }\n\n        :deep(.fit-comment-textarea.ant-input) {\n          margin: 4px 0 7px;\n          padding: 7px 8px;\n          border-radius: 2px;\n          font-size: 13px;\n        }\n      }\n    }\n  }\n</style>\n","<!--\n * @Description: \n * @Date: 2023-09-14 14:31:30\n * @LastEditTime: 2023-11-13 16:11:49\n * @FilePath: \\ygwl-framework\\src\\components\\Framework\\ApprovalDrawer\\ApprovalDrawer.vue\n-->\n<template>\n  <BasicDrawer\n    class=\"test\"\n    v-bind=\"$attrs\"\n    :isDetail=\"true\"\n    width=\"33.33%\"\n    :headerStyle=\"{ display: 'none' }\"\n    :drawerStyle=\"{ boxShadow: '0px 1px 3px 0px #E9E9E9' }\"\n    :showFooter=\"currentNodeData[0] && editAuthority(currentNodeData[0])\"\n    footerHeight=\"64\"\n    @visible-change=\"handleChange\"\n    :get-container=\"getContainer\"\n  >\n    <OrganDialog\n      :title=\"`组织人员`\"\n      :visible=\"organVisible\"\n      @update:visible=\"organVisible = $event\"\n      :tdata=\"treeData\"\n      :tfields=\"{ key: 'id', title: 'name' }\"\n      :width=\"800\"\n      :height=\"600\"\n      @cancel=\"cancelOrganDialog\"\n      @confirm=\"handleOrganConfirm\"\n    />\n\n    <a-modal v-model:visible=\"open\" title=\"回退确认\" @ok=\"handleOk\">\n      <!-- 数据表格 -->\n      <BasicTable @register=\"registerBackTable\" />\n      <a-form ref=\"formRef\" :model=\"formState\" autocomplete=\"off\" class=\"backType-form\">\n        <a-row :gutter=\"24\">\n          <a-col :span=\"24\">\n            <a-form-item name=\"backType\" :rules=\"[{ required: true, message: '请选择回退类型' }]\">\n              <a-radio-group v-model:value=\"formState.backType\">\n                <a-radio :style=\"radioStyle\" :value=\"1\"\n                  >回退：回退到指定节点，节点后面的审批人需重新审批。</a-radio\n                >\n                <a-radio :style=\"radioStyle\" :value=\"2\"\n                  >打回：仅修改文档，修改完成后回到本节点。</a-radio\n                >\n              </a-radio-group>\n            </a-form-item>\n          </a-col>\n        </a-row>\n      </a-form>\n    </a-modal>\n\n    <div>\n      <Tabs class=\"fit-approval-tab\" v-model:activeKey=\"activeKey\">\n        <TabPane\n          v-if=\"currentNodeData[0] && editAuthority(currentNodeData[0])\"\n          key=\"1\"\n          tab=\"流程审批\"\n        >\n          <ApprovalTab ref=\"approvalTabRef\" :flowData=\"currentNodeData\" type=\"approval\" />\n        </TabPane>\n        <TabPane key=\"2\" tab=\"流程轨迹\" force-render>\n          <ApprovalTab ref=\"trackTabRef\" :flowData=\"flowData\" type=\"track\" />\n        </TabPane>\n        <!-- <TabPane key=\"3\" tab=\"关联业务\">\n          <div>关联业务</div>\n        </TabPane> -->\n      </Tabs>\n    </div>\n    <template v-if=\"currentNodeData[0] && editAuthority(currentNodeData[0])\" #footer>\n      <Button class=\"fit-footer-btn\" type=\"primary\" v-if=\"props.isHandle == 1\" @click=\"handleAgree\"\n        >同意</Button\n      >\n      <Button class=\"fit-footer-btn\" v-if=\"props.isHandle == 1\" @click=\"handleReject\">不同意</Button>\n      <!-- <Button class=\"fit-footer-btn\" v-if=\"props.isHandle == 1\" @click=\"handleFlowSave\"\n        >保存</Button\n      > -->\n      <Dropdown>\n        <template #overlay>\n          <Menu @click=\"handleMenuClick\">\n            <MenuItem key=\"5\">回退</MenuItem>\n            <MenuItem key=\"1\">终止</MenuItem>\n            <MenuItem key=\"2\">转办</MenuItem>\n            <MenuItem key=\"3\">知会</MenuItem>\n            <!-- <MenuItem key=\"4\">收藏任务</MenuItem> -->\n          </Menu>\n        </template>\n        <Button v-if=\"props.isHandle == 1\" class=\"fit-footer-btn\">\n          更多\n          <Icon icon=\"ant-design:down-outlined\" color=\"#BFBFBF\" size=\"14\" />\n        </Button>\n      </Dropdown>\n    </template>\n  </BasicDrawer>\n</template>\n<script lang=\"ts\" setup>\n  import { assign } from 'min-dash';\n  import { reactive, watch, ref, toRaw, onMounted, createVNode } from 'vue';\n  import { Tabs, TabPane, Button, Dropdown, Menu, MenuItem, Modal } from 'ant-design-vue';\n  import { ExclamationCircleOutlined } from '@ant-design/icons-vue';\n  import type { MenuProps } from 'ant-design-vue';\n  import { propTypes } from '@/utils/propTypes';\n  import Icon from '@/components/Icon/Icon.vue';\n\n  import { BasicDrawer } from '/@/components/Drawer';\n  import ApprovalTab from '/@/components/Framework/ApprovalDrawer/components/ApprovalTab.vue';\n  import { BasicTable, useTable, BasicColumn } from '/@/components/Table';\n  import { useUserStore } from '/@/store/modules/user';\n  import { TreeItem } from '/@/components/Tree';\n  import OrganDialog from '@/components/Framework/Modal/OrganDialog.vue';\n  import * as ProcessInstanceApi from '@/api/bpm/processInstance';\n  import * as TaskApi from '@/api/bpm/task';\n  import * as OrgApi from '@/api/sys/org';\n  import { reloadTreeData } from '@/utils/tree';\n  import type { PropType } from 'vue';\n  import { MsgManager } from '/@/message/MsgManager';\n  import { SysMessage } from '/@/hooks/web/useMessage';\n\n  type Modes = 'default' | 'before'; // default: 默认不需要在流程同意、驳回、终止等之前，业务有保存或提交数据；before: 需要在流程同意、驳回、终止等之前，业务保存或提交数据\n\n  const props = defineProps({\n    flowData: { type: Array },\n    processInstanceId: propTypes.string.def(''),\n    isHandle: { type: Number, default: 1 }, //当前流程是否处理默认当前流程未处理（1 未处理、2 已处理）\n    mode: { type: String as PropType<Modes>, default: 'default' },\n    businessStatus: { type: String, default: '' },\n  });\n\n  const organVisible = ref(false);\n  const open = ref<boolean>(false);\n  const treeData = ref<TreeItem[]>([]); // 左侧电站树数据\n  const processOperation = ref(0);\n\n  const userStore = useUserStore();\n  const getUserInfo = toRaw(userStore.getUserInfo);\n\n  // 编辑权限\n  const editAuthority = (item) => {\n    return item?.assigneeUser?.id === getUserInfo?.userId && item?.processInstanceStatus === 1;\n  };\n\n  // 当前节点数据\n  const currentNodeData = ref([]);\n  watch(\n    () => props.flowData,\n    (newValue) => {\n      const newArr = [];\n      newValue?.forEach((item) => {\n        if (item.result === 1 && editAuthority(item)) {\n          newArr.push(item);\n        }\n      });\n      currentNodeData.value = newArr;\n      if (currentNodeData.value[0] && editAuthority(currentNodeData.value[0])) {\n        activeKey.value = '1';\n      } else {\n        activeKey.value = '2';\n      }\n    },\n  );\n\n  const trackTabRef = ref();\n  const approvalTabRef = ref();\n\n  const activeKey = ref('1');\n\n  const emit = defineEmits([\n    'agree',\n    'reject',\n    'save',\n    'end',\n    'back',\n    'transfer',\n    'notice',\n    'collect',\n    'before',\n  ]);\n\n  // 更多\n  const handleMenuClick: MenuProps['onClick'] = (e) => {\n    const { key } = e;\n    const { innerFlowData } = trackTabRef.value;\n    switch (key) {\n      case '1':\n        // 终止\n        // emit('end', innerFlowData);\n        abortFlow();\n        break;\n      case '2':\n        // 转办\n        // emit('transfer', innerFlowData);\n        handleProcessOperation(2);\n        break;\n      case '3':\n        // 知会\n        // emit('notice', innerFlowData);\n        handleProcessOperation(3);\n        break;\n      case '4':\n        // 收藏任务\n        emit('collect', innerFlowData);\n        break;\n      case '5':\n        // 回退\n        back();\n        break;\n    }\n  };\n\n  const radioStyle = reactive({\n    display: 'block',\n    height: '30px',\n    lineHeight: '30px',\n  });\n  const formState = reactive({\n    backType: '',\n  });\n\n  const formRef = ref();\n  const handleOk = () => {\n    formRef.value\n      .validate()\n      .then(() => {\n        const rows = getBackSelectRows();\n        if (rows.length !== 1) {\n          SysMessage.getInstance().warning('请选择一行数据。');\n          return;\n        }\n\n        const { innerFlowData } = trackTabRef.value;\n        const myTask = getMyTask(innerFlowData);\n\n        if(!myTask.reason){\n          SysMessage.getInstance().warning('请填写回复意见。');\n          return;\n        }\n\n        const params = {\n          id: myTask.id,\n          targetKey: rows[0].taskDefinitionKey,\n          reason: myTask.reason,\n        };\n        if (formState.backType == 1) {\n          if (props.mode === 'default') {\n            ProcessInstanceApi.backTask(params)\n              .then(() => {\n                emit('back', innerFlowData);\n                SysMessage.getInstance().success('操作成功。');\n              })\n              .then(() => {\n                open.value = false; // 关闭弹框\n              });\n          } else if (props.mode === 'before') {\n            emit('before', currentNodeData.value[0], 'beforeBack');\n          }\n        } else {\n          if (props.mode === 'default') {\n            ProcessInstanceApi.replenishTask(params)\n              .then(() => {\n                emit('back', innerFlowData);\n                SysMessage.getInstance().success('操作成功。');\n              })\n              .then(() => {\n                open.value = false; // 关闭弹框\n              });\n          } else if (props.mode === 'before') {\n            emit('before', currentNodeData.value[0], 'beforeReplenish');\n          }\n        }\n      })\n      .catch((error) => {\n        console.log('onSubmit=》error', error);\n      });\n  };\n\n  const back = () => {\n    const { innerFlowData } = trackTabRef.value;\n    const myTask = getMyTask(innerFlowData);\n\n    if (Object.keys(myTask).length === 0) {\n      SysMessage.getInstance().warning('没有权限操作。');\n      return;\n    }\n\n    if (myTask.definitionKey == 'Apply') {\n      SysMessage.getInstance().warning('申请节点不能回退。');\n      return;\n    }\n\n    open.value = true;\n    reloadBack();\n  };\n\n  const backColumns: BasicColumn[] = [\n    {\n      title: '名称',\n      dataIndex: 'name',\n      width: 150,\n    },\n  ];\n\n  const [registerBackTable, { reload: reloadBack, getSelectRows: getBackSelectRows }] = useTable({\n    api: ProcessInstanceApi.getFallbackNode,\n    rowKey: 'id',\n    columns: backColumns,\n    useSearchForm: false,\n    showTableSetting: false,\n    bordered: true,\n    pagination: false,\n    maxHeight: 300,\n    rowSelection: {\n      type: 'radio',\n    },\n    beforeFetch(info) {\n      const { innerFlowData } = trackTabRef.value;\n      const myTask = getMyTask(innerFlowData);\n      info.taskId = myTask.id;\n      return info;\n    },\n  });\n\n  // 同意\n  function handleAgree() {\n    const { innerFlowData } = trackTabRef.value;\n    if (props.mode === 'default') {\n      emit('agree', innerFlowData);\n    } else if (props.mode === 'before') {\n      emit('before', currentNodeData.value[0], 'beforeAgree');\n    }\n    // closeCurrentTab();\n    MsgManager.getInstance().sendMsg('workflow-task-done', {}); // 发送消息，通知审批待办任务已办任务刷新列表\n    MsgManager.getInstance().sendMsg('task-center-page', {}); // 发送消息，通知审批待办任务已办任务刷新列表\n  }\n\n  // 驳回\n  function handleReject() {\n    const { innerFlowData } = trackTabRef.value;\n    if (props.mode === 'default') {\n      emit('reject', innerFlowData);\n    } else if (props.mode === 'before') {\n      emit('before', currentNodeData.value[0], 'beforeReject');\n    }\n    // closeCurrentTab();\n    MsgManager.getInstance().sendMsg('workflow-task-done', {}); // 发送消息，通知审批待办任务已办任务刷新列表\n    MsgManager.getInstance().sendMsg('task-center-page', {}); // 发送消息，通知审批待办任务已办任务刷新列表\n  }\n\n  // 保存\n  // function handleFlowSave() {\n  //   const { innerFlowData } = trackTabRef.value;\n  //   emit('save', innerFlowData);\n  // }\n\n  function abortFlow() {\n    const { innerFlowData } = trackTabRef.value;\n    const myTask = getMyTask(innerFlowData);\n\n    if (Object.keys(myTask).length === 0) {\n      SysMessage.getInstance().warning('没有权限操作。');\n      return;\n    }\n    if (myTask.result == 2) {\n      SysMessage.getInstance().warning('此任务已处理。');\n      return;\n    }\n    const params = {\n      id: myTask.id,\n      reason: myTask.reason,\n    };\n\n    Modal.confirm({\n      title: () => '确认操作',\n      icon: () => createVNode(ExclamationCircleOutlined),\n      content: () => createVNode('div', { style: 'color:red;' }, '确定要终止当前任务吗？'),\n      onOk() {\n        // ProcessInstanceApi.abortProcessInstance(params).then(() => {\n        //   processOperation.value = 0;\n        //   emit('onReload');\n        //   message.success('操作成功。');\n        // });\n        if (!myTask.reason) {\n          SysMessage.getInstance().warning('取消原因不能为空。');\n          return;\n        }\n        if (props.mode === 'default') {\n          emit('end', innerFlowData);\n          ProcessInstanceApi.abortProcessInstance(params).then(() => {\n            processOperation.value = 0;\n            emit('onReload');\n            SysMessage.getInstance().success('操作成功。');\n          });\n        } else if (props.mode === 'before') {\n          emit('before', currentNodeData.value[0], 'beforeEnd');\n        }\n      },\n      class: 'test',\n    });\n  }\n\n  watch(\n    () => props.businessStatus,\n    (newValue) => {\n      if (newValue === 'end') {\n        const { innerFlowData } = trackTabRef.value;\n        const myTask = getMyTask(innerFlowData);\n        const params = {\n          id: myTask.id,\n          reason: myTask.reason,\n        };\n        ProcessInstanceApi.abortProcessInstance(params).then(() => {\n          processOperation.value = 0;\n          emit('onReload');\n          SysMessage.getInstance().success('操作成功。');\n        });\n      } else if (newValue === 'back') {\n        const rows = getBackSelectRows();\n        const { innerFlowData } = trackTabRef.value;\n        const myTask = getMyTask(innerFlowData);\n        const params = {\n          id: myTask.id,\n          targetKey: rows[0].taskDefinitionKey,\n          reason: myTask.reason,\n        };\n        ProcessInstanceApi.backTask(params)\n          .then(() => {\n            emit('back', innerFlowData);\n            SysMessage.getInstance().success('操作成功。');\n          })\n          .then(() => {\n            open.value = false; // 关闭弹框\n          });\n      } else if (newValue === 'replenish') {\n        const rows = getBackSelectRows();\n        const { innerFlowData } = trackTabRef.value;\n        const myTask = getMyTask(innerFlowData);\n        const params = {\n          id: myTask.id,\n          targetKey: rows[0].taskDefinitionKey,\n          reason: myTask.reason,\n        };\n        ProcessInstanceApi.replenishTask(params)\n          .then(() => {\n            emit('back', innerFlowData);\n            SysMessage.getInstance().success('操作成功。');\n          })\n          .then(() => {\n            open.value = false; // 关闭弹框\n          });\n      }\n    },\n  );\n\n  // 处理流程操作\n  function handleProcessOperation(operation) {\n    processOperation.value = operation;\n    const { innerFlowData } = trackTabRef.value;\n    const myTask = getMyTask(innerFlowData);\n\n    if (myTask.definitionKey == 'Apply' && operation == 2) {\n      SysMessage.getInstance().warning('申请节点不能转办。');\n      return;\n    }\n    if (operation == 2 && myTask.result == 2) {\n      SysMessage.getInstance().warning('此任务已处理。');\n      return;\n    }\n\n    organVisible.value = true;\n    // 重新加载TreeData\n    reloadTreeData(treeData, 100);\n  }\n\n  // 查询左侧电站树数据\n  async function queryDeptTreeList() {\n    OrgApi.getListTree({\n      showPosition: false,\n      status: 1,\n      // fullId: '/HZ93a0bf6ab8dd83016ab8deaca70009.ogn',\n    }).then((res) => {\n      const list = res as unknown as TreeItem[];\n      treeData.value = list;\n    });\n  }\n\n  const getPersonId = (personMemberId) => {\n    return personMemberId.split('@')[0];\n  };\n\n  const handleOrganConfirm = (nodeList) => {\n    // const message = nodeList.length > 0 ? JSON.stringify(nodeList) : '';\n    // organConfirm.value = '组织人员选择Dialog确定，返回结果：' + message;\n    // console.info('组织人员选择Dialog确定，返回结果：' + message);\n    // console.log('processOperation.value', processOperation.value);\n\n    const { innerFlowData } = trackTabRef.value;\n    const myTask = getMyTask(innerFlowData);\n\n    if (nodeList.length == 0) {\n      SysMessage.getInstance().warning('请选择人员。');\n      return false;\n    }\n    if (processOperation.value == 2) {\n      if (myTask.result > 1) {\n        SysMessage.getInstance().warning('此任务已处理。');\n        return false;\n      }\n      if (nodeList.length > 1) {\n        SysMessage.getInstance().warning('只能选择一个人员。');\n        return false;\n      }\n      if (nodeList[0].orgKindId != 'psm') {\n        SysMessage.getInstance().warning('请选择人员。');\n        return false;\n      }\n      const params = {\n        id: myTask.id,\n        assigneeUserId: getPersonId(nodeList[0].value),\n        reason: myTask.reason,\n      };\n      TaskApi.updateTaskAssignee(params).then(() => {\n        processOperation.value = 0;\n        emit('onReload');\n        SysMessage.getInstance().success('操作成功。');\n        organVisible.value = false;\n      });\n    } else if (processOperation.value == 3) {\n      const userIds = [];\n      for (let i = 0; i < nodeList.length; i++) {\n        const item = nodeList[i];\n        getUserIds(item, userIds);\n      }\n      let ccToVos = Array.from(new Set(userIds));\n      let users = ccToVos.map((item) => ({ userId: item }));\n      const params = {\n        id: myTask.id,\n        processInstanceId: myTask.processInstance.id,\n        ccToVos: users,\n      };\n      TaskApi.addCcTo(params).then(() => {\n        processOperation.value = 0;\n        emit('onReload');\n        SysMessage.getInstance().success('操作成功。');\n        organVisible.value = false;\n      });\n    }\n  };\n\n  const cancelOrganDialog = () => {\n    processOperation.value = 0;\n  };\n\n  function getUserIds(data, list) {\n    if (data.orgKindId === 'psm') {\n      list.push(getPersonId(data.id));\n    }\n    if (data.children && data.children.length > 0) {\n      for (let i = 0; i < data.children.length; i++) {\n        const item = data.children[i];\n        getUserIds(item, list);\n      }\n    }\n  }\n\n  //获取未处理任务节点\n  const getMyTask = (flowData) => {\n    const obj = {};\n    flowData.forEach((item) => {\n      if (item?.assigneeUser?.id === getUserInfo?.userId) {\n        assign(obj, item);\n      }\n    });\n    return obj;\n  };\n\n  // 当drawer组件弹开时\n  const handleChange = () => {\n    setTimeout(() => {\n      window.scrollTo({ top: 0 });\n    }, 0);\n  };\n\n  const getContainer = () => {\n    return document.body;\n  };\n\n  /** 初始化 **/\n  onMounted(() => {\n    queryDeptTreeList();\n  });\n</script>\n<style lang=\"less\">\n  .vben-basic-drawer-footer {\n    border-top-color: #eee;\n  }\n</style>\n<style lang=\"less\" scoped>\n  .backType-form > .ant-row {\n    padding: 10px 16px;\n  }\n\n  .fit-approval-tab {\n    :deep(.ant-tabs-tab) {\n      padding-right: 0;\n      padding-left: 0;\n      font-size: 16px;\n\n      &.ant-tabs-tab-active .ant-tabs-tab-btn {\n        color: #1890ff;\n      }\n    }\n\n    :deep(&.ant-tabs > .ant-tabs-nav .ant-tabs-nav-wrap) {\n      padding: 0 16px;\n    }\n\n    :deep(.ant-tabs-ink-bar) {\n      background-color: #1890ff;\n    }\n  }\n\n  .fit-footer-btn.ant-btn {\n    width: 66px;\n    margin-right: 10px;\n    padding: 4px 0;\n\n    & > span + .anticon {\n      margin-left: 0;\n    }\n  }\n</style>\n","<template>\n  <div class=\"workflow-approve-box\">\n    <!-- 审批按钮 -->\n    <div class=\"button-content\" style=\"\" v-show=\"isShowBtns\">\n      <Button\n        @click=\"handleSubmit\"\n        v-if=\"isNewProcessType && !isReadOnly && !processStatus\"\n        type=\"primary\"\n        >提交</Button\n      >\n      <Button @click=\"handleSave\" v-if=\"isNewProcessType && !isReadOnly && !processStatus\"\n        >保存</Button\n      >\n\n      <!-- <Button @click=\"handleCollect\" v-if=\"processStatus != 0\">收藏</Button> -->\n      <Button\n        @click=\"handleOpenApprovalDrawer\"\n        v-if=\"processStatus && processStatus !== 0\"\n        type=\"primary\"\n        >审批</Button\n      >\n    </div>\n    <!-- 流程审批抽屉组件 -->\n    <ApprovalDrawer\n      @register=\"approvalDrawerRegister\"\n      :flowData=\"approveDataList\"\n      :processInstanceId=\"processInstanceId\"\n      :isHandle=\"isHandle\"\n      :mode=\"props.mode\"\n      :businessStatus=\"props.businessStatus\"\n      @agree=\"handleAgree\"\n      @reject=\"handleReject\"\n      @save=\"handleFlowSave\"\n      @end=\"handleEnd\"\n      @back=\"handleBack\"\n      @transfer=\"handleTransfer\"\n      @notice=\"handleNotice\"\n      @collect=\"handleCollect\"\n      @on-reload=\"onReload\"\n      @before=\"handleBefore\"\n    />\n  </div>\n</template>\n<script lang=\"ts\" setup>\n  import { assign } from 'min-dash';\n  import { watch, toRaw, ref, onMounted, unref, computed } from 'vue';\n  import { Button } from 'ant-design-vue';\n  import { useDrawer } from '/@/components/Drawer';\n  import { propTypes } from '@/utils/propTypes';\n  import ApprovalDrawer from '/@/components/Framework/ApprovalDrawer/ApprovalDrawer.vue';\n  import * as TaskApi from '@/api/bpm/task';\n  import * as ProcessInstanceApi from '@/api/bpm/processInstance';\n  import { useUserStore } from '/@/store/modules/user';\n  import type { PropType } from 'vue';\n  import { useRouter } from 'vue-router';\n  import { closeCurrentTab } from '@/utils/route';\n  import { MsgManager } from '/@/message/MsgManager';\n  import { SysMessage } from '/@/hooks/web/useMessage';\n\n  const { currentRoute } = useRouter();\n  const route = unref(currentRoute);\n\n  const emit = defineEmits([\n    'agree',\n    'reject',\n    'save',\n    'end',\n    'back',\n    'transfer',\n    'notice',\n    'collect',\n    'submit',\n    'before',\n  ]);\n\n  const isReadOnly = ref<boolean>(true);\n\n  const userStore = useUserStore();\n  const getUserInfo = toRaw(userStore.getUserInfo);\n\n  const props = defineProps({\n    processInstanceId: propTypes.string.def(''),\n    processStatus: { type: [Number, String], default: '' },\n    mode: { type: String as PropType<Modes>, default: 'default' },\n    businessStatus: { type: String, default: '' },\n    listenMessage: { type: String, default: 'workflow-task-done' },\n  });\n\n  const [\n    approvalDrawerRegister,\n    { openDrawer: openApprovalDrawer, closeDrawer: closeApprovalDrawer },\n  ] = useDrawer();\n\n  enum ProcessType {\n    NEW = 'new',\n    VIEW = 'view',\n  }\n\n  const approveDataList = ref([]);\n  const processInstanceId = ref(null);\n  const processStatus = ref();\n  const processType = ref(ProcessType.NEW);\n\n  // 打开流程审批抽屉\n  function handleOpenApprovalDrawer() {\n    openApprovalDrawer(true);\n  }\n\n  const isNewProcessType = computed(() => {\n    return processType.value === ProcessType.NEW;\n  });\n\n  const handleAgree = async (flowData) => {\n    // emit('agree', flowData);\n    const curflowobj = getuntreated(toRaw(flowData));\n\n    if(!curflowobj.reason){\n      SysMessage.getInstance().warning('请填写回复意见。');\n      return;\n    }\n\n    await TaskApi.approveTask({ id: curflowobj.id, reason: curflowobj.reason });\n    SysMessage.getInstance().success('操作成功。');\n    isHandle.value = 2;\n    await getTaskListByProcessInstanceId();\n    closeApprovalDrawer();\n    closeCurrentTab();\n    sendMsg();\n  };\n\n  const getTaskListByProcessInstanceId = async () => {\n    const data = await TaskApi.getTaskListByProcessInstanceId(processInstanceId.value);\n    if (!data) {\n      SysMessage.getInstance().error('查询不到流程信息！');\n      return;\n    }\n    const myTask = getMyTask(data);\n    if (Object.keys(myTask).length === 0) {\n      isHandle.value = 0;\n    }\n    approveDataList.value = data;\n  };\n\n  //获取未处理任务节点\n  function getuntreated(flowData) {\n    const obj = {};\n    flowData.forEach((item) => {\n      if (item?.assigneeUser?.id === getUserInfo?.userId && item?.result === 1) {\n        assign(obj, item);\n      }\n    });\n    return obj;\n  }\n\n  const handleReject = async (flowData) => {\n    // emit('reject', flowData);\n    const curflowobj = getuntreated(toRaw(flowData));\n    await TaskApi.rejectTask({ id: curflowobj.id, reason: curflowobj.reason });\n    SysMessage.getInstance().success('操作成功。');\n    await getTaskListByProcessInstanceId();\n    closeApprovalDrawer();\n    closeCurrentTab();\n    sendMsg();\n  };\n\n  // 流程审批保存\n  const onReload = () => {\n    getTaskListByProcessInstanceId();\n  };\n\n  // 流程审批保存\n  const handleFlowSave = (flowData) => {\n    emit('flowSave', flowData);\n  };\n\n  // 业务的保存\n  const handleSave = () => {\n    emit('save');\n    sendMsg();\n  };\n\n  //发送通知消息\n  const sendMsg = () => {\n    MsgManager.getInstance().sendMsg('workbench-approval', {}); // 工作台\n    MsgManager.getInstance().sendMsg('task-center-page', {}); // 发送消息，通知审批待办任务已办任务刷新列表\n    MsgManager.getInstance().sendMsg(props.listenMessage, {}); // 发送消息，通知审批待办任务已办任务刷新列表\n  };\n\n  const handleEnd = (flowData) => {\n    onReload();\n    emit('end', flowData);\n    closeApprovalDrawer();\n    sendMsg();\n  };\n\n  const handleBack = (flowData) => {\n    onReload();\n    emit('back', flowData);\n    closeApprovalDrawer();\n    sendMsg();\n  };\n\n\n  const handleTransfer = (flowData) => {\n    emit('transfer', flowData);\n    closeApprovalDrawer();\n    sendMsg();\n  };\n\n  const handleNotice = (flowData) => {\n    emit('notice', flowData);\n  };\n\n  const handleCollect = (flowData) => {\n    emit('collect', flowData);\n  };\n\n  const handleSubmit = (flowData) => {\n    emit('submit', flowData);\n\n    sendMsg();\n  };\n\n  const isShowBtns = ref(false); // 是否显示保存提交审批按钮\n  const isHandle = ref(1);\n  const getProcessInstance = async () => {\n    const data = await ProcessInstanceApi.getProcessInstance(processInstanceId.value);\n    if (!data) {\n      SysMessage.getInstance().error('查询不到流程信息！');\n      return;\n    }\n    //获取当前流程是否可操作\n    const startUserId = data.startUser.id;\n    if (startUserId === getUserInfo.userId) {\n      isReadOnly.value = false;\n    }\n    isHandle.value = data['status'];\n  };\n\n  //获取未处理任务节点\n  function getMyTask(flowData) {\n    const obj = {};\n    flowData.forEach((item) => {\n      if (item?.assigneeUser?.id === getUserInfo?.userId) {\n        assign(obj, item);\n      }\n    });\n    return obj;\n  }\n\n  watch(\n    () => props.processStatus,\n    (newValue, prevValue) => {\n      processStatus.value = props.processStatus;\n      if (newValue === 0 && prevValue === '') {\n        // status: '' => 0, 表示在新增状态\n        processType.value = ProcessType.NEW;\n      } else if (newValue !== 0 && prevValue === '') {\n        // status: '' => 1,2,3..., 表示在审批状态\n        processType.value = ProcessType.VIEW;\n      } else if (newValue !== 0) {\n        // status: '' => 1,2,3..., 表示在审批状态\n        processType.value = ProcessType.VIEW;\n      } else if (newValue === 0) {\n        // status: '' => 0, 表示在新增状态\n        processType.value = ProcessType.NEW;\n      }\n    },\n    { immediate: true },\n  );\n\n  watch(\n    () => props.processInstanceId,\n    (newValue, prevValue) => {\n      if (props.processInstanceId) {\n        processInstanceId.value = props.processInstanceId;\n        getTaskListByProcessInstanceId();\n        getProcessInstance();\n        isShowBtns.value = true;\n      }\n    },\n  );\n\n  const currentNode = {};\n  // 流程同意/驳回/终止前\n  const handleBefore = (currentNodeData, beforeOperationType) => {\n    assign(currentNode, currentNodeData);\n    emit('before', currentNode, beforeOperationType);\n  };\n\n  watch(\n    () => props.businessStatus,\n    async (newValue) => {\n      if (newValue === 'agree') {\n        await TaskApi.approveTask({ id: currentNode.id, reason: currentNode.reason });\n        SysMessage.getInstance().success('操作成功。');\n        isHandle.value = 2;\n        await getTaskListByProcessInstanceId();\n        closeApprovalDrawer();\n        closeCurrentTab();\n        MsgManager.getInstance().sendMsg(props.listenMessage, {}); // 发送消息，通知审批待办任务已办任务刷新列表\n      } else if (newValue === 'reject') {\n        await TaskApi.rejectTask({ id: currentNode.id, reason: currentNode.reason });\n        SysMessage.getInstance().success('操作成功。');\n        await getTaskListByProcessInstanceId();\n        closeApprovalDrawer();\n        closeCurrentTab();\n        MsgManager.getInstance().sendMsg(props.listenMessage, {}); // 发送消息，通知审批待办任务已办任务刷新列表\n      }\n    },\n  );\n  onMounted(() => {\n    if (!route.query.processInstanceId && !route.query.id) {\n      isShowBtns.value = true;\n      isReadOnly.value = false;\n    }\n  });\n</script>\n<style lang=\"less\" scoped>\n  .workflow-approve-box {\n    .button-content {\n      margin: 16px 0 0 16px;\n\n      .ant-btn {\n        margin: 0 10px 0 0;\n      }\n    }\n  }\n</style>\n"],"names":["ref","userStore","useUserStore","resultObj","reactive","innerFlowData","handleFlowData","data","props","arr","item","editAuthority","getUserInfo","toRaw","_a","__expose","watch","newValue","onMounted","organVisible","open","treeData","processOperation","currentNodeData","newArr","activeKey","trackTabRef","approvalTabRef","handleMenuClick","e","key","abortFlow","handleProcessOperation","emit","back","radioStyle","formState","formRef","handleOk","rows","getBackSelectRows","SysMessage","myTask","getMyTask","params","ProcessInstanceApi.backTask","ProcessInstanceApi.replenishTask","error","reloadBack","backColumns","registerBackTable","useTable","ProcessInstanceApi.getFallbackNode","info","handleAgree","MsgManager","handleReject","Modal","createVNode","ExclamationCircleOutlined","ProcessInstanceApi.abortProcessInstance","operation","reloadTreeData","queryDeptTreeList","__async","OrgApi.getListTree","res","list","getPersonId","personMemberId","handleOrganConfirm","nodeList","TaskApi.updateTaskAssignee","userIds","i","getUserIds","users","TaskApi.addCcTo","cancelOrganDialog","flowData","obj","assign","handleChange","getContainer","currentRoute","useRouter","route","unref","isReadOnly","approvalDrawerRegister","openApprovalDrawer","closeApprovalDrawer","useDrawer","approveDataList","processInstanceId","processStatus","processType","handleOpenApprovalDrawer","isNewProcessType","computed","curflowobj","getuntreated","TaskApi.approveTask","isHandle","getTaskListByProcessInstanceId","closeCurrentTab","sendMsg","TaskApi.getTaskListByProcessInstanceId","TaskApi.rejectTask","onReload","handleFlowSave","handleSave","handleEnd","handleBack","handleTransfer","handleNotice","handleCollect","handleSubmit","isShowBtns","getProcessInstance","ProcessInstanceApi.getProcessInstance","prevValue","currentNode","handleBefore","beforeOperationType"],"mappings":"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"}