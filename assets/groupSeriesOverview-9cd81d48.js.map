{"version":3,"file":"groupSeriesOverview-9cd81d48.js","sources":["../../src/views/monitor/PVArea/groupSeriesOverview/groupSeriesOverview.vue"],"sourcesContent":["<!--\n * @Description: 组串总览\n * @Date: 2023-10-08 16:59:48\n * @LastEditTime: 2023-11-09 08:59:52\n * @FilePath: \\ygwl-framework\\src\\views\\monitor\\PVArea\\groupSeriesOverview\\groupSeriesOverview.vue\n-->\n<template>\n  <PageWrapper fixedHeight contentClass=\"flex\" style=\"overflow: hidden\">\n    <div class=\"group-series-overview\">\n      <div class=\"area-box box-style\">\n        <div class=\"area-hearder-box\">\n          <div class=\"station-selector-box\">\n            <Icon class=\"icon-left\" icon=\"mdi:house-city\" color=\"#1890FF\" :size=\"15\" />\n            <Select\n              style=\"width: 200px\"\n              v-model:value=\"curStationId\"\n              show-search\n              :options=\"stationList\"\n              :filter-option=\"filterOption\"\n              :fieldNames=\"{ value: 'id', label: 'name' }\"\n              @change=\"handleChange\"\n            />\n          </div>\n          <div class=\"refresh-box\">\n            <Checkbox v-model:checked=\"isAutoRefresh\" @change=\"handleAutoRefresh\"\n              >自动刷新</Checkbox\n            >\n          </div>\n        </div>\n        <div class=\"area-content-box\">\n          <div class=\"content-header-box\">\n            <div class=\"header-left\">\n              <div class=\"select-box\">\n                <div class=\"select-label-box\">区域</div>\n                <Select\n                  v-model:value=\"area\"\n                  mode=\"multiple\"\n                  style=\"min-width: 256px\"\n                  placeholder=\"选择区域\"\n                  :options=\"areaOptions\"\n                  :max-tag-count=\"2\"\n                  :filter-option=\"filStationOption\"\n                  showArrow\n                  @change=\"handleAreaChange\"\n                />\n              </div>\n              <div class=\"select-box\">\n                <div class=\"select-label-box\">类型</div>\n                <Select\n                  v-model:value=\"deviceType\"\n                  mode=\"multiple\"\n                  style=\"min-width: 256px\"\n                  placeholder=\"选择类型\"\n                  :options=\"deviceTypeOptions\"\n                  showArrow\n                  @change=\"handleDeviceTypeChange\"\n                />\n              </div>\n              <div class=\"status-checkbox-group-box\">\n                <span class=\"status-label-text\">设备状态</span>\n                <Checkbox v-model:checked=\"checkedAllStatus\" @change=\"handleCheckAllStatus\">\n                  <span class=\"status-label-text\">全部</span>\n                  <span>{{ deviceCount }}</span>\n                </Checkbox>\n                <CheckboxGroup v-model:value=\"checkedStatus\" @change=\"handleStatusChange\">\n                  <Checkbox v-for=\"(item, index) in statusOptions\" :key=\"index\" :value=\"item.value\">\n                    <span class=\"status-label-text\">{{ item.label }}</span>\n                    <span :class=\"{ 'red-text': item.value !== 'normal' && item.number > 0 }\">{{\n                      item.number\n                    }}</span>\n                  </Checkbox>\n                </CheckboxGroup>\n                <span class=\"status-label-text\" style=\"margin-left: 50px\"\n                  >&nbsp;&nbsp;&nbsp;组串状态</span\n                >\n                <CheckboxGroup v-model:value=\"abnormalCurrents\" @change=\"handleAbnormalCurrent\">\n                  <Checkbox value=\"abnormalCurrent\">\n                    <span>电流异常</span>\n                    <span :class=\"{ 'red-text': pvErrorNum > 0 }\">{{ pvErrorNum }}</span>\n                  </Checkbox>\n                </CheckboxGroup>\n              </div>\n            </div>\n          </div>\n\n          <div class=\"device-table-box\">\n            <BasicTable @register=\"registerTable\">\n              <template #toolbar>\n                <a-button class=\"yellow-btn\" :preIcon=\"IconEnum.EXPORT\" @click=\"exportData\"\n                  >导出</a-button\n                >\n              </template>\n              <!-- <template #action=\"{ record }\">\n                <TableAction\n                  :actions=\"[\n                    {\n                      label: '详情',\n                      icon: 'clarity:note-edit-line',\n                      onClick: handleDetail.bind(null, { record }),\n                    },\n                  ]\"\n                />\n              </template> -->\n              <template #bodyCell=\"{ text, column, record }\">\n                <template v-if=\"column?.key === 'abnormalTypesStr'\">\n                  <span class=\"status-icon\" :class=\"statusMap[record.deviceShowFlag]\"></span>\n                </template>\n                <template v-if=\"column?.key === 'deviceName'\">\n                  <a @click=\"handleDetail(record)\">{{ text }}</a>\n                </template>\n                <template v-if=\"column?.key?.match(/^[i]\\d{1,}$/)\">\n                  <span class=\"table-cell-text\" :class=\"getITextColor(column, record)\">{{\n                    record[column?.key]?.value\n                  }}</span>\n                </template>\n              </template>\n            </BasicTable>\n          </div>\n        </div>\n      </div>\n      <!-- 设备弹框 -->\n      <DeviceDialog\n        :title=\"dialogTitle\"\n        :visible=\"dialogVisible\"\n        :ycData=\"ycData\"\n        :yxData=\"yxData\"\n        :yxTime=\"yxTime\"\n        :data=\"selectedDevice\"\n        @update:visible=\"dialogVisible = $event\"\n      />\n    </div>\n  </PageWrapper>\n</template>\n\n<script lang=\"ts\" setup>\n  import { ref, onMounted, watch, unref, reactive } from 'vue';\n  import { message, Checkbox, Select, Button, CheckboxGroup } from 'ant-design-vue';\n  import Icon from '@/components/Icon/Icon.vue';\n  import type { SelectProps } from 'ant-design-vue';\n  import { BasicTable, useTable, TableAction, BasicColumn } from '/@/components/Table';\n  import DeviceDialog from '../subareaOverview/deviceDialog.vue';\n  import { TaskExecutor } from '/@/executor/taskExecutor';\n  import { exportExcelFile } from '@/utils/file/download';\n  import {\n    getStations,\n    getPvDataPage,\n    getPvDataList,\n    getAreas,\n    getRealTimeYc,\n    getRealTimeYx,\n    getDeviceTypes,\n    pvStringExport,\n  } from '../../monitorApi.ts';\n  import { jsonToSheetXlsx } from '/@/components/Excel';\n  import { checkStatus } from '/@/utils/http/axios/checkStatus';\n  import { IconEnum } from '@/enums/appEnum';\n  import { useMessage } from '@/hooks/web/useMessage';\n\n  const { createConfirm } = useMessage();\n\n  const props = defineProps({\n    stationId: String,\n    areaId: String,\n  });\n  const curStationId = ref();\n  const stationList = ref([]);\n  const deviceCount = ref(0);\n\n  const handleChange = async (value: string, option) => {\n    curStationId.value = value;\n    area.value = [];\n    await getAreaList();\n    await getDeviceType();\n    reload();\n  };\n  const filterOption = (input: string, option: any) => {\n    return option.name.indexOf(input) >= 0;\n  };\n\n  const filStationOption = (input: string, option: any) => {\n    return option.label.indexOf(input) >= 0;\n  };\n  // 获取电站列表数据\n  const getPowerStationList = async () => {\n    let res = await getStations();\n    if (res?.length) {\n      stationList.value = res;\n      if (!curStationId.value) {\n        curStationId.value = stationList.value[0].id;\n        await getAreaList();\n        await getDeviceType();\n        reload();\n      }\n    }\n  };\n\n  // 选择区域\n  const area = ref(['all']);\n  const areaOptions = ref<SelectProps['options']>([]);\n  // 获取区域列表数据\n  const getAreaList = async () => {\n    let res = await getAreas({ stationId: curStationId.value });\n    if (res?.length) {\n      area.value = ['all'];\n      let temp = [{ label: '全部区域', value: 'all' }];\n      res.forEach((element) => {\n        temp.push({ value: element.id, label: element.name });\n      });\n      areaOptions.value = temp;\n    }\n  };\n  const handleAreaChange = (value: string[]) => {\n    console.log(`selected ${value}`);\n    if (value.length > 1 && value.includes('all')) {\n      if (value[value.length - 1] === 'all') {\n        area.value = ['all'];\n      } else {\n        area.value = value.slice(1);\n      }\n    } else {\n      area.value = value;\n    }\n    reload();\n  };\n  // 选择类型\n  const deviceType = ref([]);\n  const deviceTypeOptions = ref<SelectProps['options']>([]);\n  const deviceTypeMap = {\n    StringFormation: {\n      value: 'StringFormation',\n      label: '组串式逆变器',\n    },\n    CombinerDc: {\n      value: 'CombinerDc',\n      label: '直流汇流箱',\n    },\n  };\n  const handleDeviceTypeChange = (value: string[]) => {\n    deviceType.value = value;\n    reload();\n  };\n\n  // 查询设备类型\n  const getDeviceType = async () => {\n    let res = await getDeviceTypes({\n      stationId: curStationId.value,\n    });\n    let temp = [];\n    let tempTypes = ['StringFormation', 'CombinerDc'];\n    let deviceTypeTemp = [];\n    if (res != null) {\n      res.forEach((element) => {\n        if (tempTypes.includes(element.deviceType)) {\n          temp.push(deviceTypeMap[element.deviceType]);\n          deviceTypeTemp.push(element.deviceType);\n        }\n      });\n    }\n    deviceTypeOptions.value = temp;\n    deviceType.value = deviceTypeTemp;\n  };\n\n  // 设备状态选项\n  const statusOptions = ref([\n    // { label: '全部', value: 'all', number: 600, checked: false },\n    { label: '正常', value: 'normal', number: 585 },\n    { label: '告警', value: 'alarm', number: 1 },\n    { label: '通讯中断', value: 'interrupt', number: 1 },\n  ]);\n  const checkedAllStatus = ref(true);\n  const checkedStatus = ref(['normal', 'alarm', 'interrupt']);\n\n  const isAbnormalCurrent = ref(false);\n  const abnormalCurrents = ref('');\n  const handleStatusChange = (checkedValue) => {\n    console.log('checkedValue', checkedValue);\n    checkedStatus.value = checkedValue;\n    reload();\n  };\n  const handleAbnormalCurrent = (abnormalCurrent) => {\n    console.log('checkedValue', abnormalCurrent);\n    if (abnormalCurrent.length > 0) {\n      isAbnormalCurrent.value = true;\n    } else {\n      isAbnormalCurrent.value = false;\n    }\n    reload();\n  };\n  const handleCheckAllStatus = (e) => {\n    checkedStatus.value = e.target.checked ? ['normal', 'alarm', 'interrupt'] : [];\n    reload();\n  };\n  watch(checkedStatus, (val) => {\n    if (val.length === 4 || (val.length === 3 && !val.includes('abnormal_current'))) {\n      checkedAllStatus.value = true;\n    } else {\n      checkedAllStatus.value = false;\n    }\n  });\n\n  const abnormalInfo = reactive({}); // 逆变器异常数据\n  // 获取设备数据\n  const deviceData = ref([]); // 逆变器数据\n  const showColumns = ref([]); // 展示字段\n  const pvErrorNum = ref(0); // 组串异常数量\n  const abnormalCurrent = ref('abnormal_current'); // 组串异常数量\n  const getDeviceData = async () => {\n    if (deviceType.value.length == 0) {\n      return;\n    }\n    if (curStationId.value == null) {\n      return;\n    }\n\n    const paginationRef = getPaginationRef() as any;\n\n    let res = await getPvDataPage({\n      stationId: curStationId.value,\n      areaIds: area.value,\n      abnormalType: checkedStatus.value,\n      deviceTypeList: deviceType.value,\n      pageNo: paginationRef.current,\n      pageSize: paginationRef.pageSize,\n      isAbnormalCurrent: isAbnormalCurrent.value,\n    });\n    console.log('getInverterData', res);\n    Object.assign(abnormalInfo, res.abnormalInfo);\n    statusOptions.value[0].number = res.normalNum;\n    statusOptions.value[1].number = res.alarmNum;\n    statusOptions.value[2].number = res.interruptNum;\n    pvErrorNum.value = res.serialErrorNum;\n    if (res != null) {\n      showColumns.value = res.headerList;\n      deviceData.value = { list: res.dataPage, total: res.total };\n      deviceCount.value = res.deviceNum;\n\n      console.log('getDeviceData', res);\n      getColumns();\n    }\n    return deviceData.value;\n  };\n\n  // 表格\n  const columns: BasicColumn[] = ref([]);\n\n  const getColumns = async () => {\n    let preColumns = [\n      {\n        title: '状态',\n        dataIndex: 'abnormalTypesStr',\n        width: 120,\n      },\n      {\n        title: '更新时间',\n        dataIndex: 'time',\n        width: 150,\n      },\n      {\n        title: '区域',\n        dataIndex: 'areaName',\n        width: 120,\n      },\n      {\n        title: '设备名称',\n        dataIndex: 'deviceName',\n        width: 120,\n      },\n      {\n        title: '有功功率(kW)',\n        dataIndex: 'activePower',\n        width: 120,\n      },\n    ];\n    if (showColumns.value?.length > 0) {\n      showColumns.value.forEach((element) => {\n        preColumns.push({\n          title: element.value,\n          dataIndex: element.key,\n          width: 50,\n        });\n      });\n    }\n    columns.value = preColumns;\n  };\n  const statusMap = {\n    normal: 'green',\n    alarm: 'red',\n    interrupt: 'grey',\n    interrupt: 'grey',\n  };\n  // const tableData = ref([]);\n  const getITextColor = (column, record) => {\n    if (\n      record[column.key] != null &&\n      record[column.key]['isAlarm'] == 1 &&\n      record[column.key]['value'] != '--'\n    ) {\n      return 'red';\n    } else {\n      return '';\n    }\n  };\n  const [registerTable, { reload, reloadData, getPaginationRef, setTableData }] = useTable({\n    api: getDeviceData,\n    columns: columns,\n    bordered: true,\n\n    pagination: { pageSize: 20, pageSizeOptions: ['20', '50', '100', '200'] },\n    tableSetting: { setting: true, redo: false, size: false },\n    showTableSetting: true,\n    showIndexColumn: true,\n  });\n\n  // 导出\n  const exportData = async () => {\n    createConfirm({\n      title: '提示',\n      iconType: 'warning',\n      content: '确定要导出所有记录？',\n      async onOk() {\n        try {\n          let param = {\n            stationId: curStationId.value,\n            areaIds: area.value,\n            abnormalType: checkedStatus.value,\n            deviceTypeList: deviceType.value,\n            isAbnormalCurrent: isAbnormalCurrent.value,\n          };\n\n          param.fileName = '组串数据';\n          param.excelList = columns.value;\n          await pvStringExport(param).then((res) => {\n            exportExcelFile(res?.data, param.fileName);\n          });\n\n          // let res = await getPvDataList({\n          //   stationId: curStationId.value,\n          //   areaIds: area.value,\n          //   abnormalType: checkedStatus.value,\n          //   deviceTypeList: deviceType.value,\n          //   isAbnormalCurrent: isAbnormalCurrent.value,\n          // });\n          // let exportDataList = [];\n          // if (res != null) {\n          //   let list = res.dataList;\n          //   list.forEach((element) => {\n          //     let temp = {};\n          //     columns.value.forEach((item) => {\n          //       if (typeof element[item.dataIndex] == 'object') {\n          //         temp[item.dataIndex] = element[item.dataIndex]['value'];\n          //       } else {\n          //         temp[item.dataIndex] = element[item.dataIndex];\n          //       }\n          //     });\n          //     exportDataList.push(temp);\n          //   });\n          // }\n          // let header = {};\n          // columns.value.forEach((item) => {\n          //   header[item.dataIndex] = item.title;\n          // });\n          // jsonToSheetXlsx({\n          //   data: exportDataList,\n          //   header: header,\n          //   filename: '组串数据.xlsx',\n          // });\n        } catch (error) {\n          console.error('export group series data error:', error);\n        }\n      },\n    });\n  };\n\n  // 详情\n  function handleDetail(record) {\n    handleOpenDeviceDialog(record);\n  }\n\n  // 设备弹框\n  const dialogVisible = ref(false);\n  const dialogTitle = ref('');\n  const selectedDevice = ref({});\n  // 打开设备弹框\n  const handleOpenDeviceDialog = (deviceItem) => {\n    dialogVisible.value = true;\n    dialogTitle.value = deviceItem.esn;\n    selectedDevice.value = deviceItem;\n    getYcData(deviceItem);\n    getYxData(deviceItem);\n  };\n\n  // 获取实时遥测数据\n  const ycData = ref([]);\n  const getYcData = async (deviceItem) => {\n    let res = await getRealTimeYc({\n      stationId: props.stationId,\n      areaId: props.areaId,\n      esn: deviceItem.esn,\n      dataType: 3,\n    });\n    ycData.value = res;\n  };\n\n  // 获取实时遥信数据\n  const yxData = ref([]);\n  const yxTime = ref('');\n  const getYxData = async (deviceItem) => {\n    let res = await getRealTimeYx({\n      stationId: props.stationId,\n      areaId: props.areaId,\n      esn: deviceItem.esn,\n      dataType: 1,\n    });\n    yxData.value = res.dataList;\n    yxTime.value = res.showTimeStr;\n  };\n  // 挂牌\n  function handleList(record) {\n    console.log('挂牌');\n  }\n\n  const taskRefreshID = 'GROUPS_SERIES';\n  // 自动刷新\n  const isAutoRefresh = ref(true);\n  // 刷新页面数据\n  const refreshData = async () => {\n    // await getPowerStationList();\n    console.info('refreshData:', Math.random());\n    try {\n      // reload();\n      reloadData(undefined, false);\n      // const result = await getDeviceData();\n      // if (result && result.list) {\n      //   setTableData(result.list);\n      // }\n    } catch (error) {\n      //\n    }\n  };\n\n  // 控制自动刷新函数\n  const handleAutoRefresh = (event) => {\n    try {\n      if (event?.target?.checked) {\n        // 如果勾选自动刷新，则将刷新函数加入线程，否则移除线程\n        TaskExecutor.getInstance().pushListTask(taskRefreshID, refreshData, 5000);\n      } else {\n        TaskExecutor.getInstance().removeListTask(taskRefreshID);\n      }\n    } catch (error) {\n      //\n    }\n  };\n\n  onMounted(() => {\n    getPowerStationList();\n\n    // 启动刷新线程\n    TaskExecutor.getInstance().start();\n    if (isAutoRefresh.value) {\n      TaskExecutor.getInstance().pushListTask(taskRefreshID, refreshData, 5000);\n    }\n  });\n</script>\n\n<style lang=\"less\">\n  @import '../../style/themes.less';\n</style>\n\n<style lang=\"less\" scoped>\n  .group-series-overview {\n    height: 100%;\n    padding: 10px;\n    overflow-x: hidden;\n    overflow-y: scroll;\n\n    .area-box {\n      height: 100%;\n    }\n\n    .box-style {\n      margin-right: -10px;\n      border-radius: 2px;\n    }\n\n    .area-hearder-box {\n      display: flex;\n      align-items: center;\n      justify-content: space-between;\n      height: 54px;\n      padding: 0 16px;\n\n      .station-selector-box {\n        display: flex;\n        align-items: center;\n\n        :deep(.ant-select) {\n          font-size: 16px;\n        }\n\n        :deep(.ant-select:not(.ant-select-customize-input) .ant-select-selector) {\n          border: none;\n        }\n\n        :deep(\n            .ant-select-focused:not(.ant-select-disabled).ant-select:not(.ant-select-customize-input)\n              .ant-select-selector\n          ) {\n          box-shadow: none;\n        }\n      }\n\n      .refresh-box {\n        width: 90px;\n      }\n    }\n\n    .select-box {\n      display: flex;\n      align-items: center;\n      margin-right: 20px;\n\n      &:last-child {\n        margin-right: 0;\n      }\n\n      .select-label-box {\n        margin-right: 14px;\n        font-size: 14px;\n      }\n    }\n\n    .status-checkbox-group-box {\n      .status-label-text {\n        margin-right: 6px;\n      }\n\n      .red-text {\n        color: #ff4d4f;\n      }\n    }\n\n    .area-content-box {\n      .content-header-box {\n        display: flex;\n        align-items: center;\n        justify-content: space-between;\n        padding: 10px 15px 0;\n\n        .header-left {\n          display: flex;\n          z-index: 1000;\n          align-items: center;\n\n          .left-divider {\n            width: 2px;\n            height: 12px;\n            margin: 0 8px;\n          }\n        }\n      }\n\n      .device-content {\n        .device-list-box {\n          margin-right: 20px;\n          padding: 14px 15px 0;\n          overflow: hidden;\n\n          .device-item-layout {\n            margin: 0 20px 16px 0;\n            float: left;\n            cursor: pointer;\n          }\n\n          :deep(.device-item) {\n            width: 188px;\n            min-height: 165px;\n          }\n        }\n      }\n\n      .area-item-layout {\n        margin: 0 20px 10px 0;\n        float: left;\n        cursor: pointer;\n      }\n\n      .area-pagination-box {\n        display: flex;\n        position: fixed;\n        bottom: 20px;\n        left: 50%;\n        transform: translateX(-50%);\n        text-align: center;\n\n        .pagination-item {\n          display: inline-block;\n          width: 30px;\n          height: 30px;\n          margin-right: 10px;\n          border-radius: 50%;\n          font-size: 14px;\n          line-height: 30px;\n          cursor: pointer;\n\n          &:last-child {\n            margin-right: 0;\n          }\n        }\n      }\n    }\n\n    .device-box {\n      :deep(.ant-tabs-tab.ant-tabs-tab-active .ant-tabs-tab-btn) {\n        color: #1890ff;\n      }\n\n      :deep(.ant-tabs-ink-bar) {\n        background: #1890ff;\n      }\n\n      :deep(.ant-tabs-large > .ant-tabs-nav .ant-tabs-tab) {\n        padding: 16px 4px;\n        line-height: 22px;\n      }\n\n      :deep(.ant-tabs-nav) {\n        padding-left: 15px;\n      }\n\n      :deep(.ant-tabs-top > .ant-tabs-nav::before) {\n        border-bottom-color: #d9d9d9;\n      }\n\n      .tab-bar-item {\n        position: relative;\n\n        .tab-tag {\n          position: absolute;\n          top: -10px;\n          right: -20px;\n          width: 20px;\n          height: 20px;\n          border-radius: 10px;\n          background-color: #ff4d4f;\n          color: #fffefe;\n          font-size: 12px;\n          line-height: 20px;\n          text-align: center;\n        }\n      }\n    }\n\n    .device-table-box {\n      .status-icon {\n        display: inline-block;\n        width: 18px;\n        height: 18px;\n        margin: 0 3px;\n        // border: 1px solid rgb(53 52 52);\n        border-radius: 50%;\n\n        &.green {\n          background-color: #52c41a;\n        }\n\n        &.red {\n          background-color: #ff4d4f;\n        }\n\n        &.grey {\n          background-color: #999;\n        }\n\n        &.white {\n          background-color: #f5f4f4;\n        }\n      }\n\n      .table-cell-text {\n        &.green {\n          color: #52c41a;\n        }\n\n        &.red {\n          color: #ff4d4f;\n        }\n\n        &.grey {\n          color: #4e4e4e60;\n        }\n\n        &.white {\n          color: #f5f4f4;\n        }\n      }\n    }\n\n    :deep(.vben-basic-table) {\n      margin-top: -50px;\n    }\n  }\n</style>\n"],"names":["taskRefreshID","createConfirm","useMessage","curStationId","ref","stationList","deviceCount","handleChange","value","option","__async","area","getAreaList","getDeviceType","reload","filterOption","input","filStationOption","getPowerStationList","res","getStations","areaOptions","getAreas","temp","element","handleAreaChange","deviceType","deviceTypeOptions","deviceTypeMap","handleDeviceTypeChange","getDeviceTypes","tempTypes","deviceTypeTemp","statusOptions","checkedAllStatus","checkedStatus","isAbnormalCurrent","abnormalCurrents","handleStatusChange","checkedValue","handleAbnormalCurrent","abnormalCurrent","handleCheckAllStatus","watch","val","abnormalInfo","reactive","deviceData","showColumns","pvErrorNum","getDeviceData","paginationRef","getPaginationRef","getPvDataPage","getColumns","columns","preColumns","_a","statusMap","getITextColor","column","record","registerTable","reloadData","setTableData","useTable","exportData","param","pvStringExport","exportExcelFile","error","handleDetail","handleOpenDeviceDialog","dialogVisible","dialogTitle","selectedDevice","deviceItem","getYcData","getYxData","ycData","getRealTimeYc","props","yxData","yxTime","getRealTimeYx","isAutoRefresh","refreshData","handleAutoRefresh","event","TaskExecutor","onMounted"],"mappings":"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"}