{"version":3,"file":"materialCategory-4133ba9a.js","sources":["../../src/views/baseset/operation/material/materialCategory.ts","../../src/views/baseset/operation/material/materialCategory.vue"],"sourcesContent":["import { defHttp } from '/@/utils/http/axios';\n\nenum Api {\n  getTreeData = '/baseset/material-category/getTreeData',\n  addTreeData = '/baseset/material-category/create',\n  updateTreeData = '/baseset/material-category/update',\n  deleteTreeData = '/baseset/material-category/delete',\n}\n\n// 组织树数据\nexport const getTreeDataApi = (params) =>\ndefHttp.get(\n  {\n    url: Api.getTreeData,\n    params,\n  },\n  {},\n)\n  ;\n\n// 新增\nexport const addTreeDataApi = (params) =>\n  defHttp.post(\n    {\n      url: Api.addTreeData,\n      params,\n    },\n    {},\n  );\n\n// 修改\nexport const updateTreeDataApi = (params) =>\n  defHttp.put(\n    {\n      url: Api.updateTreeData,\n      params,\n    },\n    {},\n  );\n\n// 删除\nexport const deleteTreeDataApi = (params) =>\n  defHttp.delete(\n    {\n      url: Api.deleteTreeData,\n      params,\n    },\n    {},\n  );\n","<template>\n  <!-- 物料分类树 -->\n  <CommonTree\n    title=\"物料分类\"\n    @select=\"handleSelect\"\n    :value=\"treeData\"\n    @refresh=\"reload\"\n    @add=\"handleCreate\"\n    @edit=\"handleEdit\"\n    @delete=\"handleDelete\"\n    :isShowOperationBtns=\"true\"\n    class=\"left-tree-layout\"\n    :fieldNames=\"{ key: 'id', title: 'name' }\"\n  />\n  <Dialog v-model:visible=\"openDialog\" \n    title=\"添加物料类别\" \n    @ok=\"handleSuccess\"       \n      :width=\"600\"\n      :height=\"350\">\n    <a-form ref=\"modalFormRef\" :model=\"formState\" name=\"categoryForm\">\n      <a-row :gutter=\"32\">\n        <a-col v-show=\"true\" :span=\"24\">\n          <a-form-item\n            label=\"所属类型\"\n            name=\"parentName\"\n            :labelCol=\"{ span: 5 }\"\n            :wrapperCol=\"15\"\n            :rules=\"[{ required: false, message: '请选择编码范围' }]\"\n          >\n            <a-input v-model:value=\"formState.parentName\" disabled />\n          </a-form-item>\n          <a-form-item\n            label=\"所属类型编码\"\n            name=\"parentCode\"\n            :labelCol=\"{ span: 5 }\"\n            :rules=\"[{ required: false, message: '请选择编码范围' }]\"\n          >\n            <a-input v-model:value=\"formState.parentCode\" disabled />\n          </a-form-item>\n          <a-form-item\n            label=\"物料类型\"\n            name=\"name\"\n            :labelCol=\"{ span: 5 }\"\n            :rules=\"[{ required: true, message: '请选择编码范围' }]\"\n          >\n            <a-input v-model:value=\"formState.name\" />\n          </a-form-item>\n          <a-form-item\n            label=\"物料类型编码\"\n            name=\"name\"\n            :labelCol=\"{ span: 5 }\"\n            :rules=\"[{ required: false, message: '' }]\"\n          >\n            <a-input v-model:value=\"formState.code\" disabled/>\n          </a-form-item>\n        </a-col>\n      </a-row>\n    </a-form>\n  </Dialog>\n\n</template>\n<script lang=\"ts\" setup>\n  import { onMounted, reactive, ref } from 'vue';\n  import { TreeItem } from '/@/components/Tree';\n  import CommonTree from '@/components/Framework/Tree/CommonTree.vue';\n  import Dialog from '@/components/Framework/Modal/Dialog.vue';\n  import { message, FormInstance } from 'ant-design-vue';\n  import {\n    getTreeDataApi,\n    addTreeDataApi,\n    updateTreeDataApi,\n    deleteTreeDataApi,\n  } from './materialCategory'; // 左侧树数据\n\n  const treeData = ref<TreeItem[]>([]);\n\n  const emit = defineEmits(['select-tree']);\n  const isMust = ref(true);\n  const selectedNode = ref({});\n  const dataList = ref([]);\n  const openDialog = ref<boolean>(false);\n\n  const formState = reactive({\n    parentId: '',\n    parentName: '',\n    parentCode: '',\n    name: '',\n    code: '',\n    id: '',\n  });\n  const modalFormRef = ref<FormInstance>();\n  const getTreeData = async () => {\n    let param = {};\n    dataList.value = await getTreeDataApi(param);\n    let data = dataList.value.result.filter((father) => {\n      let sub = dataList.value.result.filter((child) => {\n        return father.id == child.parentId && father.id != '';\n      });\n      sub.length > 0 ? (father.children = sub) : '';\n\n      return father.parentId == '';\n    });\n\n    treeData.value = data;\n  };\n  function reload() {\n    getTreeData();\n  }\n  const reset = () => {\n    formState.parentId = '';\n    formState.parentName = '';\n    formState.parentCode = '';\n    formState.name = '';\n    formState.code = '';\n    formState.id = '';\n  };\n  // 添加\n  function handleCreate(node) {\n    reset();\n    if (node) {\n      formState.parentId = node.id;\n      formState.parentCode = node.code;\n      formState.parentName = node.name;\n      formState.id = '';\n    }\n    isMust.value = node && node.id != '';\n    openDialog.value = true;\n  }\n  // 删除\n  function handleDelete(node) {\n    if (node) {\n      if (hasChildren(node)) {\n        message.info('有子节点,不能删除');\n        return;\n      }\n      deleteTreeDataApi('?id=' + node.id).then(() => {\n        message.success('已删除。');\n        reload();\n      });\n    }\n  }\n\n  function handleEdit(node) {\n    reset();\n    if (node) {\n      let tmp = getParentNode(node.parentId,dataList.value.result)||{};\n      let parent = {\n        id: tmp.id||'',\n        code: tmp.code||'',\n        name: tmp.name||'',\n      };\n\n\n      formState.parentId = parent.id;\n      formState.parentCode = parent.code;\n      formState.parentName = parent.name;\n      formState.name = node.name;\n      formState.code = node.code;\n      formState.id = node.id;\n      isMust.value = parent && parent.id != '';\n    } else {\n      message.info('请选择节点');\n      return false;\n    }\n\n    openDialog.value = true;\n  }\n\n  function getParentNode(parentId,dataList){\n    for(let i=0;i<dataList.length;i++){\n        let tmp = dataList[i];\n        if(tmp.id == parentId){\n          return tmp;\n        }\n        if(tmp.children?.length>0){\n          let rs = getParentNode(parentId,tmp.children);\n          if(rs != null){\n              return rs;\n          }\n        }\n    }\n    return null;\n  }\n\n  // 数据创建成功回调函数\n  const handleSuccess = async ()=> {\n    let form =modalFormRef.value;\n    if(form == null){\n      return;\n    }\n    form.validateFields().then(async () => {\n\n      if (formState.id == '') {\n        let rsp =await  addTreeDataApi(formState) as any;\n        if(rsp.code == 0){\n            message.success('创建成功');\n            reload();\n  \n            openDialog.value = false;\n        } else {\n          message.error('创建失败');\n        }\n      } else {\n        let rsp = await updateTreeDataApi(formState) as any;\n        if(rsp.code == 0){\n            message.success('更新成功');\n            reload();\n            openDialog.value = false;\n        } else {\n          message.error('更新失败');\n        }\n      }\n    });\n  }\n\n  // 左侧树状菜单选中事件\n  function handleSelect(node = {}) {\n    if (node) {\n      selectedNode.value = node;\n      selectedNode.value.hasChildren = hasChildren(node);\n    } else {\n      selectedNode.value = {};\n      formState.parentId = '';\n      formState.parentCode = '';\n      formState.parentName = '';\n      formState.name = '';\n      formState.id = '';\n    }\n    emit('select-tree', node);\n  }\n\n  function hasChildren(node) {\n    for (let i = 0; i < dataList.value.result.length; i++) {\n      if (dataList.value.result[i].parentId == node.id) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  // 启动执行代码\n  onMounted(() => {\n    getTreeData();\n  });\n</script>\n<style lang=\"less\" scoped>\n  .dialog-loading {\n    position: absolute;\n    z-index: 1000 !important;\n    top: 45%;\n    left: 45%;\n  }\n\n  .dialog-mask {\n    position: absolute;\n    z-index: 1001 !important;\n    top: -1px;\n    width: 100%;\n    height: 100%;\n    opacity: 0.3;\n    background: #ccc;\n  }\n\n  .left-tree-layout {\n    width: 298px;\n    border-radius: 2px;\n  }\n</style>\n\n"],"names":["getTreeDataApi","params","defHttp","addTreeDataApi","updateTreeDataApi","deleteTreeDataApi","treeData","ref","isMust","selectedNode","dataList","openDialog","formState","reactive","modalFormRef","getTreeData","__async","param","data","father","sub","child","reload","reset","handleCreate","node","handleDelete","hasChildren","message","handleEdit","tmp","getParentNode","parent","parentId","i","_a","rs","handleSuccess","form","handleSelect","emit","onMounted"],"mappings":"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"}