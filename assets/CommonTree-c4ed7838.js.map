{"version":3,"file":"CommonTree-c4ed7838.js","sources":["../../src/components/Framework/Tree/CommonTree.vue"],"sourcesContent":["<!--\n * @Description: commonTree组件\n * @Date: 2023-09-22 08:46:00\n * @LastEditTime: 2023-11-13 11:12:36\n * @FilePath: \\ygwl-framework\\src\\components\\Framework\\Tree\\CommonTree.vue\n-->\n<template>\n  <div class=\"overflow-hidden bg-white\" :class=\"$attrs.class\" :style=\"props.treeStyle\">\n    <BasicTree\n      :title=\"title\"\n      :toolbar=\"toolbar\"\n      :search=\"props.search\"\n      :canEdit=\"props.canEdit\"\n      :canAdd=\"props.canAdd\"\n      :canDelete=\"props.canDelete\"\n      :treeWrapperClassName=\"`${treeWrapperHeightClass} overflow-auto`\"\n      :clickRowToExpand=\"false\"\n      :treeData=\"treeData\"\n      :fieldNames=\"fieldNames\"\n      @select=\"handleSelect\"\n      :isShowOperationBtns=\"isShowOperationBtns\"\n      ref=\"basicTreeRef\"\n      class=\"fit-basic-tree\"\n      :checkable=\"checkable\"\n      :simple=\"simple\"\n      @check=\"handleCheck\"\n      :expandedKeys=\"curExpandedKeys\"\n      :selectedKeys=\"curSelectedKeys\"\n      :expandOnSearch=\"true\"\n    >\n      <template #headerTitle>\n        <span class=\"vben-basic-title\" :title=\"title\">{{ title }}</span>\n      </template>\n      <template #title=\"nodeItem\">\n        <a-tooltip\n          :visible=\"\n            nodeItem[fieldNames.key || 'key'] === mouseenterNode[fieldNames.key || 'key'] &&\n            mouseenterNode.isTooltipShow\n          \"\n        >\n          <template #title>{{ nodeItem[fieldNames.title || 'title'] }}</template>\n          <a-badge\n            v-if=\"nodeItem.badge\"\n            :count=\"nodeItem.badge\"\n            :offset=\"[16, 0]\"\n            :numberStyle=\"{ transform: 'scale(0.8)' }\"\n          >\n            <span\n              class=\"common-tree-node-text\"\n              style=\"line-height: 28px\"\n              @mouseenter=\"handleTooltipShow(nodeItem, $event)\"\n              @mouseleave=\"handleTooltipDisplay\"\n              >{{ nodeItem[fieldNames.title || 'title'] }}</span\n            >\n          </a-badge>\n          <span\n            v-else\n            class=\"common-tree-node-text\"\n            @mouseenter=\"handleTooltipShow(nodeItem, $event)\"\n            @mouseleave=\"handleTooltipDisplay\"\n            >{{ nodeItem[fieldNames.title || 'title'] }}</span\n          >\n        </a-tooltip>\n      </template>\n    </BasicTree>\n  </div>\n</template>\n<script lang=\"ts\" setup>\n  import { onMounted, ref, watch, provide, unref, computed, isProxy, toRaw, reactive } from 'vue';\n  import { BasicTree, TreeItem, TreeActionType } from '/@/components/Tree';\n  import { type Nullable } from '@vben/types';\n  import type { PropType } from 'vue';\n\n  const treeData = ref<TreeItem[]>([]);\n  const props = defineProps({\n    title: { type: String }, // 树标题\n    value: { type: Array }, // 树的数据\n    className: { type: String }, // 组件的样式class名\n    isShowOperationBtns: { type: Boolean, default: false }, // 是否在头部显示新增、编辑、删除、刷新的按钮\n    toolbar: { type: Boolean, default: true }, // 是否需要头部工具栏\n    search: { type: Boolean, default: true }, // 是否需要搜索栏\n    canEdit: { type: Boolean, default: true }, // 能否编辑操作\n    canAdd: { type: Boolean, default: true }, // 能否新增操作\n    canDelete: { type: Boolean, default: true }, // 能否删除操作\n    checkable: { type: Boolean, default: false }, // 树节点前是否有复选框\n    simple: { type: Boolean, default: false }, // 是否使用 simple 模式\n    fieldNames: {\n      type: Object,\n      default: new Object(),\n    }, // 配置树的key和title取值字段名，例如{ key: 'nodeId', title: 'nodeName' }\n    expandedKeys: { type: Array as PropType<string[]>, default: [] }, // 选中的树节点\n    selectedKeys: { type: Array as PropType<string[]>, default: [] }, // 选中的树节点\n    treeStyle: { type: String, default: 'margin: 10px 0 10px 10px' },\n  });\n  const emit = defineEmits(['select', 'selected', 'edit', 'add', 'delete', 'refresh', 'check']);\n\n  const selectedNode = ref('');\n  const curSelectedKeys = ref<any[]>([]);\n  const curExpandedKeys = ref<any[]>([]);\n\n  const basicTreeRef = ref<Nullable<TreeActionType>>(null);\n\n  function getTree() {\n    const tree = unref(basicTreeRef);\n    if (!tree) {\n      throw new Error('tree is null!');\n    }\n    return tree;\n  }\n\n  // 获取选中树节点\n  function getSelectedTreeNode() {\n    return getTree().getSelectedNode(selectedNode.value);\n  }\n\n  // 获取\n  function getPlainObj(obj) {\n    if (obj) {\n      return isProxy(obj) ? toRaw(obj.__v_raw) : obj;\n    } else {\n      return null;\n    }\n  }\n\n  // 选择\n  function handleSelect(keys) {\n    let rawNode = {};\n    if (keys && keys.length > 0) {\n      selectedNode.value = keys[0];\n      const node = getTree().getSelectedNode(selectedNode.value);\n      rawNode = getPlainObj(node);\n    } else {\n      selectedNode.value = '';\n    }\n    emit('select', rawNode);\n  }\n\n  // 复选框勾选\n  function handleCheck(keys, e) {\n    emit('check', e.checkedNodes);\n  }\n\n  // 编辑\n  function handleTreeEdit() {\n    const node = getTree().getSelectedNode(selectedNode.value) || null;\n    emit('edit', node);\n  }\n  provide('handleTreeEdit', handleTreeEdit);\n\n  // 新增\n  function handleTreeAdd() {\n    const node = getTree().getSelectedNode(selectedNode.value) || null;\n    emit('add', node);\n  }\n  provide('handleTreeAdd', handleTreeAdd);\n\n  // 删除\n  function handleTreeDelete() {\n    const node = getTree().getSelectedNode(selectedNode.value) || null;\n    emit('delete', node);\n  }\n  provide('handleTreeDelete', handleTreeDelete);\n\n  // 刷新\n  function handleTreeRefresh() {\n    emit('refresh');\n  }\n  provide('handleTreeRefresh', handleTreeRefresh);\n\n  // 使用 watch 监听 value 的变化，并在变化时更新 treeData\n  watch(\n    () => props.value,\n    (newValue) => {\n      if (newValue) {\n        // 当监听到的数据为null时，不能进行设置，否则存在null时报错导致后续无法渲染\n        treeData.value = newValue as unknown as TreeItem[];\n      }\n    },\n    {\n      deep: true,\n    },\n  );\n\n  // 计算tree高度\n  const treeWrapperHeightClass = computed(() => {\n    return props.search ? 'h-[calc(100%-82px)]' : 'h-[calc(100%-48px)]';\n  });\n\n  // 勾选所有\n  function checkAll() {\n    getTree().checkAll(true);\n  }\n  // 取消勾选\n  function cancelCheck() {\n    getTree().checkAll(false);\n  }\n\n  // 勾选所有\n  function loadBadge() {\n    getTree().handleBadge();\n  }\n\n  // 获取勾选节点\n  function getCheckedKeys() {\n    let checkedKeys = getTree().getCheckedKeys();\n    let checkedNodes = [];\n    checkedKeys.forEach((item) => {\n      checkedNodes.push(getTree().getSelectedNode(item));\n    });\n    return checkedNodes;\n  }\n\n  watch(\n    () => props.selectedKeys,\n    (newValue) => {\n      selectedNode.value = newValue[0];\n      curSelectedKeys.value = props.selectedKeys;\n    },\n    {\n      deep: true,\n    },\n  );\n\n  watch(\n    () => props.expandedKeys,\n    () => {\n      curExpandedKeys.value = props.expandedKeys;\n    },\n    {\n      deep: true,\n    },\n  );\n\n  // 提示气泡的显示隐藏\n  const mouseenterNode = reactive({ isTooltipShow: false });\n  const handleTooltipShow = (nodeItem, e) => {\n    Object.assign(mouseenterNode, nodeItem);\n    mouseenterNode.isTooltipShow = e.target.scrollWidth > e.target.offsetWidth;\n  };\n  const handleTooltipDisplay = () => {\n    mouseenterNode.isTooltipShow = false;\n  };\n\n  onMounted(() => {\n    treeData.value = props.value as unknown as TreeItem[];\n    curSelectedKeys.value = props.selectedKeys;\n    curExpandedKeys.value = props.expandedKeys;\n  });\n\n  defineExpose({ getSelectedTreeNode, checkAll, getCheckedKeys, loadBadge, cancelCheck });\n</script>\n<style lang=\"less\" scoped>\n  .fit-basic-tree {\n    :deep(.ant-tree .ant-tree-node-content-wrapper.ant-tree-node-selected) {\n      background: none;\n      color: #1890ff;\n    }\n\n    .common-tree-node-text {\n      overflow: hidden;\n      text-overflow: ellipsis;\n      white-space: nowrap;\n    }\n\n    :deep(.ant-tree-switcher) {\n      width: 18px;\n      line-height: 28px;\n    }\n    :deep(.ant-tree .ant-tree-node-content-wrapper) {\n      min-height: 28px;\n      line-height: 28px;\n    }\n    :deep(.ant-tree .ant-tree-treenode) {\n      padding-left: 9px;\n    }\n    :deep(.ant-tree) {\n      padding-top: 3px;\n    }\n    :deep(.vben-tree__title) {\n      padding-left: 4px;\n    }\n    :deep(.vben-basic-title) {\n      display: inline-block;\n      white-space: nowrap;\n      overflow: hidden;\n      text-overflow: ellipsis;\n      flex: 1;\n    }\n    :deep(.vben-tree-header .ant-btn-sm) {\n      padding: 0 6px;\n    }\n    :deep(.vben-tree-header .ant-input-group-addon) {\n      display: none;\n    }\n    .vben-basic-title {\n      padding-left: 7px;\n      cursor: pointer;\n    }\n    :deep(.fix-tooltip-position) {\n      left: auto !important;\n      top: -36px !important;\n      right: 6px !important;\n    }\n  }\n</style>\n"],"names":["treeData","ref","selectedNode","curSelectedKeys","curExpandedKeys","basicTreeRef","getTree","tree","unref","getSelectedTreeNode","getPlainObj","obj","isProxy","toRaw","handleSelect","keys","rawNode","node","emit","handleCheck","e","handleTreeEdit","provide","handleTreeAdd","handleTreeDelete","handleTreeRefresh","watch","props","newValue","treeWrapperHeightClass","computed","checkAll","cancelCheck","loadBadge","getCheckedKeys","checkedKeys","checkedNodes","item","mouseenterNode","reactive","handleTooltipShow","nodeItem","handleTooltipDisplay","onMounted","__expose"],"mappings":"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"}