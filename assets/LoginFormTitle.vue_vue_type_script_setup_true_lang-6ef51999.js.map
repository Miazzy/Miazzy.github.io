{"version":3,"file":"LoginFormTitle.vue_vue_type_script_setup_true_lang-6ef51999.js","sources":["../../src/views/sys/login/useLogin.ts","../../src/views/sys/login/LoginFormTitle.vue"],"sourcesContent":["import type { ValidationRule, FormInstance } from 'ant-design-vue/lib/form/Form';\nimport type { RuleObject, NamePath } from 'ant-design-vue/lib/form/interface';\nimport { ref, computed, unref, Ref } from 'vue';\nimport { useI18n } from '/@/hooks/web/useI18n';\n\nexport enum LoginStateEnum {\n  LOGIN,\n  REGISTER,\n  RESET_PASSWORD,\n  MOBILE,\n  QR_CODE,\n}\n\nconst currentState = ref(LoginStateEnum.LOGIN);\n\n// 这里也可以优化\n// import { createGlobalState } from '@vueuse/core'\n\nexport function useLoginState() {\n  function setLoginState(state: LoginStateEnum) {\n    currentState.value = state;\n  }\n\n  const getLoginState = computed(() => currentState.value);\n\n  function handleBackLogin() {\n    setLoginState(LoginStateEnum.LOGIN);\n  }\n\n  return { setLoginState, getLoginState, handleBackLogin };\n}\n\nexport function useFormValid<T extends Object = any>(formRef: Ref<FormInstance>) {\n  const validate = computed(() => {\n    const form = unref(formRef);\n    return form?.validate ?? ((_nameList?: NamePath) => Promise.resolve());\n  });\n\n  async function validForm() {\n    const form = unref(formRef);\n    if (!form) return;\n    const data = await form.validate();\n    return data as T;\n  }\n\n  return { validate, validForm };\n}\n\nexport function useFormRules(formData?: Recordable) {\n  const { t } = useI18n();\n\n  const getAccountFormRule = computed(() => createRule(t('sys.login.accountPlaceholder')));\n  const getPasswordFormRule = computed(() => createRule(t('sys.login.passwordPlaceholder')));\n  const getSmsFormRule = computed(() => createRule(t('sys.login.smsPlaceholder')));\n  const getMobileFormRule = computed(() => createRule(t('sys.login.mobilePlaceholder')));\n\n  const validatePolicy = async (_: RuleObject, value: boolean) => {\n    return !value ? Promise.reject(t('sys.login.policyPlaceholder')) : Promise.resolve();\n  };\n\n  const validateConfirmPassword = (password: string) => {\n    return async (_: RuleObject, value: string) => {\n      if (!value) {\n        return Promise.reject(t('sys.login.passwordPlaceholder'));\n      }\n      if (value !== password) {\n        return Promise.reject(t('sys.login.diffPwd'));\n      }\n      return Promise.resolve();\n    };\n  };\n\n  const getFormRules = computed((): { [k: string]: ValidationRule | ValidationRule[] } => {\n    const accountFormRule = unref(getAccountFormRule);\n    const passwordFormRule = unref(getPasswordFormRule);\n    const smsFormRule = unref(getSmsFormRule);\n    const mobileFormRule = unref(getMobileFormRule);\n\n    const mobileRule = {\n      sms: smsFormRule,\n      mobile: mobileFormRule,\n    };\n    switch (unref(currentState)) {\n      // register form rules\n      case LoginStateEnum.REGISTER:\n        return {\n          account: accountFormRule,\n          password: passwordFormRule,\n          confirmPassword: [\n            { validator: validateConfirmPassword(formData?.password), trigger: 'change' },\n          ],\n          policy: [{ validator: validatePolicy, trigger: 'change' }],\n          ...mobileRule,\n        };\n\n      // reset password form rules\n      case LoginStateEnum.RESET_PASSWORD:\n        return {\n          account: accountFormRule,\n          ...mobileRule,\n        };\n\n      // mobile form rules\n      case LoginStateEnum.MOBILE:\n        return mobileRule;\n\n      // login form rules\n      default:\n        return {\n          account: accountFormRule,\n          password: passwordFormRule,\n        };\n    }\n  });\n  return { getFormRules };\n}\n\nfunction createRule(message: string) {\n  return [\n    {\n      required: true,\n      message,\n      trigger: 'change',\n    },\n  ];\n}\n","<template>\n  <h2 class=\"font-bold text-center enter-x xl:text-left login-form-title\">\n    {{ getFormTitle }}\n  </h2>\n</template>\n<script lang=\"ts\" setup>\n  import { computed, unref } from 'vue';\n  import { useI18n } from '/@/hooks/web/useI18n';\n  import { LoginStateEnum, useLoginState } from './useLogin';\n\n  const { t } = useI18n();\n\n  const { getLoginState } = useLoginState();\n\n  const getFormTitle = computed(() => {\n    const titleObj = {\n      [LoginStateEnum.RESET_PASSWORD]: t('sys.login.forgetFormTitle'),\n      [LoginStateEnum.LOGIN]: t('sys.login.signInFormTitle'),\n      [LoginStateEnum.REGISTER]: t('sys.login.signUpFormTitle'),\n      [LoginStateEnum.MOBILE]: t('sys.login.mobileSignInFormTitle'),\n      [LoginStateEnum.QR_CODE]: t('sys.login.qrSignInFormTitle'),\n    };\n    return titleObj[unref(getLoginState)];\n  });\n</script>"],"names":["LoginStateEnum","LoginStateEnum2","currentState","ref","useLoginState","setLoginState","state","getLoginState","computed","handleBackLogin","useFormValid","formRef","validate","form","unref","_a","_nameList","validForm","__async","useFormRules","formData","t","useI18n","getAccountFormRule","createRule","getPasswordFormRule","getSmsFormRule","getMobileFormRule","validatePolicy","_","value","validateConfirmPassword","password","accountFormRule","passwordFormRule","smsFormRule","mobileFormRule","mobileRule","__spreadValues","message","getFormTitle"],"mappings":"spBAKY,IAAAA,GAAAA,IACVA,EAAAC,EAAA,MAAA,CAAA,EAAA,QACAD,EAAAC,EAAA,SAAA,CAAA,EAAA,WACAD,EAAAC,EAAA,eAAA,CAAA,EAAA,iBACAD,EAAAC,EAAA,OAAA,CAAA,EAAA,SACAD,EAAAC,EAAA,QAAA,CAAA,EAAA,UALUD,IAAAA,GAAA,CAAA,CAAA,EAQZ,MAAME,EAAeC,EAAI,GAKlB,SAASC,GAAgB,CAC9B,SAASC,EAAcC,EAAuB,CAC5CJ,EAAa,MAAQI,CACvB,CAEA,MAAMC,EAAgBC,EAAS,IAAMN,EAAa,KAAK,EAEvD,SAASO,GAAkB,CACzBJ,EAAc,CAAoB,CACpC,CAEO,MAAA,CAAE,cAAAA,EAAe,cAAAE,EAAe,gBAAAE,EACzC,CAEO,SAASC,EAAqCC,EAA4B,CACzE,MAAAC,EAAWJ,EAAS,IAAM,OACxB,MAAAK,EAAOC,EAAMH,CAAO,EAC1B,OAAOI,EAAAF,GAAA,YAAAA,EAAM,WAAN,KAAAE,EAAoBC,GAAyB,QAAQ,QAAQ,CAAA,CACrE,EAED,SAAeC,GAAY,QAAAC,EAAA,sBACnB,MAAAL,EAAOC,EAAMH,CAAO,EAC1B,OAAKE,EACQ,MAAMA,EAAK,WADb,MAGb,GAEO,MAAA,CAAE,SAAAD,EAAU,UAAAK,EACrB,CAEO,SAASE,EAAaC,EAAuB,CAC5C,KAAA,CAAE,EAAAC,GAAMC,IAERC,EAAqBf,EAAS,IAAMgB,EAAWH,EAAE,8BAA8B,CAAC,CAAC,EACjFI,EAAsBjB,EAAS,IAAMgB,EAAWH,EAAE,+BAA+B,CAAC,CAAC,EACnFK,EAAiBlB,EAAS,IAAMgB,EAAWH,EAAE,0BAA0B,CAAC,CAAC,EACzEM,EAAoBnB,EAAS,IAAMgB,EAAWH,EAAE,6BAA6B,CAAC,CAAC,EAE/EO,EAAiB,CAAOC,EAAeC,IAAmBZ,EAAA,sBACvD,OAACY,EAA2D,QAAQ,UAA3D,QAAQ,OAAOT,EAAE,6BAA6B,CAAC,CAAoB,GAG/EU,EAA2BC,GACxB,CAAOH,EAAeC,IAAkBZ,EAAA,sBAC7C,OAAKY,EAGDA,IAAUE,EACL,QAAQ,OAAOX,EAAE,mBAAmB,CAAC,EAEvC,QAAQ,UALN,QAAQ,OAAOA,EAAE,+BAA+B,CAAC,CAKnC,GA8C3B,MAAO,CAAE,aA1CYb,EAAS,IAA0D,CAChF,MAAAyB,EAAkBnB,EAAMS,CAAkB,EAC1CW,EAAmBpB,EAAMW,CAAmB,EAC5CU,EAAcrB,EAAMY,CAAc,EAClCU,EAAiBtB,EAAMa,CAAiB,EAExCU,EAAa,CACjB,IAAKF,EACL,OAAQC,CAAA,EAEF,OAAAtB,EAAMZ,CAAY,EAAG,CAE3B,IAAK,GACI,OAAAoC,EAAA,CACL,QAASL,EACT,SAAUC,EACV,gBAAiB,CACf,CAAE,UAAWH,EAAwBX,GAAA,YAAAA,EAAU,QAAQ,EAAG,QAAS,QAAS,CAC9E,EACA,OAAQ,CAAC,CAAE,UAAWQ,EAAgB,QAAS,SAAU,GACtDS,GAIP,IAAK,GACI,OAAAC,EAAA,CACL,QAASL,GACNI,GAIP,IAAK,GACI,OAAAA,EAGT,QACS,MAAA,CACL,QAASJ,EACT,SAAUC,CAAA,CAEhB,CAAA,CACD,CACqB,CACxB,CAEA,SAASV,EAAWe,EAAiB,CAC5B,MAAA,CACL,CACE,SAAU,GACV,QAAAA,EACA,QAAS,QACX,CAAA,CAEJ,qHCnHQ,KAAA,CAAE,EAAAlB,GAAMC,IAER,CAAE,cAAAf,GAAkBH,IAEpBoC,EAAehC,EAAS,KACX,CACf,CAACR,EAAe,cAAc,EAAGqB,EAAE,2BAA2B,EAC9D,CAACrB,EAAe,KAAK,EAAGqB,EAAE,2BAA2B,EACrD,CAACrB,EAAe,QAAQ,EAAGqB,EAAE,2BAA2B,EACxD,CAACrB,EAAe,MAAM,EAAGqB,EAAE,iCAAiC,EAC5D,CAACrB,EAAe,OAAO,EAAGqB,EAAE,6BAA6B,CAAA,GAE3CP,EAAMP,CAAa,CAAC,CACrC"}