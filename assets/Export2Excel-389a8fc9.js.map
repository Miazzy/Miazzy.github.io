{"version":3,"file":"Export2Excel-389a8fc9.js","sources":["../../src/components/Excel/src/Export2Excel.ts"],"sourcesContent":["import * as xlsx from 'xlsx';\nimport type { WorkBook } from 'xlsx';\nimport type { JsonToSheet, AoAToSheet } from './typing';\nimport { AoaToMultipleSheet, JsonToMultipleSheet } from './typing';\n\nconst { utils, writeFile } = xlsx;\n\nconst DEF_FILE_NAME = 'excel-list.xlsx';\nconst DEF_SHEET_NAME = 'sheet';\n\n/**\n * @param data source data\n * @param worksheet worksheet object\n * @param min min width\n */\nfunction setColumnWidth(data, worksheet, min = 3) {\n  const obj = {};\n  worksheet['!cols'] = [];\n  data.forEach((item) => {\n    Object.keys(item).forEach((key) => {\n      const cur = item[key];\n      const length = cur?.length ?? min;\n      obj[key] = Math.max(length, obj[key] ?? min);\n    });\n  });\n  Object.keys(obj).forEach((key) => {\n    worksheet['!cols'].push({\n      wch: obj[key],\n    });\n  });\n}\n\nexport function jsonToSheetXlsx<T = any>({\n  data,\n  header,\n  filename = DEF_FILE_NAME,\n  sheetName = DEF_SHEET_NAME,\n  json2sheetOpts = {},\n  write2excelOpts = { bookType: 'xlsx' },\n}: JsonToSheet<T>) {\n  const arrData = [...data];\n  if (header) {\n    arrData.unshift(header);\n    json2sheetOpts.skipHeader = true;\n  }\n\n  const worksheet = utils.json_to_sheet(arrData, json2sheetOpts);\n  setColumnWidth(arrData, worksheet);\n  /* add worksheet to workbook */\n  const workbook: WorkBook = {\n    SheetNames: [sheetName],\n    Sheets: {\n      [sheetName]: worksheet,\n    },\n  };\n  /* output format determined by filename */\n  writeFile(workbook, filename, write2excelOpts);\n  /* at this point, out.xlsb will have been downloaded */\n}\n\nexport function aoaToSheetXlsx<T = any>({\n  data,\n  header,\n  filename = DEF_FILE_NAME,\n  write2excelOpts = { bookType: 'xlsx' },\n}: AoAToSheet<T>) {\n  const arrData = [...data];\n  if (header) {\n    arrData.unshift(header);\n  }\n\n  const worksheet = utils.aoa_to_sheet(arrData);\n\n  /* add worksheet to workbook */\n  const workbook: WorkBook = {\n    SheetNames: [filename],\n    Sheets: {\n      [filename]: worksheet,\n    },\n  };\n  /* output format determined by filename */\n  writeFile(workbook, filename, write2excelOpts);\n  /* at this point, out.xlsb will have been downloaded */\n}\n\n/**\n * json导出多Sheet的Xlsx\n * @param sheetList 多sheet配置\n * @param filename 文件名(包含后缀)\n * @param write2excelOpts 文件配置\n */\nexport function jsonToMultipleSheetXlsx<T = any>({\n  sheetList,\n  filename = DEF_FILE_NAME,\n  write2excelOpts = { bookType: 'xlsx' },\n}: JsonToMultipleSheet<T>) {\n  const workbook: WorkBook = {\n    SheetNames: [],\n    Sheets: {},\n  };\n  sheetList.forEach((p, index) => {\n    const arrData = [...p.data];\n    if (p.header) {\n      arrData.unshift(p.header);\n      p.json2sheetOpts = p.json2sheetOpts || {};\n      p.json2sheetOpts.skipHeader = true;\n    }\n\n    const worksheet = utils.json_to_sheet(arrData, p.json2sheetOpts);\n    setColumnWidth(arrData, worksheet);\n\n    p.sheetName = p.sheetName || `${DEF_SHEET_NAME}${index}`;\n    workbook.SheetNames.push(p.sheetName);\n    workbook.Sheets[p.sheetName] = worksheet;\n  });\n  writeFile(workbook, filename, write2excelOpts);\n}\n\n/**\n * aoa导出多Sheet的Xlsx\n * @param sheetList 多sheet配置\n * @param filename 文件名(包含后缀)\n * @param write2excelOpts 文件配置\n */\nexport function aoaToMultipleSheetXlsx<T = any>({\n  sheetList,\n  filename = DEF_FILE_NAME,\n  write2excelOpts = { bookType: 'xlsx' },\n}: AoaToMultipleSheet<T>) {\n  const workbook: WorkBook = {\n    SheetNames: [],\n    Sheets: {},\n  };\n  sheetList.forEach((p, index) => {\n    const arrData = [...p.data];\n    if (p.header) {\n      arrData.unshift(p.header);\n    }\n    const worksheet = utils.aoa_to_sheet(arrData);\n\n    p.sheetName = p.sheetName || `${DEF_SHEET_NAME}${index}`;\n    workbook.SheetNames.push(p.sheetName);\n    workbook.Sheets[p.sheetName] = worksheet;\n  });\n  /* output format determined by filename */\n  writeFile(workbook, filename, write2excelOpts);\n  /* at this point, out.xlsb will have been downloaded */\n}\n"],"names":["utils","writeFile","xlsx","DEF_FILE_NAME","DEF_SHEET_NAME","setColumnWidth","data","worksheet","min","obj","item","key","cur","length","_a","_b","jsonToSheetXlsx","header","filename","sheetName","json2sheetOpts","write2excelOpts","arrData","workbook"],"mappings":"wCAKA,KAAM,CAAE,MAAAA,EAAO,UAAAC,CAAc,EAAAC,EAEvBC,EAAgB,kBAChBC,EAAiB,QAOvB,SAASC,EAAeC,EAAMC,EAAWC,EAAM,EAAG,CAChD,MAAMC,EAAM,CAAA,EACFF,EAAA,OAAO,EAAI,GAChBD,EAAA,QAASI,GAAS,CACrB,OAAO,KAAKA,CAAI,EAAE,QAASC,GAAQ,SAC3B,MAAAC,EAAMF,EAAKC,CAAG,EACdE,GAASC,EAAAF,GAAA,YAAAA,EAAK,SAAL,KAAAE,EAAeN,EAC1BC,EAAAE,CAAG,EAAI,KAAK,IAAIE,GAAQE,EAAAN,EAAIE,CAAG,IAAP,KAAAI,EAAYP,CAAG,CAAA,CAC5C,CAAA,CACF,EACD,OAAO,KAAKC,CAAG,EAAE,QAASE,GAAQ,CACtBJ,EAAA,OAAO,EAAE,KAAK,CACtB,IAAKE,EAAIE,CAAG,CAAA,CACb,CAAA,CACF,CACH,CAEO,SAASK,EAAyB,CACvC,KAAAV,EACA,OAAAW,EACA,SAAAC,EAAWf,EACX,UAAAgB,EAAYf,EACZ,eAAAgB,EAAiB,CAAC,EAClB,gBAAAC,EAAkB,CAAE,SAAU,MAAO,CACvC,EAAmB,CACX,MAAAC,EAAU,CAAC,GAAGhB,CAAI,EACpBW,IACFK,EAAQ,QAAQL,CAAM,EACtBG,EAAe,WAAa,IAG9B,MAAMb,EAAYP,EAAM,cAAcsB,EAASF,CAAc,EAC7Df,EAAeiB,EAASf,CAAS,EAEjC,MAAMgB,EAAqB,CACzB,WAAY,CAACJ,CAAS,EACtB,OAAQ,CACN,CAACA,CAAS,EAAGZ,CACf,CAAA,EAGQN,EAAAsB,EAAUL,EAAUG,CAAe,CAE/C"}