{"version":3,"file":"useTabs-2b062e85.js","sources":["../../src/hooks/web/useTabs.ts"],"sourcesContent":["import type { RouteLocationNormalized, Router } from 'vue-router';\n\nimport { useRouter } from 'vue-router';\nimport { unref } from 'vue';\n\nimport { useMultipleTabStore } from '/@/store/modules/multipleTab';\nimport { useAppStore } from '/@/store/modules/app';\n\nexport enum TableActionEnum {\n  REFRESH,\n  CLOSE_ALL,\n  CLOSE_LEFT,\n  CLOSE_RIGHT,\n  CLOSE_OTHER,\n  CLOSE_CURRENT,\n  CLOSE,\n}\n\nexport function useTabs(_router?: Router) {\n  const appStore = useAppStore();\n\n  function canIUseTabs(): boolean {\n    const { show } = appStore.getMultiTabsSetting;\n    if (!show) {\n      throw new Error('The multi-tab page is currently not open, please open it in the settings！');\n    }\n    return !!show;\n  }\n\n  const tabStore = useMultipleTabStore();\n  const router = _router || useRouter();\n\n  const { currentRoute } = router;\n\n  function getCurrentTab() {\n    const route = unref(currentRoute);\n    return tabStore.getTabList.find((item) => item.fullPath === route.fullPath)!;\n  }\n\n  async function updateTabTitle(title: string, tab?: RouteLocationNormalized) {\n    const canIUse = canIUseTabs;\n    if (!canIUse) {\n      return;\n    }\n    const targetTab = tab || getCurrentTab();\n    await tabStore.setTabTitle(title, targetTab);\n  }\n\n  async function updateTabPath(path: string, tab?: RouteLocationNormalized) {\n    const canIUse = canIUseTabs;\n    if (!canIUse) {\n      return;\n    }\n    const targetTab = tab || getCurrentTab();\n    await tabStore.updateTabPath(path, targetTab);\n  }\n\n  async function handlePushAndClose(path: string) {\n    const currentTab = getCurrentTab();\n    tabStore.setRefreshList(path);\n    router.push(path);\n    setTimeout(() => {\n      handleTabAction(TableActionEnum.CLOSE, currentTab);\n    }, 100);\n  }\n\n  async function handleTabAction(action: TableActionEnum, tab?: RouteLocationNormalized) {\n    const canIUse = canIUseTabs;\n    if (!canIUse) {\n      return;\n    }\n    const currentTab = getCurrentTab();\n    switch (action) {\n      case TableActionEnum.REFRESH:\n        await tabStore.refreshPage(router);\n        break;\n\n      case TableActionEnum.CLOSE_ALL:\n        await tabStore.closeAllTab(router);\n        break;\n\n      case TableActionEnum.CLOSE_LEFT:\n        await tabStore.closeLeftTabs(currentTab, router);\n        break;\n\n      case TableActionEnum.CLOSE_RIGHT:\n        await tabStore.closeRightTabs(currentTab, router);\n        break;\n\n      case TableActionEnum.CLOSE_OTHER:\n        await tabStore.closeOtherTabs(currentTab, router);\n        break;\n\n      case TableActionEnum.CLOSE_CURRENT:\n      case TableActionEnum.CLOSE:\n        await tabStore.closeTab(tab || currentTab, router);\n        break;\n    }\n  }\n\n  return {\n    refreshPage: () => handleTabAction(TableActionEnum.REFRESH),\n    closeAll: () => handleTabAction(TableActionEnum.CLOSE_ALL),\n    closeLeft: () => handleTabAction(TableActionEnum.CLOSE_LEFT),\n    closeRight: () => handleTabAction(TableActionEnum.CLOSE_RIGHT),\n    closeOther: () => handleTabAction(TableActionEnum.CLOSE_OTHER),\n    closeCurrent: () => handleTabAction(TableActionEnum.CLOSE_CURRENT),\n    close: (tab?: RouteLocationNormalized) => handleTabAction(TableActionEnum.CLOSE, tab),\n    closeCurrentPage: (tab?: RouteLocationNormalized) => handleTabAction(TableActionEnum.CLOSE, tab),\n    setTitle: (title: string, tab?: RouteLocationNormalized) => updateTabTitle(title, tab),\n    updatePath: (fullPath: string, tab?: RouteLocationNormalized) => updateTabPath(fullPath, tab),\n    pushCloseTab: (fullPath: string) => handlePushAndClose(fullPath),\n  };\n}\n"],"names":["useTabs","_router","appStore","useAppStore","canIUseTabs","show","tabStore","useMultipleTabStore","router","useRouter","currentRoute","getCurrentTab","route","unref","item","updateTabTitle","title","tab","__async","targetTab","updateTabPath","path","handlePushAndClose","currentTab","handleTabAction","action","fullPath"],"mappings":"iSAkBO,SAASA,EAAQC,EAAkB,CACxC,MAAMC,EAAWC,IAEjB,SAASC,GAAuB,CACxB,KAAA,CAAE,KAAAC,CAAK,EAAIH,EAAS,oBAC1B,GAAI,CAACG,EACG,MAAA,IAAI,MAAM,2EAA2E,EAE7F,MAAO,CAAC,CAACA,CACX,CAEA,MAAMC,EAAWC,IACXC,EAASP,GAAWQ,IAEpB,CAAE,aAAAC,CAAiB,EAAAF,EAEzB,SAASG,GAAgB,CACjB,MAAAC,EAAQC,EAAMH,CAAY,EACzB,OAAAJ,EAAS,WAAW,KAAMQ,GAASA,EAAK,WAAaF,EAAM,QAAQ,CAC5E,CAEe,SAAAG,EAAeC,EAAeC,EAA+B,QAAAC,EAAA,sBAE1E,GAAI,CADYd,EAEd,OAEI,MAAAe,EAAYF,GAAON,IACnB,MAAAL,EAAS,YAAYU,EAAOG,CAAS,CAC7C,GAEe,SAAAC,EAAcC,EAAcJ,EAA+B,QAAAC,EAAA,sBAExE,GAAI,CADYd,EAEd,OAEI,MAAAe,EAAYF,GAAON,IACnB,MAAAL,EAAS,cAAce,EAAMF,CAAS,CAC9C,GAEA,SAAeG,EAAmBD,EAAc,QAAAH,EAAA,sBAC9C,MAAMK,EAAaZ,IACnBL,EAAS,eAAee,CAAI,EAC5Bb,EAAO,KAAKa,CAAI,EAChB,WAAW,IAAM,CACfG,EAAgB,EAAuBD,CAAU,GAChD,GAAG,CACR,GAEe,SAAAC,EAAgBC,EAAyBR,EAA+B,QAAAC,EAAA,sBAErF,GAAI,CADYd,EAEd,OAEF,MAAMmB,EAAaZ,IACnB,OAAQc,EAAQ,CACd,IAAK,GACG,MAAAnB,EAAS,YAAYE,CAAM,EACjC,MAEF,IAAK,GACG,MAAAF,EAAS,YAAYE,CAAM,EACjC,MAEF,IAAK,GACG,MAAAF,EAAS,cAAciB,EAAYf,CAAM,EAC/C,MAEF,IAAK,GACG,MAAAF,EAAS,eAAeiB,EAAYf,CAAM,EAChD,MAEF,IAAK,GACG,MAAAF,EAAS,eAAeiB,EAAYf,CAAM,EAChD,MAEF,IAAK,GACL,IAAK,GACH,MAAMF,EAAS,SAASW,GAAOM,EAAYf,CAAM,EACjD,KACJ,CACF,GAEO,MAAA,CACL,YAAa,IAAMgB,EAAgB,CAAuB,EAC1D,SAAU,IAAMA,EAAgB,CAAyB,EACzD,UAAW,IAAMA,EAAgB,CAA0B,EAC3D,WAAY,IAAMA,EAAgB,CAA2B,EAC7D,WAAY,IAAMA,EAAgB,CAA2B,EAC7D,aAAc,IAAMA,EAAgB,CAA6B,EACjE,MAAQP,GAAkCO,EAAgB,EAAuBP,CAAG,EACpF,iBAAmBA,GAAkCO,EAAgB,EAAuBP,CAAG,EAC/F,SAAU,CAACD,EAAeC,IAAkCF,EAAeC,EAAOC,CAAG,EACrF,WAAY,CAACS,EAAkBT,IAAkCG,EAAcM,EAAUT,CAAG,EAC5F,aAAeS,GAAqBJ,EAAmBI,CAAQ,CAAA,CAEnE"}