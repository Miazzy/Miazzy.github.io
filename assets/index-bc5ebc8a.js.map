{"version":3,"file":"index-bc5ebc8a.js","sources":["../../src/views/bi/hidden/index.ts","../../src/views/bi/hidden/index.vue"],"sourcesContent":["import { FormSchema } from '@/components/Form';\nimport { BasicColumn } from '@/components/Table';\nimport { defHttp } from '@/utils/http/axios';\nimport dayjs from 'dayjs';\nimport { useUserStore } from '/@/store/modules/user';\n\nenum Api {\n  getPage = '/bi/hidden/list',\n  getStation = '/baseset/common/list-station',\n  getOrgInfoUrl = '/bi/common/org/info',\n  exportExcelUrl = '/bi/hidden/export-excel',\n}\n\nexport const getOrgInfoData = (params) =>\n  defHttp.get({ url: Api.getOrgInfoUrl, params }, { isOnlyResult: true });\nexport const getStation = (params) => {\n  return defHttp.post({ url: Api.getStation, params });\n};\nexport const exportExcel = (params) =>\n  defHttp.post(\n    {\n      url: Api.exportExcelUrl,\n      params,\n      responseType: 'blob',\n    },\n    { isReturnNativeResponse: true },\n  );\n\n// 查询列表\nexport function getPage(tabType, params) {\n  params.tab = tabType;\n  return defHttp.post({ url: Api.getPage, params });\n}\n\nexport const statisticsColumns: BasicColumn[] = [\n  {\n    title: '所属公司',\n    dataIndex: 'stationOrganName',\n    align: 'left',headAlign:'center',\n    width: '12%',resizable: true,\n    customCell: (record, index, column) => {\n      return {\n        rowSpan: record.rowSpan,\n      };\n    },\n    ifShow:useUserStore().isMultiOrganization\n  },\n  { title: '电站名称', dataIndex: 'stationName',align: 'left',headAlign:'center', width: '12%',resizable: true },\n  {\n    title: '隐患总数',\n    dataIndex: 'hiddenTotal',\n    align: 'right',headAlign:'center',\n    width: 160,resizable: true,\n  },\n  { title: '隐患处理数', dataIndex: 'hiddenRect',align: 'right',headAlign:'center', width: 160,resizable: true },\n  { title: '隐患待处理数', dataIndex: 'hiddenRectNot',align: 'right',headAlign:'center', width: 160,resizable: true },\n  { title: '超期处理隐患数', dataIndex: 'hiddenRectOver',align: 'right',headAlign:'center', width: 160,resizable: true },\n  { title: '隐患处理率(%)', dataIndex: 'rectRate',align: 'right',headAlign:'center',width: 160,resizable: true },\n  { title: '按期处理数', dataIndex: 'hiddenRectInTime',align: 'right',headAlign:'center', width: 160,resizable: true },\n  { title: '按期处理率(%)', dataIndex: 'rectRateInTime',align: 'right',headAlign:'center', width: 160,resizable: true },\n  { title: '超期未处理隐患数', dataIndex: 'hiddenRectOverNot',align: 'right',headAlign:'center', width: 160,resizable: true },\n  { title: '超期待处理率(%)', dataIndex: 'hiddenRectOverNotRate',align: 'right',headAlign:'center', width: 160,resizable: true },\n];\n\nexport function getMonthColumns(dateType, year, startDate, endDate) {\n  const monthColumns: BasicColumn[] = [\n    {\n      title: '所属公司',\n      dataIndex: 'stationOrganName',\n      width: 160,resizable: true,\n      align: 'left',headAlign:'center',\n      customCell: (record, index, column) => {\n        return {\n          rowSpan: record.rowSpan,\n        };\n      }\n      ,ifShow:useUserStore().isMultiOrganization\n    },\n    { title: '电站名称', dataIndex: 'stationName',align: 'left',headAlign:'center', width: 160,resizable: true },\n    { title: '隐患总数', dataIndex: 'hiddenTotal',align: 'right',headAlign:'center', width: 100,resizable: true },\n  ];\n  if (dateType == 'year') {\n    for (let i = 1; i <= 12; i++) {\n      const title = year + '-' + (i < 10 ? '0' + i : i);\n      monthColumns.push({ title: title,align: 'right',headAlign:'center', dataIndex: title, width: 100,resizable: true });\n    }\n  } else {\n    let tmpDate = dayjs(startDate);\n    do {\n      monthColumns.push({\n        title: tmpDate.format('YYYY-MM'),\n        dataIndex: tmpDate.format('YYYY-MM'),\n        width: 100,resizable: true,\n      });\n      tmpDate = tmpDate.add(1, 'month');\n    } while (tmpDate.toISOString().substring(0, 10) <= endDate);\n  }\n  return monthColumns;\n}\n\nexport const hiddenTypeColumns: BasicColumn[] = [\n  {\n    title: '所属公司',\n    dataIndex: 'stationOrganName',\n    width: 160,resizable: true,\n    align: 'left',headAlign:'center',\n    customCell: (record, index, column) => {\n      return {\n        rowSpan: record.rowSpan,\n      };\n    }\n    ,ifShow:useUserStore().isMultiOrganization\n  },\n  { title: '电站名称', dataIndex: 'stationName',align: 'left',headAlign:'center', width: 160,resizable: true },\n  { title: '隐患总数', dataIndex: 'hiddenTotal',align: 'right',headAlign:'center', width: 100,resizable: true },\n  { title: '安全检查', dataIndex: 'safety', children: [],resizable: true },\n  { title: '车辆检查', dataIndex: 'vehicle', children: [],resizable: true },\n  { title: '巡检', dataIndex: 'inspection', children: [],resizable: true },\n];\n\nconst currentYear = String(dayjs().year());\nexport const getFormSearchSchemas = (stationParams): FormSchema[] => {\n  return [\n    {\n      field: 'dateType',\n      label: '时间维度',\n      component: 'Select',\n      defaultValue: 'year',\n      componentProps: ({ formModel }) => {\n        return {\n          allowClear:false,\n          options: [\n            { value: 'year', label: '年度' },\n            { value: 'month', label: '月份' },\n            { value: 'day', label: '自然日' },\n          ],\n          onChange: (value) => {\n            // if (value === 'year') {\n            //   formModel['[startDate, endDate]'] = [];\n            // } else if (value === 'month' || value === 'day') {\n            //   formModel.year = '';\n            // } else {\n            //   formModel.year = '';\n            //   formModel['[startMonth, endMonth]'] = [];\n            // }\n            formModel.year = '';\n            formModel['[startMonth, endMonth]'] = [null,null];\n            formModel['[startDate, endDate]'] = [null,null];\n          },\n        };\n      },\n    },\n    {\n      field: 'year',\n      label: '发现时间',\n      component: 'DatePicker',\n      defaultValue: currentYear,\n      componentProps: {\n        allowClear:false,\n        format: 'YYYY',\n        valueFormat: 'YYYY-MM-DD',\n        picker: 'year',\n        style: 'width: 100%',\n      },\n      show: ({ values }) => {\n        return values.dateType === 'year';\n      },\n    },\n    {\n      field: '[startDate, endDate]',\n      label: '发现时间',\n      component: 'RangePicker',\n      componentProps: {\n        allowClear:false,\n        format: 'YYYY-MM',\n        valueFormat: 'YYYY-MM-DD',\n        picker: 'month',\n        placeholder: ['开始月份', '结束月份'],\n        style: 'width: 100%',\n      },\n      show: ({ values }) => {\n        return values.dateType === 'month';\n      },\n    },\n    {\n      field: '[startDate, endDate]',\n      label: '发现时间',\n      component: 'RangePicker',\n      componentProps: {\n        allowClear:false,\n        format: 'YYYY-MM-DD',\n        valueFormat: 'YYYY-MM-DD',\n        picker: 'day',\n        placeholder: ['开始日期', '结束日期'],\n        style: 'width: 100%',\n      },\n      show: ({ values }) => {\n        return values.dateType === 'day';\n      },\n    },\n    {\n      field: 'stationOrganId',\n      label: '所属公司',\n      component: 'ApiSelect',\n      componentProps: ({ formModel }) => {\n        return {\n          api: async () => await getOrgInfoData({}),\n          onChange: (value) => {\n            formModel.stationIds = [];\n          },\n        };\n      }\n      ,ifShow:useUserStore().isMultiOrganization\n    },\n    {\n      field: 'stationId',\n      label: '电站名称',\n      component: 'ApiSelect',\n      componentProps: {\n        api: async () => {\n          const data = await getStation({});\n          const options: any = [];\n          if (data.result && data.result.length > 0) {\n            data.result.forEach((item) => {\n              options.push({ value: item.id, label: item.name });\n            });\n          }\n          return options;\n        },\n        filterOption: (input: string, option: any) => {\n          return option.label.toLowerCase().indexOf(input.toLowerCase()) >= 0;\n        },\n      },\n    },\n  ];\n};","<template>\n  <div class=\"tab-model\">\n    <div class=\"tab-button-div\">\n      <BasicForm @register=\"formRegister\" @advanced-change=\"query\" />\n    </div>\n\n    <div class=\"tab-table-div tab-table-content\" id='more-tab-content'>\n      <a-tabs v-model:activeKey=\"activeKey\" >\n        <a-tab-pane key=\"statistics\" tab=\"统计报表\">\n          <BasicTable\n            @register=\"statisticsTable\"\n            @resize-column=\"(w, col) => (col.width = w)\"\n            class=\"w-4/4 xl:w-12/12\"\n          >\n            <template #toolbar>\n              <a-button class=\"yellow-btn\" v-if=\"activeKey == 'statistics'\" :preIcon=\"IconEnum.EXPORT\" @click=\"handleStatisticsExport\">{{\n                t('common.action.export')\n              }}</a-button>\n\n            </template>\n          </BasicTable>\n        </a-tab-pane>\n        <a-tab-pane key=\"month\" tab=\"月统计\">\n          <BasicTable\n            @register=\"monthTable\"\n            @resize-column=\"(w, col) => (col.width = w)\"\n            class=\"w-4/4 xl:w-12/12\"\n          >\n            <template #toolbar>\n              <a-button class=\"yellow-btn\" v-if=\"activeKey == 'month'\" :preIcon=\"IconEnum.EXPORT\" @click=\"handleMonthExport\">{{\n                t('common.action.export')\n              }}</a-button>\n            </template>\n          </BasicTable>\n        </a-tab-pane>\n        <a-tab-pane key=\"hiddenType\" tab=\"分类统计\">\n          <BasicTable\n            @register=\"hiddenTypeTable\"\n            @resize-column=\"(w, col) => (col.width = w)\"\n            class=\"w-4/4 xl:w-12/12\"\n          >\n            <template #toolbar>\n              <a-button class=\"yellow-btn\" v-if=\"activeKey == 'hiddenType'\" :preIcon=\"IconEnum.EXPORT\" @click=\"handleTypeExport\">{{\n                t('common.action.export')\n              }}</a-button>\n            </template>\n          </BasicTable>\n        </a-tab-pane>\n      </a-tabs>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\" setup>\n  import { BasicTable, useTable } from '@/components/Table';\n  import { getDictDataMap } from '@/api/bpm/system/dict/data';\n  import { ref, onMounted, reactive } from 'vue';\n  import dayjs from 'dayjs';\n  import { useMessage } from '/@/hooks/web/useMessage';\n  import { useUserStore } from '/@/store/modules/user';\n  import { IconEnum } from '/@/enums/appEnum';\n  import { exportExcelFile } from '/@/utils/file/download';\n  import { useI18n } from '/@/hooks/web/useI18n';\n  import { BasicForm, useForm } from '@/components/Form';\n  import {\n    getMonthColumns,\n    statisticsColumns,\n    hiddenTypeColumns,\n    getStation,\n    getOrgInfoData,\n    getPage,\n    exportExcel,\n    getFormSearchSchemas,\n  } from './index';\n  import { urlToPath } from '/@/utils/route';\n\n  let { params } = urlToPath() as any;\n  if (params.dateType) {\n    if (params.startDate?.length == 7) {\n      params.startDate = params.startDate + '-01';\n    }\n    if (params.endDate?.length == 7) {\n      params.endDate = params.endDate + '-01';\n    }\n  }\n\n  const { t } = useI18n();\n  const { createConfirm, createMessage } = useMessage();\n  const activeKey = ref('statistics');\n  const stationOrgans = ref([]);\n  const stations:any = ref([]);\n  const queryParam: any = reactive({\n    dateType: 'year',\n    year: dayjs(new Date()).format('YYYY-MM-DD'),\n  });\n\n  const [formRegister, { resetFields, getFieldsValue, setFieldsValue }] = useForm({\n    labelWidth: 120,\n    baseColProps: { span: 8 },\n    actionColOptions: {\n      span: 24,\n    },\n    autoAdvancedLine: 1,\n    showAdvancedButton: useUserStore().isMultiOrganization,\n    schemas: getFormSearchSchemas({}),\n    compact: true,\n    resetButtonOptions: {\n      onClick: async () => {\n        await resetFields();\n        query();\n      },\n    },\n    submitFunc: () => {\n      query();\n      return Promise.resolve();\n    },\n  });\n\n  const query = () => {\n    if (activeKey.value === 'statistics') {\n      statisticsReload();\n    }\n    if (activeKey.value === 'month') {\n      monthReload();\n    }\n    if (activeKey.value === 'hiddenType') {\n      hiddenTypeReload();\n    }\n  };\n\n  const [statisticsTable, { reload: statisticsReload }] = useTable({\n    api: async () => {\n      Object.assign(queryParam, getFieldsValue());\n      Object.assign(queryParam, params);\n      let dataObj = await getPage('statistics', queryParam);\n      return dataObj.result;\n    },\n    columns: statisticsColumns,\n    target: '#more-tab-content',\n    targetTabKey: 'statistics',\n    targetTabValue: activeKey,\n    rowKey: 'id',\n    bordered: true,\n    useSearchForm: false,\n    pagination: false,\n  });\n\n  const [monthTable, { setColumns: setMonthColumns, reload: monthReload }] = useTable({\n    api: async () => {\n      Object.assign(queryParam, getFieldsValue());\n      Object.assign(queryParam, params);\n      let dataObj = await getPage('month', queryParam);\n      return dataObj.result;\n    },\n    target: '#more-tab-content',\n    targetTabKey: 'month',\n    targetTabValue: activeKey,\n    columns: [\n      { title: '所属公司', dataIndex: 'stationOrganName', width: 160 },\n      { title: '电站名称', dataIndex: 'stationName', width: 160 },\n      { title: '隐患总数', dataIndex: 'hiddenTotal', width: 100 },\n    ],\n    rowKey: 'id',\n    bordered: true,\n\n    useSearchForm: false,\n    pagination: false,\n    beforeFetch: () => {\n      Object.assign(queryParam, getFieldsValue());\n      setMonthColumns(\n        getMonthColumns(\n          queryParam.dateType,\n          dayjs(queryParam.year).format('YYYY'),\n          queryParam.startDate,\n          queryParam.endDate,\n        ),\n      );\n    },\n  });\n  const [hiddenTypeTable, { setColumns: setHiddenTypeColumns, reload: hiddenTypeReload }] =\n    useTable({\n      api: async () => {\n        Object.assign(queryParam, getFieldsValue());\n        Object.assign(queryParam, params);\n        let dataObj = await getPage('hiddenType', queryParam);\n        return dataObj.result;\n      },\n      columns: hiddenTypeColumns,\n      rowKey: 'id',\n      bordered: true,\n      useSearchForm: false,\n      target: '#more-tab-content',\n      targetTabKey: 'hiddenType',\n      targetTabValue: activeKey,\n      pagination: false,\n    });\n\n  function handleStatisticsExport() {\n    createConfirm({\n      title: t('common.message.confirmTitle'),\n      iconType: 'warning',\n      content: t('common.message.exportMessage'),\n      async onOk() {\n        Object.assign(queryParam, getFieldsValue());\n        queryParam.filename = '统计报表.xls';\n        queryParam.excelList = statisticsColumns;\n        await exportExcel(queryParam).then((res) => {\n          exportExcelFile(res?.data, queryParam.filename);\n        });\n        queryParam.filename = null;\n        queryParam.excelList = null;\n        createMessage.success(t('common.exportSuccessText'));\n      },\n    });\n  }\n  function handleMonthExport() {\n    createConfirm({\n      title: t('common.message.confirmTitle'),\n      iconType: 'warning',\n      content: t('common.message.exportMessage'),\n      async onOk() {\n        Object.assign(queryParam, getFieldsValue());\n        queryParam.filename = '月统计.xls';\n        queryParam.excelList = getMonthColumns(\n          queryParam.dateType,\n          dayjs(queryParam.year).format('YYYY'),\n          queryParam.startDate,\n          queryParam.endDate,\n        );\n        await exportExcel(queryParam).then((res) => {\n          exportExcelFile(res?.data, queryParam.filename);\n        });\n        queryParam.filename = null;\n        queryParam.excelList = null;\n        createMessage.success(t('common.exportSuccessText'));\n      },\n    });\n  }\n  function handleTypeExport() {\n    createConfirm({\n      title: t('common.message.confirmTitle'),\n      iconType: 'warning',\n      content: t('common.message.exportMessage'),\n      async onOk() {\n        Object.assign(queryParam, getFieldsValue());\n        queryParam.filename = '分类统计.xls';\n        queryParam.excelList = hiddenTypeColumns;\n        await exportExcel(queryParam).then((res) => {\n          exportExcelFile(res?.data, queryParam.filename);\n        });\n        queryParam.filename = null;\n        queryParam.excelList = null;\n        createMessage.success(t('common.exportSuccessText'));\n      },\n    });\n  }\n\n  //-----------------跳转相关--------------------\n  // const router = useRouter();\n  // const { currentRoute } = router;\n  // const route = unref(currentRoute);\n  // const routeParam = route.query;\n  // const dealJumpParam = async () => {\n  //   queryParam.dateType = routeParam.dateType;\n  //   queryParam.monthDate = [routeParam.startDate, routeParam.endDate];\n  //   changeDate(queryParam.monthDate);\n  // };\n\n  onMounted(async () => {\n    // if (routeParam.dateType != null) {\n    //   await dealJumpParam();\n    // }\n    setFieldsValue({ ...params });\n    let safetyColumns: any = [];\n    let vehicleColumns: any = [];\n    let inspectionColumns: any = [];\n    getDictDataMap({ dictTypeList: 'hidden_danger_type' })\n      .then((resp) => {\n        resp.result['hidden_danger_type'].forEach((e) => {\n          if (e.relationDict == 'safety') {\n            safetyColumns.push({ title: e.label,align: 'right',headAlign:'center', dataIndex: e.value, width: 100 });\n          }\n          if (e.relationDict == 'vehicle') {\n            vehicleColumns.push({ title: e.label,align: 'right',headAlign:'center', dataIndex: e.value, width: 100 });\n          }\n          if (e.relationDict == 'inspection') {\n            inspectionColumns.push({ title: e.label,align: 'right',headAlign:'center', dataIndex: e.value, width: 100 });\n          }\n        });\n      })\n      .then(() => {\n        hiddenTypeColumns.forEach((e) => {\n          if (e.dataIndex == 'safety') {\n            e.children = safetyColumns;\n          }\n          if (e.dataIndex == 'vehicle') {\n            e.children = vehicleColumns;\n          }\n          if (e.dataIndex == 'inspection') {\n            e.children = inspectionColumns;\n          }\n        });\n        setHiddenTypeColumns(hiddenTypeColumns);\n      });\n    const sts = await getStation({});\n    sts.result.forEach((e) => {\n      stations.value.push({ value: e.powerStationId, label: e.powerStationName });\n    });\n    const orgs = await getOrgInfoData({});\n    stationOrgans.value = orgs;\n  });\n</script>\n\n<style lang=\"less\" scoped>\n  .tab-model {\n    height: 100vh;\n    padding: 10px 10px 0;\n\n    div.tab-table-content {\n      height: calc(100vh - 86px);\n\n      :deep(.vben-basic-table) {\n        max-width: 100%;\n        height: 100%;\n        margin-top: -12px;\n      }\n    }\n  }\n\n  .tab-button-div {\n    .ant-form {\n      margin-bottom: 10px;\n      padding: 12px 6px 4px 16px;\n    }\n\n    .vben-basic-form {\n        :deep(.ant-row .ant-col.ant-col-8) {\n          flex: 0 0 27.5%;\n          max-width: 27.5%;\n        }\n\n        :deep(.ant-col.ant-col-24) {\n          position: fixed;\n          right: 1rem;\n        }\n    }\n  }\n</style>\n"],"names":["getOrgInfoData","params","defHttp","getStation","exportExcel","getPage","tabType","statisticsColumns","record","index","column","useUserStore","getMonthColumns","dateType","year","startDate","endDate","monthColumns","i","title","tmpDate","dayjs","hiddenTypeColumns","currentYear","getFormSearchSchemas","stationParams","formModel","value","values","__async","data","options","item","input","option","urlToPath","_a","_b","t","useI18n","createConfirm","createMessage","useMessage","activeKey","ref","stationOrgans","stations","queryParam","reactive","formRegister","resetFields","getFieldsValue","setFieldsValue","useForm","query","statisticsReload","monthReload","hiddenTypeReload","statisticsTable","useTable","monthTable","setMonthColumns","hiddenTypeTable","setHiddenTypeColumns","handleStatisticsExport","res","exportExcelFile","handleMonthExport","handleTypeExport","onMounted","__spreadValues","safetyColumns","vehicleColumns","inspectionColumns","getDictDataMap","resp","e","orgs"],"mappings":"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"}