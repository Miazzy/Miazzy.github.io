{"version":3,"file":"index-68a1de87.js","sources":["../../src/views/bi/elec/gridRecord/data.ts","../../src/views/bi/elec/gridRecord/index.vue"],"sourcesContent":["import { BasicColumn, FormProps } from '/@/components/Table';\nimport { defHttp } from '/@/utils/http/axios';\nimport dayjs from 'dayjs';\nimport { useUserStore } from '/@/store/modules/user';\n\nenum Api {\n  getOrgInfoUrl = '/bi/common/org/info',\n\n  getStationUrl = '/baseset/common/list-station',\n\n  getGridRecordUrl = '/bi/grid/record',\n\n  exportExcelUrl = '/bi/grid/export-record',\n}\n\n//导出\nexport const exportExcel = (params) =>\n  defHttp.post(\n    { url: Api.exportExcelUrl, params, responseType: 'blob' },\n    { isReturnNativeResponse: true },\n  );\n\n//并网记录\nexport const getGridRecordData = (params) =>\n  defHttp.get({ url: Api.getGridRecordUrl, params }, { isOnlyResult: true });\n\nexport const getOrgInfoData = (params) =>\n  defHttp.get({ url: Api.getOrgInfoUrl, params }, { isOnlyResult: true });\n\nexport const getStationData = (params) => {\n  return defHttp.post({ url: Api.getStationUrl, params });\n};\n\n//搜索\nexport const searchFormSchema: Partial<FormProps> = {\n  labelWidth: 120,\n  actionColOptions: {\n    span: 24,\n  },\n  autoAdvancedLine: 1,\n  showAdvancedButton: true,\n  baseColProps: {\n    span: 7,\n  },\n  autoSubmitOnEnter: true,\n  noHideBtnFlag: true,\n  schemas: [\n    {\n      field: `dateCycle`,\n      label: `时间维度`,\n      component: 'Select',\n      required: true,\n      defaultValue: 'year',\n      componentProps: {\n        options: [\n          { value: 'year', label: '年份' },\n          { value: 'month', label: '月份' },\n        ],\n      },\n    },\n    {\n      field: `yearValue`,\n      label: `年份`,\n      component: 'YearPicker',\n      defaultValue: dayjs(new Date()).format('YYYY'),\n      componentProps: {\n        format: 'YYYY',\n        valueFormat: 'YYYY',\n        style: { width: '100%' },\n      },\n      show: ({ values }) => {\n        return values.dateCycle == 'year';\n      },\n      dynamicRules: ({ values }) => {\n        return values.dateCycle == 'year' ? [{ required: true, message: '年份必填' }] : [];\n      },\n    },\n    {\n      field: `[startMonth, endMonth]`,\n      label: `月份`,\n      component: 'RangePicker',\n      componentProps: {\n        picker: 'month',\n        format: 'YYYY-MM',\n        valueFormat: 'YYYY-MM',\n        style: { width: '100%' },\n        placeholder: ['开始月份', '结束月份'],\n      },\n      show: ({ values }) => {\n        return values.dateCycle == 'month';\n      },\n      dynamicRules: ({ values }) => {\n        return values.dateCycle == 'month' ? [{ required: true, message: '月份必填' }] : [];\n      },\n    },\n    {\n      field: `orgId`,\n      label: `所属公司`,\n      component: 'ApiSelect',\n      componentProps: {\n        options: [],\n        api: getOrgInfoData,\n        placeholder: '请选择所属公司',\n      },\n      show: useUserStore().isMultiOrganization,\n    },\n    {\n      field: `stationId`,\n      label: `电站名称`,\n      component: 'ApiSelect',\n      componentProps: {\n        options: [],\n        api: async () => {\n          const sts = await getStationData({});\n          const map: any = [];\n          sts.result.forEach((e) => {\n            map.push({ value: e.powerStationId, label: e.powerStationName });\n          });\n\n          return map;\n        },\n        placeholder: '请输入电站名称',\n      },\n    },\n    {\n      field: `periodName`,\n      label: `期数`,\n      component: 'Input',\n      componentProps: {\n        placeholder: '请输入期数',\n      },\n    },\n  ],\n};\n\nexport const columns: BasicColumn[] = [\n  {\n    title: '所属公司',\n    dataIndex: 'orgName',\n    width: 150,\n    customCell: (record) => ({\n      rowSpan: record.rowOrgSpan,\n    }),\n    resizable: true,\n    ifShow: useUserStore().isMultiOrganization,\n  },\n  {\n    title: '电站名称',\n    dataIndex: 'stationName',\n    width: 150,\n    customCell: (record) => ({\n      rowSpan: record.rowStationSpan,\n    }),\n    resizable: true,\n  },\n  {\n    title: '期数',\n    dataIndex: 'periodName',\n    width: 150,\n    customCell: (record) => ({ rowSpan: record.rowPeriodSpan }),\n    resizable: true,\n  },\n  { title: '建设规模(MW)', dataIndex: 'buildScale', width: 150, resizable: true },\n  {\n    title: '并网日期',\n    dataIndex: 'gridDate',\n    width: 150,\n    resizable: true,\n  },\n\n  { title: '光伏并网容量(MW)', dataIndex: 'connectCapacity', width: 150, resizable: true },\n  { title: '储能并网容量(MW)', dataIndex: 'accessCapacity', width: 150, resizable: true },\n  { title: '组件厂家', dataIndex: 'componentVender', width: 150, resizable: true },\n  { title: '组件功率', dataIndex: 'componentType', width: 150, resizable: true },\n  { title: '逆变器厂家', dataIndex: 'inverterVender', width: 150, resizable: true },\n  { title: '逆变器型号', dataIndex: 'inverterType', width: 150, resizable: true },\n];\n","<template>\n  <PageWrapper dense contentFullHeight fixedHeight contentClass=\"flex\" style=\"position: relative\">\n    <BasicTable @register=\"registerTable\" @resize-column=\"(w, col) => (col.width = w)\">\n      <template #toolbar>\n        <a-button class=\"yellow-btn\" :preIcon=\"IconEnum.EXPORT\" @click=\"handleExport\">{{\n          t('common.action.export')\n        }}</a-button>\n      </template>\n    </BasicTable>\n  </PageWrapper>\n</template>\n<script lang=\"ts\" setup>\n  import { onMounted, unref, reactive } from 'vue';\n  import { BasicTable, useTable } from '@/components/Table';\n  import { columns, searchFormSchema, getGridRecordData, exportExcel } from './data';\n  import { useRouter } from 'vue-router';\n  import * as DateUtil from '/@/utils/dateUtil';\n  import { useMessage } from '@/hooks/web/useMessage';\n  import { useI18n } from '@/hooks/web/useI18n';\n  import { IconEnum } from '@/enums/appEnum';\n  import { exportExcelFile } from '/@/utils/file/download';\n  import { PageWrapper } from '/@/components/Page';\n\n  const { t } = useI18n();\n  const { createConfirm, createMessage } = useMessage();\n\n  const queryParam: any = reactive({});\n  function handleExport() {\n    createConfirm({\n      title: t('common.message.confirmTitle'),\n      iconType: 'warning',\n      content: t('common.message.exportMessage'),\n      async onOk() {\n        Object.assign(queryParam, getForm().getFieldsValue());\n        //针对穿透赋值后存在时分秒\n        queryParam.filename = '并网记录统计.xls';\n        queryParam.excelList = columns;\n        await exportExcel(queryParam).then((res) => {\n          exportExcelFile(res?.data, queryParam.filename);\n        });\n        queryParam.filename = null;\n        queryParam.excelList = null;\n        createMessage.success(t('common.exportSuccessText'));\n      },\n    });\n  }\n  //-----------------跳转相关--------------------\n  const router = useRouter();\n  const { currentRoute } = router;\n  const route = unref(currentRoute);\n  const query = route.query;\n\n  const getResultData = async () => {\n    const params = getForm().getFieldsValue();\n    //针对穿透赋值后存在时分秒\n    if (params.dateCycle == 'month') {\n      params.startMonth = DateUtil.formatToDate(params.startDate, 'YYYY-MM');\n      params.endMonth = DateUtil.formatToDate(params.endDate, 'YYYY-MM');\n    }\n    let dataObj = await getGridRecordData(params);\n    return dataObj;\n  };\n\n  onMounted(async () => {\n    if (query) {\n      const values = getForm().getFieldsValue();\n      //针对穿透赋值\n      if (query.startDate) {\n        values.dateCycle = query.dateType;\n        values.startMonth = query.startDate;\n        values.endMonth = query.endDate;\n      }\n      if (query.stationId != null) {\n        debugger;\n        values.stationId = query.stationId;\n      }\n      if (query.orgId != null) {\n        values.orgId = query.orgId;\n      }\n      getForm().setFieldsValue(values);\n    }\n  });\n\n  const [registerTable, { getForm }] = useTable({\n    title: '并网记录统计',\n    api: getResultData,\n    columns: columns,\n    formConfig: searchFormSchema,\n    useSearchForm: true,\n    bordered: true,\n    pagination: false,\n    showIndexColumn: true,\n    showTableSetting: true,\n    tableSetting: {\n      redo: false,\n      size: false,\n      setting: true,\n      fullScreen: false,\n    },\n    afterFetch: function (data) {\n      const count = {};\n      for (let index = 0; index < data.length; index++) {\n        const element = data[index];\n        if (count[element.orgId]) {\n          count[element.orgId]++;\n        }\n        if (count[element.stationId]) {\n          count[element.stationId]++;\n        }\n        if (count[element.periodId]) {\n          count[element.periodId]++;\n        }\n        if (!count[element.orgId]) {\n          count[element.orgId] = 1;\n        }\n        if (!count[element.stationId]) {\n          count[element.stationId] = 1;\n        }\n        if (!count[element.periodId]) {\n          count[element.periodId] = 1;\n        }\n      }\n      for (let index = 0; index < data.length; index++) {\n        const element = data[index];\n        for (const key in count) {\n          if (element.orgId === key) {\n            element.rowOrgSpan = count[key];\n            count[key] = 0;\n          }\n          if (element.stationId === key) {\n            element.rowStationSpan = count[key];\n            count[key] = 0;\n          }\n          if (element.periodId === key) {\n            element.rowPeriodSpan = count[key];\n            count[key] = 0;\n          }\n        }\n      }\n      return data;\n    },\n  });\n</script>\n"],"names":["exportExcel","params","defHttp","getGridRecordData","getOrgInfoData","getStationData","searchFormSchema","dayjs","values","useUserStore","__async","sts","map","e","columns","record","t","useI18n","createConfirm","createMessage","useMessage","queryParam","reactive","handleExport","getForm","res","exportExcelFile","router","useRouter","currentRoute","query","unref","getResultData","DateUtil.formatToDate","onMounted","registerTable","useTable","data","count","index","element","key"],"mappings":"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"}