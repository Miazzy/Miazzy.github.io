{"version":3,"file":"plannedElecModal-fe410ae1.js","sources":["../../src/views/po/elec/plannedelectricity/plannedElecModal.vue"],"sourcesContent":["<template>\n  <div class=\"load\">\n    <a-spin :spinning=\"detailFormState.spinning\" tip=\"Loading...\">\n      <div class=\"process-box\">\n        <!-- 标题和操作按钮-->\n        <div class=\"header-box\">\n          <BillTitle :options=\"billTitleOption\" />\n          <WfApproveBox\n            v-if=\"detailFormState.status != 10\"\n            @save=\"onSave\"\n            @submit=\"onSubmit\"\n            :processInstanceId=\"detailFormState.processInstanceId\"\n            :processStatus=\"detailFormState.status\"\n          />\n        </div>\n        <!-- 表单内容 -->\n        <div class=\"content\">\n          <a-form ref=\"formRef\" :model=\"detailFormState\" labelAlign=\"right\" autocomplete=\"off\">\n            <a-card title=\"基本信息\" :bordered=\"false\">\n              <a-row :gutter=\"24\">\n                <a-col v-show=\"true\" :span=\"12\">\n                  <a-form-item\n                    name=\"stationName\"\n                    label=\"电站名称\"\n                    :labelCol=\"{ span: 6 }\"\n                    :rules=\"[{ required: true, message: '请输入电站名称' }]\"\n                  >\n                    <a-input\n                      disabled\n                      v-model:value=\"detailFormState.stationName\"\n                      placeholder=\"请输入电站名称\"\n                    />\n                    <a-input disabled v-model:value=\"detailFormState.id\" v-if=\"false\" />\n                  </a-form-item>\n                </a-col>\n                <a-col v-show=\"true\" :span=\"12\">\n                  <a-form-item\n                    name=\"periodName\"\n                    label=\"期数\"\n                    :labelCol=\"{ span: 6 }\"\n                    :rules=\"[{ required: true, message: '请输入期数' }]\"\n                  >\n                    <a-input\n                      disabled\n                      v-model:value=\"detailFormState.periodName\"\n                      placeholder=\"请输入期数\"\n                    />\n                  </a-form-item>\n                </a-col>\n              </a-row>\n\n              <a-row :gutter=\"24\">\n                <a-col v-show=\"true\" :span=\"12\">\n                  <a-form-item\n                    name=\"connectCapacity\"\n                    label=\"并网容量(MW)\"\n                    :labelCol=\"{ span: 6 }\"\n                    :rules=\"[{ required: false, message: '请输入并网容量(MW)' }]\"\n                  >\n                    <a-input-number\n                      disabled\n                      v-model:value=\"detailFormState.connectCapacity\"\n                      placeholder=\"请输入并网容量(MW)\"\n                    />\n                  </a-form-item>\n                </a-col>\n                <a-col v-show=\"true\" :span=\"12\">\n                  <a-form-item\n                    name=\"fullGirdDate\"\n                    label=\"全容量并网时间\"\n                    :labelCol=\"{ span: 6 }\"\n                    :rules=\"[{ required: false, message: '请输入全容量并网时间' }]\"\n                  >\n                    <a-input-number\n                      disabled\n                      v-model:value=\"detailFormState.fullGirdDate\"\n                      placeholder=\"请输入全容量并网时间\"\n                    />\n                  </a-form-item>\n                </a-col>\n              </a-row>\n\n              <a-row :gutter=\"24\">\n                <a-col v-show=\"true\" :span=\"12\">\n                  <a-form-item\n                    name=\"bizVersion\"\n                    label=\"版本\"\n                    :labelCol=\"{ span: 6 }\"\n                    :rules=\"[{ required: false, message: '请输入版本' }]\"\n                  >\n                    <a-input-number\n                      disabled\n                      v-model:value=\"detailFormState.bizVersion\"\n                      placeholder=\"请输入版本\"\n                    />\n                  </a-form-item>\n                </a-col>\n              </a-row>\n            </a-card>\n\n            <a-card title=\"\" :bordered=\"false\">\n              <div class=\"tab-table-div\">\n                <BasicTable @register=\"registerTable\">\n                  <template #toolbar>\n                    <a-dropdown v-if=\"detailFormState.status == 0\">\n                      <template #overlay>\n                        <a-menu @click=\"handleClickMenu\">\n                          <a-menu-item key=\"downloadTemplate\">下载模板</a-menu-item>\n                          <a-menu-item key=\"import\">\n                            <a-upload\n                              name=\"file\"\n                              :showUploadList=\"false\"\n                              :headers=\"headers\"\n                              accept=\".xls,.xlsx\"\n                              @change=\"handleChange\"\n                              :beforeUpload=\"handleBeforeUpload\"\n                              :action=\"importExcelUrl\"\n                            >\n                              {{ '导入数据' }}\n                            </a-upload>\n                          </a-menu-item>\n                        </a-menu>\n                      </template>\n                      <a-button type=\"primary\" :preIcon=\"IconEnum.IMPORT\"> 导入 </a-button>\n                    </a-dropdown>\n                    <!-- <a-button type=\"primary\" @click=\"saveDetail\" v-if=\"needSaveDetail\">\n                      {{ '保存明细' }}\n                    </a-button> -->\n\n                    <!-- <a-button type=\"warning\" :preIcon=\"IconEnum.EXPORT\" @click=\"exportDetail\"\n                      >导出</a-button\n                    > -->\n                    <Button @click=\"exportDetail\"\n                      ><template #icon><DownloadOutlined /></template>导出</Button\n                    >\n                  </template>\n                </BasicTable>\n              </div>\n            </a-card>\n          </a-form>\n        </div>\n      </div>\n    </a-spin>\n  </div>\n</template>\n\n<script lang=\"ts\" setup>\n  import { reactive, ref, onMounted, unref } from 'vue';\n  import {\n    saveData,\n    initInfoItems,\n    getIndex,\n    getPlannedElectricityDtl,\n    getPlannedElectricityDtlColumns,\n    saveDtl,\n    checkProcessingData,\n  } from './plannedElectricity';\n  import { FormInstance, message, SelectProps, Button } from 'ant-design-vue';\n  import { useRouter } from 'vue-router';\n  import WfApproveBox from '/@/components/Framework/WorkFlow/WfApproveBox.vue';\n  import { assign } from 'lodash-es';\n  import * as ProcessInstanceApi from '@/api/bpm/processInstance';\n  import BillTitle from '/@/components/Framework/BillTitle/BillTitle.vue';\n  import { BasicTable, useTable, EditRecordRow } from '/@/components/Table';\n  import { jsonToSheetXlsx } from '/@/components/Excel';\n  import { getToken } from '/@/utils/auth';\n  import { closeCurrentTab } from '@/utils/route';\n  import { MsgManager } from '/@/message/MsgManager';\n  import { IconEnum } from '/@/enums/appEnum';\n  import { useUserStore } from '/@/store/modules/user';\n  import { DownloadOutlined } from '@ant-design/icons-vue';\n  import { Memory } from '@/router/index';\n\n  // DownloadOutlined\n  const detailFormState = reactive({ spinning: false });\n  const userStore = useUserStore();\n  const getUserInfo = userStore.getUserInfo;\n\n  const disabledInput = ref<boolean>(true);\n  const billTitleOption = reactive<any>({});\n  billTitleOption.subject = '计划电量';\n  let needSaveDetail = false;\n  billTitleOption.infoItems = [];\n  const router = useRouter();\n  const { currentRoute } = router;\n  const route = unref(currentRoute);\n  const query = Memory.getInstance().getQuery(); // route.query;\n  const options = ref<SelectProps['options']>([]);\n  const dtlColumn = getPlannedElectricityDtlColumns(options);\n  const formRef = ref<FormInstance>();\n  const indexList = ref<Array<any>>([]);\n  const itemDataSource = ref<any[]>();\n  const headers = {\n    Authorization: `Bearer ${getToken()}`,\n    _t: new Date().getTime(),\n    version: '4.5.4',\n  };\n\n  let importExcelUrl = '/admin-api/po/plannedElectricity/import-excel?_t=' + new Date().getTime();\n  const handleBeforeUpload = () => {\n    headers._t = new Date().getTime();\n    importExcelUrl = importExcelUrl + '?_t=' + new Date().getTime();\n  };\n\n  const getPlannedElectricityDtlByParam = async () => {\n    let areaList = await getPlannedElectricityDtl(detailFormState.id);\n    indexList.value = areaList.result;\n    return areaList.result;\n  };\n\n  const [registerTable, { getDataSource: getItemDataSource }] = useTable(\n    assign(\n      {\n        dataSource: itemDataSource,\n        columns: dtlColumn,\n      },\n      {\n        pagination: false,\n        striped: false,\n        useSearchForm: false,\n        showTableSetting: false,\n        bordered: true,\n        showIndexColumn: true,\n        canResize: false,\n        // title: '',\n        // api: getPlannedElectricityDtlByParam,\n        // useSearchForm: false,\n        // showTableSetting: true,\n        // pagination: false,\n        // bordered: true,\n      },\n    ),\n  );\n\n  function handleClickMenu({ key }) {\n    if (key === 'downloadTemplate') {\n      downloadTemplate();\n    }\n  }\n\n  function downloadTemplate() {\n    jsonToSheetXlsx({\n      data: [{}],\n      header: {\n        year: '自然年',\n        plannedElec: '计划电量',\n        month1: '1月',\n        month2: '2月',\n        month3: '3月',\n        month4: '4月',\n        month5: '5月',\n        month6: '6月',\n        month7: '7月',\n        month8: '8月',\n        month9: '9月',\n        month10: '10月',\n        month11: '11月',\n        month12: '12月',\n      },\n      filename: '计划电量内容模板.xlsx',\n    });\n  }\n\n  const handleChange = (list) => {\n    const file = list.file;\n\n    if (file.status === 'done' && file.response && file.response.data) {\n      pushItemRows(file.response.data, true);\n      return;\n    } else if (file.status === 'error') {\n      message.error('导入数据失败');\n    }\n  };\n\n  function pushItemRows(rows: Array<any>, isImport: boolean) {\n    const data = getItemDataSource();\n    data.splice(0, data.length);\n    rows.forEach((item) => {\n      const addRow: EditRecordRow = {\n        year: item.year,\n        plannedElec: item.plannedElec,\n        month1: item.month1,\n        month2: item.month2,\n        month3: item.month3,\n        month4: item.month4,\n        month5: item.month5,\n        month6: item.month6,\n        month7: item.month7,\n        month8: item.month8,\n        month9: item.month9,\n        month10: item.month10,\n        month11: item.month11,\n        month12: item.month12,\n        editable: false,\n        isNew: true,\n        key: `${Date.now()}`,\n      };\n      data.push(addRow);\n    });\n  }\n\n  function save(status) {\n    const dtlList = ref<any>([]);\n    getItemDataSource().forEach((item) => {\n      const dtl = ref<any>({});\n      assign(dtl.value, item);\n      dtlList.value.push(dtl.value);\n    });\n\n    detailFormState.dtlList = dtlList.value;\n    detailFormState.spinning = true;\n    try {\n      status = status || 0;\n      formRef.value.validateFields().then(() => {\n        detailFormState.status = status;\n        saveData(detailFormState).then((data) => {\n          detailFormState.id = data;\n          getIndex({ id: data }).then((data) => {\n            assign(detailFormState, data.result);\n          });\n          message.success(status == 1 ? '提交成功。' : '保存成功');\n          MsgManager.getInstance().sendMsg('plannedElectricity', {});\n          if (status == 1) {\n            disabledInput.value = true;\n            closeCurrentTab();\n          }\n        });\n      });\n      //   // router.push('/po/elec/plannedelec/plannedElectricity');\n    } catch (error) {\n      console.log('error', error);\n    } finally {\n      detailFormState.spinning = false;\n    }\n  }\n\n  function onSubmit() {\n    checkProcessingData({ periodId: detailFormState.periodId }).then((data) => {\n      let items = getItemDataSource();\n      if (items.length == 0) {\n        message.error('请添加计划电量明细。');\n        return;\n      }\n      save(1);\n    });\n  }\n\n  function onSave() {\n    save(0);\n  }\n\n  function saveDetail() {\n    const dtlList = ref<any>([]);\n    getItemDataSource().forEach((item) => {\n      const dtl = ref<any>({});\n      assign(dtl.value, item);\n      dtlList.value.push(dtl.value);\n    });\n\n    detailFormState.dtlList = dtlList.value;\n\n    try {\n      formRef.value.validateFields().then(() => {\n        saveDtl(detailFormState).then((data) => {\n          message.success('保存成功');\n        });\n      });\n    } catch (error) {\n      console.log('error', error);\n    } finally {\n      detailFormState.spinning = false;\n    }\n  }\n\n  function exportDetail() {\n    const header = ref({});\n    const dtlList = ref<any>([]);\n    getItemDataSource().forEach((item) => {\n      const dtl = ref<any>({});\n      assign(dtl.value, item);\n      dtlList.value.push(dtl.value);\n    });\n\n    const indexColumns = getPlannedElectricityDtlColumns();\n    const data = ref<Array<any>>([]);\n    const keys = ref<Array<any>>([]);\n    indexColumns.forEach((column) => {\n      header.value[column.dataIndex] = column.title;\n      keys.value.push(column.dataIndex);\n    });\n    dtlList.value.forEach(function (item, index) {\n      let exportItem = ref({});\n      keys.value.forEach((key) => {\n        exportItem.value[key] = item[key];\n      });\n      data.value.push(exportItem.value);\n    });\n    jsonToSheetXlsx({\n      data: data.value,\n      header: header.value,\n      filename: '计划电量明细.xlsx',\n    });\n  }\n\n  onMounted(async () => {\n    query.id = await getBizParamId();\n\n    await getIndex({ id: query.id }).then((data) => {\n      if (query.id) {\n        assign(detailFormState, data.result);\n        if (\n          detailFormState.status == 0 &&\n          detailFormState.personMemberId.substring(0, 32) != getUserInfo.userId\n        ) {\n          detailFormState.status = 10;\n        }\n      } else {\n        assign(detailFormState, query);\n        detailFormState.spinning = false;\n        detailFormState.status = 0;\n        detailFormState.billCode = data.result.billCode;\n        detailFormState.personMemberName = data.result.personMemberName;\n        detailFormState.fillinDate = data.result.fillinDate;\n        detailFormState.deptName = data.result.deptName;\n      }\n      needSaveDetail = detailFormState.status > 0 ? true : false;\n      if (detailFormState.status == 1) {\n        disabledInput.value = true;\n      }\n    });\n\n    let areaList = await getPlannedElectricityDtl(query.id);\n    pushItemRows(areaList.result, true);\n\n    if (!query.id) {\n      disabledInput.value = false;\n    }\n    await getRecordable();\n  });\n\n  const getBizParamId = async () => {\n    let id = query.id;\n    if (!id && query.processInstanceId) {\n      const processInstance = await ProcessInstanceApi.getProcessInstance(\n        query.processInstanceId as string,\n      );\n      const businessKey = processInstance.businessKey;\n      query.id = businessKey;\n      id = businessKey;\n    }\n    return id;\n  };\n\n  const getRecordable = async () => {\n    disabledInput.value = detailFormState.status != 0;\n    billTitleOption.title = '计划电量';\n    detailFormState.processInstanceId = query.processInstanceId;\n\n    let { billCode, fillinDate, personMemberName, deptName } = detailFormState;\n    assign(billTitleOption, { billCode, fillinDate, personMemberName, deptName });\n  };\n</script>\n<style lang=\"less\" scoped>\n  .tab-table-div {\n    height: 100%;\n    margin-top: 16px;\n    margin-bottom: 16px;\n    padding-left: 14px;\n    overflow: auto;\n\n    :deep(.ant-table-placeholder) {\n      height: 350px;\n    }\n  }\n</style>\n"],"names":["detailFormState","reactive","getUserInfo","useUserStore","disabledInput","ref","billTitleOption","router","useRouter","currentRoute","unref","query","Memory","dtlColumn","getPlannedElectricityDtlColumns","formRef","itemDataSource","headers","getToken","importExcelUrl","handleBeforeUpload","registerTable","getItemDataSource","useTable","assign","handleClickMenu","key","downloadTemplate","jsonToSheetXlsx","handleChange","list","file","pushItemRows","message","rows","isImport","data","item","addRow","save","status","dtlList","dtl","saveData","getIndex","MsgManager","closeCurrentTab","error","onSubmit","checkProcessingData","onSave","exportDetail","header","indexColumns","keys","column","index","exportItem","onMounted","__async","getBizParamId","areaList","getPlannedElectricityDtl","getRecordable","id","businessKey","ProcessInstanceApi.getProcessInstance","billCode","fillinDate","personMemberName","deptName"],"mappings":"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"}