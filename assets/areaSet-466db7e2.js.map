{"version":3,"file":"areaSet-466db7e2.js","sources":["../../src/views/baseset/monitor/area/areaSet.ts","../../src/views/baseset/monitor/area/areaSet.vue"],"sourcesContent":["import { defHttp } from '/@/utils/http/axios';\nimport { BasicColumn } from '/@/components/Table';\nimport { Tooltip } from 'ant-design-vue';\nimport { h } from 'vue';\n\nenum Api {\n  treeData = '/baseset/common/list-orgStationPeriodTree',\n  areaList = '/baseset/areaset/list',\n  insertUrl = '/baseset/areaset/create',\n  updateUrl = '/baseset/areaset/update',\n  getPeriods = '/baseset/areaset/periods',\n  deleteUrl = '/baseset/areaset/delete',\n}\n\n// 根据电站id获取电站分期\nexport const getPeriods = (params) =>\n  defHttp.get(\n    {\n      url: Api.getPeriods,\n      params,\n    },\n    {},\n  );\n\n// 获取渲染函数\nexport const hRender = (node, key) => {\n  return h(Tooltip, { title: node.record[key] }, () => {\n    return node.record[key];\n  });\n};\n\nexport function getAreaListColumns(options: any[]): BasicColumn[] {\n  return [\n    {\n      title: '电站名称',\n      dataIndex: 'stationName',\n      width: 150,\n      align: 'center',\n      resizable: true,\n      customRender: (node) => {\n        return hRender(node, 'stationName');\n      },\n    },\n    {\n      title: '分期',\n      dataIndex: 'stationPeriodId',\n      editRow: true,\n      editComponent: 'Select',\n      editComponentProps: {\n        options: options,\n        labelField: 'label',\n        valueField: 'value',\n      },\n      editRender: (node) => {\n        return hRender(node, 'stationPeriodName');\n      },\n      resizable: true,\n      width: 120,\n    },\n    {\n      title: '区域编码',\n      dataIndex: 'code',\n      align: 'center',\n      customRender: (node) => {\n        return hRender(node, 'code');\n      },\n      width: 120,\n      resizable: true,\n    },\n    {\n      title: '设备数量',\n      dataIndex: 'deviceCount',\n      width: 120,\n      align: 'center',\n      customRender: (node) => {\n        return hRender(node, 'deviceCount');\n      },\n      resizable: true,\n    },\n    {\n      title: '区域名称',\n      dataIndex: 'name',\n      editRow: true,\n      width: 120,\n      editRule: async (text, record) => {\n        if (text?.length > 20) {\n          return '名称长度不能超过20';\n        }\n        return '';\n      },\n      resizable: true,\n      editComponent: 'Input',\n      editRender: (node) => {\n        return hRender(node, 'name');\n      },\n    },\n    {\n      title: '描述信息',\n      dataIndex: 'description',\n      editRow: true,\n      width: 400,\n      resizable: true,\n      editRule: async (text, record) => {\n        if (text?.length > 100) {\n          return '名称长度不能超过100';\n        }\n        return '';\n      },\n      editRender: (node) => {\n        return hRender(node, 'description');\n      },\n    },\n  ];\n}\n// 列表表头\n\nexport interface DeptListItem {\n  id: string;\n  orderNo: string;\n  createTime: string;\n  remark: string;\n  status: number;\n}\n\n// 组织树数据\nexport const getTreeData = (params) =>\n  defHttp.post(\n    {\n      url: Api.treeData,\n      params,\n    },\n    {},\n  );\n\n// 列表数据\nexport const getAreaList = (params) =>\n  defHttp.post(\n    {\n      url: Api.areaList,\n      params,\n    },\n    {},\n  );\n\n// 新增\nexport const insertArea = (params) =>\n  defHttp.post(\n    {\n      url: Api.insertUrl,\n      params,\n    },\n    {},\n  );\n\n// 修改\nexport const updateArea = (params) =>\n  defHttp.put(\n    {\n      url: Api.updateUrl,\n      params,\n    },\n    {},\n  );\n\n// 删除\nexport const deleteArea = (params) =>\n  defHttp.delete(\n    {\n      url: Api.deleteUrl,\n      params,\n    },\n    {},\n  );\n","<template>\n  <PageWrapper dense contentFullHeight fixedHeight contentClass=\"flex\" style=\"position: relative\">\n    <!-- 电站组织树 -->\n    <CommonTree\n      title=\"电站组织\"\n      @select=\"handleSelect\"\n      :value=\"treeData\"\n      :canEdit=\"false\"\n      :canAdd=\"false\"\n      :canDelete=\"false\"\n      class=\"left-tree-layout\"\n      :isShowOperationBtns=\"false\"\n      :fieldNames=\"{ key: 'id', title: 'name' }\"\n    />\n\n    <!-- 数据表格 -->\n    <div class=\"right-table-layout\">\n      <BasicTable\n        class=\"fix-basic-table\"\n        @register=\"registerTable\"\n        :tooltip=\"false\"\n        :searchInfo=\"searchInfo\"\n        @resize-column=\"(w, col) => (col.width = w)\"\n      >\n        <template #toolbar>\n          <a-button type=\"primary\" :preIcon=\"IconEnum.ADD\" @click=\"handleCreate\">\n            {{ t('common.action.create') }}</a-button\n          >\n          <a-button\n            class=\"tab-button\"\n            type=\"error\"\n            :disabled=\"!hasSelected\"\n            :preIcon=\"IconEnum.DELETE\"\n            @click=\"handleDelete\"\n            >{{ t('common.delText') }}</a-button\n          >\n        </template>\n        <template #bodyCell=\"{ column, record }\">\n          <template v-if=\"column.key === 'action'\">\n            <TableAction :actions=\"getAreaAction(record)\" />\n          </template>\n        </template>\n      </BasicTable>\n    </div>\n    <!-- 新增弹窗 -->\n    <Dialog\n      v-model:visible=\"open\"\n      :height=\"300\"\n      :width=\"500\"\n      smode=\"normal\"\n      overflowY=\"auto\"\n      :title=\"modelTitle\"\n      @confirm=\"handleSuccess\"\n      @cancel=\"cancelModel\"\n    >\n      <a-form ref=\"modalFormRef\" :model=\"formState\" name=\"userForm\">\n        <a-row>\n          <a-col :span=\"22\">\n            <a-form-item\n              label=\"编码范围\"\n              name=\"startCode\"\n              :labelCol=\"{ span: 5 }\"\n              :rules=\"[{ required: true, message: '请选择编码范围' }]\"\n            >\n              <a-space>\n                <a-form-item\n                  name=\"startCode\"\n                  :rules=\"[{ required: true, message: '请选择编码范围' }]\"\n                >\n                  <a-input-number v-model:value=\"formState.startCode\" :min=\"1\" max=\"999\" />\n                </a-form-item>\n                <span\n                  style=\"\n                    display: inline-block;\n                    height: 32px;\n                    margin-bottom: 24px;\n                    line-height: 32px;\n                  \"\n                  >-</span\n                >\n                <a-form-item\n                  name=\"endCode\"\n                  :rules=\"[{ required: true, message: '请选择编码范围' }]\"\n                >\n                  <a-input-number v-model:value=\"formState.endCode\" :min=\"1\" max=\"999\" />\n                </a-form-item>\n              </a-space>\n            </a-form-item>\n          </a-col>\n          <a-col :span=\"22\">\n            <a-form-item\n              label=\"电站分期\"\n              name=\"stationPeriodId\"\n              :labelCol=\"{ span: 5 }\"\n              :rules=\"[{ required: true, message: '请选择电站分期' }]\"\n            >\n              <a-select\n                v-model:value=\"formState.stationPeriodId\"\n                allow-clear\n                style=\"width: 100%\"\n                placeholder=\"请选择分期\"\n                :options=\"options\"\n                :disabled=\"disableFlag\"\n                @change=\"handleChange\"\n              />\n            </a-form-item>\n          </a-col>\n        </a-row>\n      </a-form>\n    </Dialog>\n    <div v-if=\"loadingFlag\" class=\"dialog-mask\"> </div>\n  </PageWrapper>\n</template>\n<script lang=\"ts\" setup>\n  import { onMounted, reactive, computed, ref } from 'vue';\n  import { BasicTable, useTable, TableAction, EditRecordRow } from '/@/components/Table';\n  import Dialog from '@/components/Framework/Modal/Dialog.vue';\n  import { TreeItem } from '/@/components/Tree';\n  import { PageWrapper } from '/@/components/Page';\n  import { IconEnum } from '@/enums/appEnum';\n  import CommonTree from '@/components/Framework/Tree/CommonTree.vue';\n  import { message, FormInstance, SelectProps } from 'ant-design-vue';\n  import {\n    getAreaList,\n    insertArea,\n    updateArea,\n    getTreeData,\n    getPeriods,\n    deleteArea,\n    getAreaListColumns,\n  } from './areaSet';\n  import { assign } from 'lodash-es';\n  import { useI18n } from '@/hooks/web/useI18n';\n  import { useMessage } from '@/hooks/web/useMessage';\n  const { t } = useI18n();\n  const { createConfirm } = useMessage();\n\n  const searchInfo = reactive<Recordable>({}); // 查询信息\n  const treeData = ref<TreeItem[]>([]); // 左侧电站树数据\n  const selectedNode = ref({}); // 被选择的电站节点\n  const periodParam = ref({}); // 查询分期下拉框数据的参数\n  const open = ref<boolean>(false);\n  const loadingFlag = ref<boolean>(false);\n  const disableFlag = ref<boolean>(false);\n  const currentEditKeyRef = ref('');\n  const modelTitle = ref('');\n  const checkedKeys = ref<Array<string | number>>([]); // 复选框的选择的数据\n  const options = ref<SelectProps['options']>([]); //电站分期\n  const areaColumn = getAreaListColumns(options);\n  const formState = reactive({\n    startCode: '',\n    endCode: '',\n    stationPeriodId: '',\n  });\n  const modalFormRef = ref<FormInstance>();\n  const getAreaListByParam = async () => {\n    // if (selectedNode.value.searchId == null) {\n    //   return [];\n    // }\n    if (selectedNode.value.nodeKindId == null) {\n      return [];\n    }\n    selectedNode.value.sortField = searchInfo.sortField;\n    selectedNode.value.sortOrder = searchInfo.sortOrder;\n    let areaList = await getAreaList(selectedNode.value);\n    return areaList.result;\n  };\n\n  const [registerTable, { reload, getDataSource }] = useTable({\n    title: '区域列表',\n    api: getAreaListByParam,\n    columns: areaColumn,\n    useSearchForm: false,\n    showTableSetting: true,\n    pagination: false,\n    bordered: true,\n    rowKey: 'id',\n    rowSelection: {\n      type: 'checkbox',\n      selectedRowKeys: checkedKeys,\n      onSelect: onSelect,\n      onSelectAll: onSelectAll,\n    },\n    handleSearchInfoFn(info) {\n      return info;\n    },\n    actionColumn: {\n      title: '操作',\n      dataIndex: 'action',\n    },\n    sortFn: (sortInfo: SorterResult) => {\n      if (sortInfo.order) {\n        searchInfo.sortField = sortInfo.field;\n        searchInfo.sortOrder = sortInfo.order.replace('end', '');\n      } else {\n        searchInfo.sortField = '';\n        searchInfo.sortOrder = '';\n      }\n    },\n  });\n  function onSelect(record, selected) {\n    if (selected) {\n      checkedKeys.value = [...checkedKeys.value, record.id];\n    } else {\n      checkedKeys.value = checkedKeys.value.filter((id) => id !== record.id);\n    }\n  }\n  function onSelectAll(selected, selectedRows, changeRows) {\n    const changeIds = changeRows.map((item) => item.id);\n    if (selected) {\n      checkedKeys.value = [...checkedKeys.value, ...changeIds];\n    } else {\n      checkedKeys.value = checkedKeys.value.filter((id) => {\n        return !changeIds.includes(id);\n      });\n    }\n  }\n  const hasSelected = computed(() => checkedKeys.value.length > 0);\n  // 查询左侧电站树数据\n  async function queryDeptTreeList() {\n    const deptList = (await getTreeData({})) as unknown as TreeItem[];\n    treeData.value = deptList.result;\n    // let org = deptList.result[0];\n    // selectedNode.value.nodeKindId = org.nodeKindId;\n    // selectedNode.value.searchId = org.id;\n    // reload();\n  }\n  // 添加区域\n  function handleCreate() {\n    if (selectedNode.value.stationId == null) {\n      message.error('请先选择电站或分期。');\n      return;\n    }\n    if (selectedNode.value.nodeKindId == 'station') {\n      getOptions();\n      modelTitle.value = '新增区域-' + selectedNode.value.stationName;\n    }\n    if (selectedNode.value.nodeKindId == 'period') {\n      getOptions();\n      modelTitle.value = '新增区域-' + selectedNode.value.stationName;\n    }\n\n    open.value = true;\n    formState.startCode = 1;\n    formState.endCode = 20;\n    // 查询电站分期\n    // options.value = [];\n  }\n  // 删除区域\n  function handleDelete() {\n    let dataList = getDataSource();\n    for (let i = 0; i < dataList.length; i++) {\n      if (checkedKeys.value.includes(dataList[i].id) && dataList[i].deviceCount > 0) {\n        message.error('存在设备的区域不能删除。');\n        return false;\n      }\n    }\n    createConfirm({\n      title: '提示',\n      iconType: 'warning',\n      content: '确定要删除选中记录？',\n      async onOk() {\n        deleteArea(checkedKeys.value).then(() => {\n          message.success('已删除。');\n          reload();\n        });\n      },\n    });\n  }\n  // 数据创建成功回调函数\n  function handleSuccess() {\n    modalFormRef.value.validateFields().then(() => {\n      formState.stationId = selectedNode.value.stationId;\n      loadingFlag.value = true;\n      insertArea(formState)\n        .then(() => {\n          message.success('创建成功');\n          reload();\n          loadingFlag.value = false;\n          open.value = false;\n        })\n        .catch(() => {\n          loadingFlag.value = false;\n        });\n    });\n  }\n  function cancelModel() {\n    open.value = false;\n    loadingFlag.value = false;\n  }\n\n  // 根据电站id获取分期信息\n  function getOptions() {\n    let param = { stationId: periodParam.value.stationId };\n    // let param = { stationId: '0E012356294F4AC2B81315E1F81BEBB9' };\n    getPeriods(param).then((data) => {\n      options.value = data.result;\n      window.ASoptions = data.result;\n      if (selectedNode.value.nodeKindId == 'station') {\n        disableFlag.value = false;\n        formState.stationPeriodId = data.result[0].value;\n      } else if (selectedNode.value.nodeKindId == 'period') {\n        formState.stationPeriodId = selectedNode.value.periodId;\n        disableFlag.value = true;\n      }\n    });\n  }\n  // 左侧树状菜单选中事件\n  function handleSelect(node = {}) {\n    selectedNode.value.stationId = null;\n    if (node.nodeKindId == 'station') {\n      selectedNode.value.stationId = node.powerStationId;\n      selectedNode.value.stationName = node.name;\n      periodParam.value.stationId = node.powerStationId;\n    }\n    if (node.nodeKindId == 'period') {\n      selectedNode.value.stationId = node.powerStationId;\n      selectedNode.value.periodId = node.powerStationPeriodId;\n      periodParam.value.stationId = node.powerStationId;\n      selectedNode.value.stationName = node.name;\n    }\n    selectedNode.value.nodeKindId = node.nodeKindId;\n    periodParam.value.nodeKindId = node.nodeKindId;\n    selectedNode.value.searchId = node.id;\n\n    // 处理数据编辑状态\n    if (currentEditKeyRef.value != '') {\n      message.error('请先完成编辑。');\n      return false;\n    } else {\n      reload();\n    }\n  }\n  // 行修改\n  function handleEdit(record: EditRecordRow) {\n    periodParam.value.stationId = record.stationId;\n    periodParam.value.nodeKindId = 'station';\n    getOptions();\n    currentEditKeyRef.value = handleRecordKey(record);\n    record.onEdit?.(true);\n  }\n\n  const handleRecordKey = (record) => {\n    if (Reflect.has(record, 'key')) {\n      return Reflect.get(record, 'key');\n    } else if (Reflect.has(record, 'id')) {\n      return Reflect.get(record, 'id');\n    } else {\n      return '';\n    }\n  };\n\n  const handleCellDisabled = (record) => {\n    const result = currentEditKeyRef.value\n      ? currentEditKeyRef.value !== handleRecordKey(record)\n      : false;\n    return result;\n  };\n\n  // 行修改后保存\n  async function handleSave(record: EditRecordRow) {\n    const valid = await record.onValid?.();\n    if (valid) {\n      updateArea(record).then(() => {\n        currentEditKeyRef.value = '';\n        message.success('已修改');\n        reload();\n      });\n    }\n  }\n  // 行修改取消\n  function handleUnSave(record: EditRecordRow) {\n    currentEditKeyRef.value = '';\n    record.onEdit?.(false, false);\n  }\n  // 绑定行操作按钮\n  function getAreaAction(record: EditRecordRow) {\n    if (!record.editable) {\n      return [\n        {\n          label: '修改',\n          icon: 'clarity:bullet-list-line',\n          disabled: handleCellDisabled(record), // record里面不存在字段‘key’，导致异常\n          onClick: handleEdit.bind(null, record),\n        },\n      ];\n    }\n    return [\n      {\n        label: '保存',\n        onClick: handleSave.bind(null, record),\n      },\n      {\n        label: '取消',\n        popConfirm: {\n          title: '是否取消修改',\n          confirm: handleUnSave.bind(null, record),\n        },\n      },\n    ];\n  }\n\n  function initPeriods() {\n    getPeriods({ stationId: '' }).then((data) => {\n      window.ASoptions = data.result;\n    });\n  }\n  // 启动执行代码\n  onMounted(() => {\n    queryDeptTreeList();\n    // 查询所有的分期信息\n    initPeriods();\n  });\n</script>\n<style lang=\"less\" scoped>\n  .dialog-mask {\n    position: absolute;\n    z-index: 1001 !important;\n    top: -1px;\n    width: 100%;\n    height: 100%;\n    opacity: 0.3;\n    background: #ccc;\n  }\n\n  .left-tree-layout {\n    flex-shrink: 0;\n    width: 298px;\n    border-radius: 2px;\n  }\n\n  .right-table-layout {\n    width: calc(100% - 308px);\n  }\n\n  .fix-basic-table {\n    padding: 10px;\n\n    :deep(&.vben-basic-table .ant-table-wrapper) {\n      height: 100%;\n      max-height: 100%;\n      padding: 10px 16px 12px;\n      overflow: hidden;\n    }\n\n    :deep(.table-settings) {\n      margin-right: 0;\n    }\n\n    :deep(.table-settings .anticon-setting) {\n      margin-right: 0;\n    }\n  }\n</style>\n"],"names":["getPeriods","params","defHttp","hRender","node","key","h","Tooltip","getAreaListColumns","options","text","record","__async","getTreeData","getAreaList","insertArea","updateArea","deleteArea","useI18n","createConfirm","useMessage","searchInfo","reactive","treeData","ref","selectedNode","periodParam","open","loadingFlag","disableFlag","currentEditKeyRef","modelTitle","checkedKeys","areaColumn","formState","modalFormRef","getAreaListByParam","registerTable","reload","getDataSource","useTable","onSelect","onSelectAll","info","sortInfo","selected","id","selectedRows","changeRows","changeIds","item","hasSelected","computed","queryDeptTreeList","deptList","handleCreate","message","getOptions","handleDelete","dataList","handleSuccess","cancelModel","param","data","handleSelect","handleEdit","handleRecordKey","_a","handleCellDisabled","handleSave","handleUnSave","getAreaAction","initPeriods","onMounted"],"mappings":"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"}