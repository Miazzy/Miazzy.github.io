{"version":3,"file":"EchartPieChart.vue_vue_type_script_setup_true_lang-58fa16af.js","sources":["../../src/components/Framework/Chart/EchartPieChart.vue"],"sourcesContent":["<template>\n  <div class=\"pie-chart-box\">\n    <div\n      v-show=\"!noData\"\n      :id=\"props.id\"\n      ref=\"chart\"\n      :style=\"`width: ${\n        typeof props.width == 'number' ? props.width + 'px' : props.width\n      }; height: ${typeof props.height == 'number' ? props.height + 'px' : props.height};`\"\n    ></div>\n    <div\n      v-if=\"noData\"\n      :style=\"`width: ${\n        typeof props.width == 'number' ? props.width + 'px' : props.width\n      }; height: ${\n        typeof props.height == 'number' ? props.height + 'px' : props.height\n      };transform: scale(0.85);`\"\n    >\n      <NoData />\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\" setup>\n  import * as echarts from 'echarts';\n  import { onMounted, watch, PropType, nextTick, ref, computed } from 'vue';\n  import NoData from '/@/components/Framework/Chart/NoData.vue';\n\n  const props = defineProps({\n    width: { type: [Number, String], default: 600 },\n    height: { type: [Number, String], default: 300 },\n    data: Array,\n    id: { type: String },\n    showLabel: { type: Boolean, default: false }, // 是否显示饼图图形旁边的文字标签\n    roseType: { type: [String, Boolean], default: 'radius' }, // 是否展示成南丁格尔图，通过半径区分数据大小 radius/area\n    radius: { type: Array as PropType<Array<number | string>>, default: [30, 100] },\n    labelFormatter: { type: [String, Function], default: '{b}：{c}' },\n    showLegend: { type: Boolean, default: false }, // 是否显示图例\n    legendOptions: { type: Object, default: {} }, // 图例配置\n    pieCenter: { type: Array as PropType<Array<number | string>>, default: ['50%', '50%'] }, // 饼图中心位置\n    colors: {\n      // 饼图颜色 默认蓝绿黄红紫\n      type: Array,\n      default: [\n        {\n          type: 'linear',\n          x: 0,\n          y: 0,\n          x2: 0,\n          y2: 1,\n          colorStops: [\n            {\n              offset: 0,\n              color: '#00ddff', // 0% 处的颜色\n            },\n            {\n              offset: 1,\n              color: '#008efb', // 100% 处的颜色\n            },\n          ],\n          global: false, // 缺省为 false\n        },\n        {\n          type: 'linear',\n          x: 0,\n          y: 1,\n          x2: 0,\n          y2: 0,\n          colorStops: [\n            {\n              offset: 0,\n              color: '#00ffa5', // 0% 处的颜色\n            },\n            {\n              offset: 1,\n              color: '#01aa21', // 100% 处的颜色\n            },\n          ],\n          global: false, // 缺省为 false\n        },\n        {\n          type: 'linear',\n          x: 0,\n          y: 1,\n          x2: 0,\n          y2: 0,\n          colorStops: [\n            {\n              offset: 0,\n              color: '#ffdd4d', // 0% 处的颜色\n            },\n            {\n              offset: 1,\n              color: '#e18f18', // 100% 处的颜色\n            },\n          ],\n          global: false, // 缺省为 false\n        },\n        {\n          type: 'linear',\n          x: 0,\n          y: 1,\n          x2: 0,\n          y2: 0,\n          colorStops: [\n            {\n              offset: 0,\n              color: '#dc6a4c', // 0% 处的颜色\n            },\n            {\n              offset: 1,\n              color: '#b73422', // 100% 处的颜色\n            },\n          ],\n          global: false, // 缺省为 false\n        },\n        {\n          type: 'linear',\n          x: 0,\n          y: 1,\n          x2: 0,\n          y2: 0,\n          colorStops: [\n            {\n              offset: 0,\n              color: '#7626b9', // 0% 处的颜色\n            },\n            {\n              offset: 1,\n              color: '#bf55e5', // 100% 处的颜色\n            },\n          ],\n          global: false, // 缺省为 false\n        },\n      ],\n    }, // 饼图颜色\n    tooltipFormatter: { type: [String, Function], default: '{b}：{d}%' },\n  });\n  const emit = defineEmits(['clickItem']);\n\n  const noData = computed(() => {\n    if (props.data?.length) {\n      return false;\n    } else {\n      return true;\n    }\n  });\n\n  const setupData = () => {\n    const chartDom = document.getElementById(props.id);\n    let myChart = echarts.getInstanceByDom(chartDom);\n    if (myChart == undefined) {\n      myChart = echarts.init(chartDom);\n    }\n    const option = {\n      color: props.colors,\n      legend: {\n        show: props.showLegend,\n        bottom: '6%',\n        left: 'center',\n        orient: 'horizontal',\n        icon: 'circle',\n        itemWidth: 8,\n        itemHeight: 8,\n        textStyle: {\n          color: 'rgba(255,255,255,0.6)',\n          fontSize: 10,\n          height: 10,\n          lineHeight: 10,\n          rich: {},\n          padding: [4, 0, 0, 0],\n        },\n        ...props.legendOptions,\n      },\n      tooltip: {\n        show: true,\n        textStyle: {\n          color: '#fff',\n        },\n        backgroundColor: 'rgb(50,175,255, 15%)',\n        borderColor: 'transparent',\n        formatter: props.tooltipFormatter,\n        position: function (point, params, dom, rect, size) {\n          var x = 0; // x坐标位置\n          var y = 0; // y坐标位置\n          var pointX = point[0];\n          var pointY = point[1];\n          var boxWidth = size.contentSize[0];\n          var boxHeight = size.contentSize[1];\n          if (boxWidth > pointX) {\n            x = pointX + 10;\n          } else {\n            x = pointX - boxWidth - 10;\n          }\n          if (boxHeight > pointY) {\n            y = 5;\n          } else {\n            y = pointY - boxHeight;\n          }\n          return [x, y];\n        },\n      },\n      series: [\n        {\n          name: '',\n          type: 'pie',\n          radius: props.radius,\n          center: props.pieCenter,\n          roseType: props.roseType,\n          itemStyle: {\n            borderRadius: 3,\n            borderColor: 'transparent',\n            borderWidth: 5\n          },\n          data: props.data,\n          label: {\n            show: props.showLabel,\n            formatter: props.labelFormatter,\n            overflow: 'break',\n            textBorderType: 'none',\n            color: '#BAC3C4',\n            distanceToLabelLine: 40,\n            padding: [2, 0]\n          },\n          labelLine: {\n            length: 20,\n            length2: 0,\n            lineStyle: {\n              color: 'rgba(255,255,255,0.4)',\n              type: 'dashed',\n            },\n            maxSurfaceAngle: 80\n          },\n          padAngle: 5,\n          labelLayout: function (params) {\n            if(!props.showLabel) return ({});\n            const isLeft = params.labelRect.x < myChart.getWidth() / 2;\n            const points = params.labelLinePoints;\n            // Update the end point.\n            points[2][0] = isLeft\n              ? params.labelRect.x\n              : params.labelRect.x + params.labelRect.width;\n            return {\n              labelLinePoints: points,\n              verticalAlign: 'bottom',\n            };\n          },\n        },\n      ],\n    };\n    option && myChart.setOption(option);\n  };\n\n  watch(\n    () => props.data,\n    (newData) => {\n      setupData();\n    },\n    {\n      deep: true,\n    },\n  );\n\n  watch(\n    () => props.height,\n    () => {\n      setTimeout(() => {\n        const chartDom = document.getElementById(props.id);\n        let myChart = echarts?.getInstanceByDom(chartDom);\n        myChart?.resize();\n      }, 100);\n    },\n  );\n\n  onMounted(() => {\n    setupData();\n    nextTick(() => {\n      const chartDom = document.getElementById(props.id);\n      let myChart = echarts.getInstanceByDom(chartDom);\n      myChart.on('click', (params) => {\n        emit('clickItem', params);\n      });\n    });\n  });\n</script>\n<style lang=\"less\" scoped></style>\n"],"names":["noData","computed","_a","props","setupData","chartDom","myChart","echarts.getInstanceByDom","echarts.init","option","__spreadValues","point","params","dom","rect","size","x","y","pointX","pointY","boxWidth","boxHeight","isLeft","points","watch","newData","echarts?.getInstanceByDom","onMounted","nextTick","emit"],"mappings":"4uDA4IQA,EAASC,EAAS,IAAM,OACxB,MAAA,GAAAC,EAAAC,EAAM,OAAN,MAAAD,EAAY,OAIhB,CACD,EAEKE,EAAY,IAAM,CACtB,MAAMC,EAAW,SAAS,eAAeF,EAAM,EAAE,EAC7C,IAAAG,EAAUC,EAAyBF,CAAQ,EAC3CC,GAAW,OACHA,EAAAE,EAAaH,CAAQ,GAEjC,MAAMI,EAAS,CACb,MAAON,EAAM,OACb,OAAQO,EAAA,CACN,KAAMP,EAAM,WACZ,OAAQ,KACR,KAAM,SACN,OAAQ,aACR,KAAM,SACN,UAAW,EACX,WAAY,EACZ,UAAW,CACT,MAAO,wBACP,SAAU,GACV,OAAQ,GACR,WAAY,GACZ,KAAM,CAAC,EACP,QAAS,CAAC,EAAG,EAAG,EAAG,CAAC,CACtB,GACGA,EAAM,eAEX,QAAS,CACP,KAAM,GACN,UAAW,CACT,MAAO,MACT,EACA,gBAAiB,uBACjB,YAAa,cACb,UAAWA,EAAM,iBACjB,SAAU,SAAUQ,EAAOC,EAAQC,EAAKC,EAAMC,EAAM,CAClD,IAAIC,EAAI,EACJC,EAAI,EACJC,EAASP,EAAM,CAAC,EAChBQ,EAASR,EAAM,CAAC,EAChBS,EAAWL,EAAK,YAAY,CAAC,EAC7BM,EAAYN,EAAK,YAAY,CAAC,EAClC,OAAIK,EAAWF,EACbF,EAAIE,EAAS,GAEbF,EAAIE,EAASE,EAAW,GAEtBC,EAAYF,EACVF,EAAA,EAEJA,EAAIE,EAASE,EAER,CAACL,EAAGC,CAAC,CACd,CACF,EACA,OAAQ,CACN,CACE,KAAM,GACN,KAAM,MACN,OAAQd,EAAM,OACd,OAAQA,EAAM,UACd,SAAUA,EAAM,SAChB,UAAW,CACT,aAAc,EACd,YAAa,cACb,YAAa,CACf,EACA,KAAMA,EAAM,KACZ,MAAO,CACL,KAAMA,EAAM,UACZ,UAAWA,EAAM,eACjB,SAAU,QACV,eAAgB,OAChB,MAAO,UACP,oBAAqB,GACrB,QAAS,CAAC,EAAG,CAAC,CAChB,EACA,UAAW,CACT,OAAQ,GACR,QAAS,EACT,UAAW,CACT,MAAO,wBACP,KAAM,QACR,EACA,gBAAiB,EACnB,EACA,SAAU,EACV,YAAa,SAAUS,EAAQ,CAC7B,GAAG,CAACT,EAAM,UAAW,MAAQ,GAC7B,MAAMmB,EAASV,EAAO,UAAU,EAAIN,EAAQ,SAAa,EAAA,EACnDiB,EAASX,EAAO,gBAEtB,OAAAW,EAAO,CAAC,EAAE,CAAC,EAAID,EACXV,EAAO,UAAU,EACjBA,EAAO,UAAU,EAAIA,EAAO,UAAU,MACnC,CACL,gBAAiBW,EACjB,cAAe,QAAA,CAEnB,CACF,CACF,CAAA,EAEQd,GAAAH,EAAQ,UAAUG,CAAM,CAAA,EAGpC,OAAAe,EACE,IAAMrB,EAAM,KACXsB,GAAY,CACDrB,GACZ,EACA,CACE,KAAM,EACR,CAAA,EAGFoB,EACE,IAAMrB,EAAM,OACZ,IAAM,CACJ,WAAW,IAAM,CACf,MAAME,EAAW,SAAS,eAAeF,EAAM,EAAE,EAC7C,IAAAG,EAAUoB,EAA0BrB,CAAQ,EAChDC,GAAA,MAAAA,EAAS,UACR,GAAG,CACR,CAAA,EAGFqB,EAAU,IAAM,CACJvB,IACVwB,EAAS,IAAM,CACb,MAAMvB,EAAW,SAAS,eAAeF,EAAM,EAAE,EACnCI,EAAyBF,CAAQ,EACvC,GAAG,QAAUO,GAAW,CAC9BiB,EAAK,YAAajB,CAAM,CAAA,CACzB,CAAA,CACF,CAAA,CACF"}