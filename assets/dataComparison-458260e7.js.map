{"version":3,"file":"dataComparison-458260e7.js","sources":["../../src/views/monitor/component/dataComparison.vue"],"sourcesContent":["<!--\n * @Description: 升压站总览-数据对比\n * @Date: 2023-10-20 14:33:10\n * @LastEditTime: 2023-10-20 15:16:46\n * @FilePath: \\ygwl-framework\\src\\views\\monitor\\boosterStation\\boosterStationOverview\\dataComparison.vue\n-->\n<template>\n  <div class=\"data-comparison\">\n    <div class=\"header-box\">\n      <div class=\"header-left\">\n        <div class=\"date-picker-box\">\n          <RangePicker\n            v-model:value=\"dateRange\"\n            valueFormat=\"YYYY-MM-DD\"\n            @change=\"handleChangeDateRange\"\n          />\n        </div>\n        <div class=\"select-box\">\n          <Select\n            v-model:value=\"target\"\n            style=\"min-width: 206px\"\n            placeholder=\"选择指标\"\n            :options=\"targetOptions\"\n            :max-tag-count=\"2\"\n            showArrow\n            @change=\"handleTargetChange\"\n          />\n        </div>\n      </div>\n    </div>\n    <div class=\"content-box\">\n      <div class=\"chart-box\">\n        <div style=\"margin-top: 20px; transform: scale(0.85); transform-origin: 0 0\">\n          <EchartLineChart\n            :data=\"pchartData\"\n            :width=\"props.echartWidth\"\n            :height=\"props.echartHeight\"\n            :smooth=\"true\"\n            :disableDataZoom=\"false\"\n            :customTooltipFormatter=\"chartTooltipFormatter\"\n          /> </div\n      ></div>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\" setup>\n  import { ref, reactive, onMounted, watch } from 'vue';\n  import { Select, RangePicker } from 'ant-design-vue';\n  import Icon from '@/components/Icon/Icon.vue';\n  import type { SelectProps } from 'ant-design-vue';\n  import dayjs, { Dayjs } from 'dayjs';\n  import { formatDate } from '/@/utils/dateUtil';\n  import { BasicTable, useTable, TableAction, BasicColumn } from '/@/components/Table';\n  import EchartLineChart from '/@/components/Framework/Chart/EchartLineChart.vue';\n  import { getChartData } from '../monitorApi.ts';\n  // 父组件穿过来的表格字段，指标列表\n  interface Props {\n    indexType?: [];\n    esn?: null;\n  }\n  const pchartData = reactive({\n    barData: [],\n    lineData: [],\n    categories: [],\n    units: [],\n    seriesName: [],\n    colors: [\n      ['#078C5D', '#68E4B8'],\n      ['#E59837', '#FAE895'],\n      ['#078C5D', '#68E4B8'],\n    ],\n  });\n  const props = defineProps({\n    indexType: { type: Array, default: [] },\n    esn: { type: String, default: '' },\n    echartWidth: { type: Number, default: 1200 },\n    echartHeight: { type: Number, default: 712 },\n  });\n  const pChartSeriesName = ref([]);\n  // 选择日期\n  type RangeValue = [Dayjs, Dayjs];\n  const dateRange = ref<RangeValue>();\n  const handleChangeDateRange = (value) => {\n    console.log('选择日期范围', value);\n    loadChartData();\n  };\n\n  // 选择指标\n  const target = ref([]);\n  const targetOptions = ref<SelectProps['options']>([]);\n\n  const handleTargetChange = (value: string[]) => {\n    console.log(`selected ${value}`);\n    target.value = [];\n    target.value.push(value);\n    loadChartData();\n  };\n\n  const loadBaseInfo = async () => {\n    let tempOptions = [];\n    props.indexType.forEach((item) => {\n      if (target.value.length == 0) {\n        target.value.push(item.addressField);\n      }\n      tempOptions.push({ label: item.addressDesc, value: item.addressField });\n    });\n    targetOptions.value = tempOptions;\n    // 初始化日期\n    let current = formatDate(new Date());\n    dateRange.value = [dayjs(current, 'YYYY-MM-DD'), dayjs(current, 'YYYY-MM-DD')];\n    loadChartData();\n  };\n  // 获取数据\n  const loadChartData = async () => {\n    let params = {};\n    let esns = [];\n    esns.push(props.esn);\n    if (target.value.length === 0) {\n      return;\n    }\n    params.queryFieldList = target.value;\n    params.startDate = formatDate(dateRange.value[0]);\n    params.endDate = formatDate(dateRange.value[1]);\n    params.esns = esns;\n    params.esn = props.esn;\n    params.dataType = 1;\n    params.isCrossTian = true;\n    params.sortField = 'timestamps';\n    params.sortType = 'asc';\n    let res = await getChartData(params);\n    if (res.hisData.length > 0) {\n      let lineData = [];\n      res.hisData.forEach((element) => {\n        lineData.push(element.dataList[0]);\n      });\n      // lineData.push(res[0].dataList);\n      // lineData.push(res[1].dataList);\n      pchartData.lineData = lineData;\n      pchartData.categories = res.hisData[0].timeList;\n      pchartData.units = res.unitList;\n      pchartData.seriesName = res.seriesNames;\n    }\n  };\n\n  // 折线图格式化\n  const chartTooltipFormatter = (params) => {\n    const units = pchartData.units;\n    const name = pchartData.seriesName;\n    let content = '';\n    if (params?.length) {\n      content = `${params[0].name}<br />`;\n      params.forEach((item, index) => {\n        content = content + `${name[index]}：${item.value} ${units[index]}`;\n        if (index < params.length - 1) {\n          content = content + `<br />`;\n        }\n      });\n    }\n    return content;\n  };\n\n  const clearTarget = () => {\n    target.value = [];\n  };\n\n  watch(\n    () => props.indexType,\n    (newValue) => {\n      loadBaseInfo();\n    },\n  );\n\n  // 启动执行代码\n  onMounted(() => {\n    target.value = [];\n    loadBaseInfo();\n  });\n  defineExpose({ loadBaseInfo, clearTarget });\n</script>\n\n<style lang=\"less\" scoped>\n  .data-comparison {\n    .header-box {\n      display: flex;\n      align-items: center;\n      justify-content: space-between;\n      padding: 10px 15px 0;\n\n      .header-left {\n        display: flex;\n        align-items: center;\n      }\n    }\n\n    .date-picker-box {\n      margin-right: 20px;\n    }\n  }\n</style>\n"],"names":["pchartData","reactive","ref","dateRange","handleChangeDateRange","value","loadChartData","target","targetOptions","handleTargetChange","loadBaseInfo","__async","tempOptions","props","item","current","formatDate","dayjs","params","esns","res","getChartData","lineData","element","chartTooltipFormatter","units","name","content","index","clearTarget","watch","newValue","onMounted","__expose"],"mappings":"ujCA6DQA,EAAaC,EAAS,CAC1B,QAAS,CAAC,EACV,SAAU,CAAC,EACX,WAAY,CAAC,EACb,MAAO,CAAC,EACR,WAAY,CAAC,EACb,OAAQ,CACN,CAAC,UAAW,SAAS,EACrB,CAAC,UAAW,SAAS,EACrB,CAAC,UAAW,SAAS,CACvB,CAAA,CACD,EAOwBC,EAAI,CAAA,CAAE,EAG/B,MAAMC,EAAYD,IACZE,EAAyBC,GAAU,CAC/B,QAAA,IAAI,SAAUA,CAAK,EACbC,GAAA,EAIVC,EAASL,EAAI,CAAA,CAAE,EACfM,EAAgBN,EAA4B,CAAA,CAAE,EAE9CO,EAAsBJ,GAAoB,CACtC,QAAA,IAAI,YAAYA,CAAK,EAAE,EAC/BE,EAAO,MAAQ,GACRA,EAAA,MAAM,KAAKF,CAAK,EACTC,GAAA,EAGVI,EAAe,IAAYC,EAAA,sBAC/B,IAAIC,EAAc,CAAA,EACZC,EAAA,UAAU,QAASC,GAAS,CAC5BP,EAAO,MAAM,QAAU,GAClBA,EAAA,MAAM,KAAKO,EAAK,YAAY,EAEzBF,EAAA,KAAK,CAAE,MAAOE,EAAK,YAAa,MAAOA,EAAK,aAAc,CAAA,CACvE,EACDN,EAAc,MAAQI,EAEtB,IAAIG,EAAUC,EAAe,IAAA,IAAM,EACzBb,EAAA,MAAQ,CAACc,EAAMF,EAAS,YAAY,EAAGE,EAAMF,EAAS,YAAY,CAAC,EAC/DT,GAAA,GAGVA,EAAgB,IAAYK,EAAA,sBAChC,IAAIO,EAAS,CAAA,EACTC,EAAO,CAAA,EAEP,GADCA,EAAA,KAAKN,EAAM,GAAG,EACfN,EAAO,MAAM,SAAW,EAC1B,OAEFW,EAAO,eAAiBX,EAAO,MAC/BW,EAAO,UAAYF,EAAWb,EAAU,MAAM,CAAC,CAAC,EAChDe,EAAO,QAAUF,EAAWb,EAAU,MAAM,CAAC,CAAC,EAC9Ce,EAAO,KAAOC,EACdD,EAAO,IAAML,EAAM,IACnBK,EAAO,SAAW,EAClBA,EAAO,YAAc,GACrBA,EAAO,UAAY,aACnBA,EAAO,SAAW,MACd,IAAAE,EAAM,MAAMC,EAAaH,CAAM,EAC/B,GAAAE,EAAI,QAAQ,OAAS,EAAG,CAC1B,IAAIE,EAAW,CAAA,EACXF,EAAA,QAAQ,QAASG,GAAY,CAC/BD,EAAS,KAAKC,EAAQ,SAAS,CAAC,CAAC,CAAA,CAClC,EAGDvB,EAAW,SAAWsB,EACtBtB,EAAW,WAAaoB,EAAI,QAAQ,CAAC,EAAE,SACvCpB,EAAW,MAAQoB,EAAI,SACvBpB,EAAW,WAAaoB,EAAI,WAC9B,CAAA,GAIII,EAAyBN,GAAW,CACxC,MAAMO,EAAQzB,EAAW,MACnB0B,EAAO1B,EAAW,WACxB,IAAI2B,EAAU,GACd,OAAIT,GAAA,MAAAA,EAAQ,SACVS,EAAU,GAAGT,EAAO,CAAC,EAAE,IAAI,SACpBA,EAAA,QAAQ,CAACJ,EAAMc,IAAU,CACpBD,EAAAA,EAAU,GAAGD,EAAKE,CAAK,CAAC,IAAId,EAAK,KAAK,IAAIW,EAAMG,CAAK,CAAC,GAC5DA,EAAQV,EAAO,OAAS,IAC1BS,EAAUA,EAAU,SACtB,CACD,GAEIA,CAAA,EAGHE,EAAc,IAAM,CACxBtB,EAAO,MAAQ,EAAC,EAGlB,OAAAuB,EACE,IAAMjB,EAAM,UACXkB,GAAa,CACCrB,GACf,CAAA,EAIFsB,EAAU,IAAM,CACdzB,EAAO,MAAQ,GACFG,GAAA,CACd,EACYuB,EAAA,CAAE,aAAAvB,EAAc,YAAAmB,CAAA,CAAa"}