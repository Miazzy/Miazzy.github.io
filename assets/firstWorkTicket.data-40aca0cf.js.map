{"version":3,"file":"firstWorkTicket.data-40aca0cf.js","sources":["../../src/views/po/ticket/firstworkticket/firstWorkTicket.data.ts"],"sourcesContent":["import { defHttp } from '/@/utils/http/axios';\nimport { BasicColumn } from '/@/components/Table';\nimport { useRender } from '@/components/Table';\nimport type { FormProps } from '/@/components/Form/src/types/form';\nimport { useUserStore } from '/@/store/modules/user';\n\nexport enum Api {\n  LIST_STATION_TREE_URL = '/baseset/common/list-orgStationTree',\n  LIST_STATION_PERSON_URL = '/baseset/common/list-stationPerson',\n  CREATE_URL = '/po/ticket/firstworkticket/create',\n  UPDATE_URL = '/po/ticket/firstworkticket/update',\n  DELETE_URL = '/po/ticket/firstworkticket/delete',\n  UPLOAD_FILE_URL = '/po/ticket/firstworkticket/upload-file',\n  EXPORT_EXCEL_URL = '/po/ticket/firstworkticket/export-excel',\n  GET_URL = '/po/ticket/firstworkticket/get',\n  PAGE_URL = '/po/ticket/firstworkticket/page',\n  GET_ORG_URL = '/po/ticket/operationticket/org',\n  LIST_MATTER_URL = '/po/ticket/firstworkticket/matter/list',\n  LIST_MEASURE_URL = '/po/ticket/firstworkticket/measure/list',\n  LIST_RECORD_URL = '/po/ticket/firstworkticket/record/list',\n  LIST_TASK_URL = '/po/ticket/firstworkticket/task/list',\n}\n\nconst dateTimeFormat = 'YYYY-MM-DD HH:mm';\n\n// 获取电站树\nexport const getTreeList = (params) =>\n  defHttp.post(\n    {\n      url: Api.LIST_STATION_TREE_URL,\n      params,\n    },\n    {},\n  );\n\n// 获取电站下的组织人员\nexport const getStationPerson = (params) =>\n  defHttp.post(\n    {\n      url: Api.LIST_STATION_PERSON_URL,\n      params,\n    },\n    {},\n  );\n\n// 添加第一种票\nexport const createData = (params) =>\n  defHttp.post(\n    {\n      url: Api.CREATE_URL,\n      params,\n    },\n    {},\n  );\n\n// 修改第一种票\nexport const updateData = (params) =>\n  defHttp.put(\n    {\n      url: Api.UPDATE_URL,\n      params,\n    },\n    {},\n  );\n\nexport const saveData = (params) => {\n  if (!params.id) {\n    return createData(params);\n  }\n  return updateData(params);\n};\n\n// 删除第一种票\nexport const deleteData = (params) =>\n  defHttp.delete(\n    {\n      url: Api.DELETE_URL,\n      params,\n    },\n    {},\n  );\n\n// 导出第一种票\nexport const exportExcel = (params) =>\n  defHttp.post(\n    {\n      url: Api.EXPORT_EXCEL_URL,\n      params,\n      responseType: 'blob',\n    },\n    { isOnlyResult: true },\n  );\n\n// 上传第一种票文件\nexport const uploadFile = (params) =>\n  defHttp.post(\n    {\n      url: Api.UPLOAD_FILE_URL,\n      params,\n    },\n    {},\n  );\n\n// 获取第一种票\nexport const getData = (params) =>\n  defHttp.get(\n    {\n      url: Api.GET_URL,\n      params,\n    },\n    {},\n  );\n\n// 分页获取第一种票列表\nexport const getPage = (params) =>\n  defHttp.get(\n    {\n      url: Api.PAGE_URL,\n      params,\n    },\n    {},\n  );\n\n// 获取第一种票注意事项列表\nexport const getMatterList = (params) =>\n  defHttp.get(\n    {\n      url: Api.LIST_MATTER_URL,\n      params,\n    },\n    {},\n  );\n\n// 获取第一种票安全措施列表\nexport const getMeasureList = (params) =>\n  defHttp.get(\n    {\n      url: Api.LIST_MEASURE_URL,\n      params,\n    },\n    {},\n  );\n\n// 获取第一种票记录列表\nexport const getRecordList = (params) =>\n  defHttp.get(\n    {\n      url: Api.LIST_RECORD_URL,\n      params,\n    },\n    {},\n  );\n\n// 获取第一种票记录列表\nexport const getTaskList = (params) =>\n  defHttp.get(\n    {\n      url: Api.LIST_TASK_URL,\n      params,\n    },\n    {},\n  );\n\n// 获取登录用户信息\nexport const getOrg = (params) =>\n  defHttp.get(\n    {\n      url: Api.GET_ORG_URL,\n      params,\n    },\n    {},\n  );\n\nexport const columns = (): BasicColumn[] => {\n  const result = [\n    {\n      title: '工作票号',\n      dataIndex: 'ticketNumber',\n      sorter: true,\n      resizable: true,\n      width: 200,\n    },\n    {\n      title: '所属公司',\n      dataIndex: 'stationOrganName',\n      headAlign: 'center',\n      align: 'left',\n      sorter: true,\n      resizable: true,\n      width: 220,\n    },\n    {\n      title: '电站名称',\n      dataIndex: 'stationName',\n      headAlign: 'center',\n      align: 'left',\n      sorter: true,\n      resizable: true,\n      width: 220,\n    },\n    {\n      title: '电站设备名称',\n      dataIndex: 'subject',\n      headAlign: 'center',\n      align: 'left',\n      sorter: true,\n      resizable: true,\n      width: 220,\n    },\n    {\n      title: '工作负责人',\n      dataIndex: 'headName',\n      sorter: true,\n      resizable: true,\n      width: 120,\n    },\n    {\n      title: '计划工作开始时间',\n      dataIndex: 'startTime',\n      sorter: true,\n      resizable: true,\n      width: 150,\n      customRender: ({ text }) => {\n        return useRender.renderDate(text, dateTimeFormat);\n      },\n    },\n    {\n      title: '计划工作结束时间',\n      dataIndex: 'endTime',\n      sorter: true,\n      resizable: true,\n      width: 150,\n      customRender: ({ text }) => {\n        return useRender.renderDate(text, dateTimeFormat);\n      },\n    },\n    {\n      title: '操作开始时间',\n      dataIndex: 'opstartTime',\n      sorter: true,\n      resizable: true,\n      width: 150,\n      customRender: ({ text }) => {\n        return useRender.renderDate(text, dateTimeFormat);\n      },\n    },\n    {\n      title: '操作完成时间',\n      dataIndex: 'opendTime',\n      sorter: true,\n      resizable: true,\n      width: 150,\n      customRender: ({ text }) => {\n        return useRender.renderDate(text, dateTimeFormat);\n      },\n    },\n    {\n      title: '检查结论',\n      dataIndex: 'result',\n      sorter: true,\n      resizable: true,\n      width: 100,\n      customRender: ({ record }) => {\n        return record.resultText;\n      },\n    },\n    {\n      title: '检查时间',\n      dataIndex: 'checkTime',\n      sorter: true,\n      resizable: true,\n      width: 150,\n    },\n    {\n      title: '创建人',\n      dataIndex: 'personMemberName',\n      sorter: true,\n      resizable: true,\n      width: 100,\n    },\n    {\n      title: '创建时间',\n      dataIndex: 'fillinDate',\n      sorter: true,\n      resizable: true,\n      width: 150,\n    },\n    {\n      title: '审批状态',\n      dataIndex: 'status',\n      sorter: true,\n      resizable: true,\n      width: 100,\n      customRender: ({ text, record }) => {\n        return useRender.renderFlowStatus(text, record.statusText);\n      },\n    },\n  ];\n  if (useUserStore().isMultiOrganization) {\n    return result as BasicColumn[];\n  } else {\n    const [one, , ...others] = result;\n    return [one, ...others] as BasicColumn[];\n  }\n};\n\nexport const searchForm: FormProps = {\n  baseColProps: { span: 8 },\n  labelWidth: 120,\n  autoAdvancedLine: 1,\n  schemas: [\n    {\n      field: 'ticketNumber',\n      label: '工作票号',\n      component: 'Input',\n    },\n    {\n      field: '[opstartTime, opendTime]',\n      label: '实际工作起始日期',\n      component: 'RangePicker',\n      componentProps: {\n        format: 'YYYY-MM-DD',\n        valueFormat: 'YYYY-MM-DD',\n        placeholder: ['开始日期', '结束日期'],\n        style: 'width:100%',\n      },\n    },\n    {\n      field: 'result',\n      label: '检查结论',\n      component: 'DictSelectBox',\n      componentProps: {\n        type: 'inspection_conclusion',\n      },\n    },\n    {\n      field: '[beforeCheckTime, afterCheckTime]',\n      label: '检查时间',\n      component: 'RangePicker',\n      componentProps: {\n        format: 'YYYY-MM-DD',\n        valueFormat: 'YYYY-MM-DD',\n        placeholder: ['开始日期', '结束日期'],\n        style: 'width:100%',\n      },\n    },\n    {\n      field: '[beforeFillinDate, afterFillinDate]',\n      label: '创建时间',\n      component: 'RangePicker',\n      componentProps: {\n        format: 'YYYY-MM-DD',\n        valueFormat: 'YYYY-MM-DD',\n        placeholder: ['开始日期', '结束日期'],\n        style: 'width:100%',\n      },\n    },\n    {\n      field: 'status',\n      label: '审批状态',\n      component: 'DictSelectBox',\n      componentProps: {\n        type: 'bpm_process_instance_result',\n      },\n    },\n  ],\n};\n\n// 工作任务\nexport const taskColumns: BasicColumn[] = [\n  {\n    title: '工作地点及设备名称',\n    dataIndex: 'title',\n    width: 140,\n    headAlign: 'center',\n    align: 'left',\n  },\n  {\n    title: '工作内容',\n    dataIndex: 'content',\n    width: 220,\n    headAlign: 'center',\n    align: 'left',\n  },\n];\n\n// 安全措施\nexport const getMeasureColumns = (process) => {\n  const columns: BasicColumn[] = [\n    {\n      title: '安全类型',\n      dataIndex: 'sefetyTypeText',\n      width: 140,\n      headAlign: 'center',\n      align: 'left',\n    },\n    {\n      title: '安全措施',\n      dataIndex: 'measure',\n      width: 180,\n      headAlign: 'center',\n      align: 'left',\n    },\n    {\n      title: '执行情况',\n      dataIndex: 'status',\n      width: 100,\n      ifShow: process.stationMember.show,\n    },\n  ];\n  return columns;\n};\n\n// (补充)工作地点及注意事项\nexport const matterColumns: BasicColumn[] = [\n  {\n    title: '工作地点保留带电部分或注意事项',\n    dataIndex: 'matter',\n    width: 220,\n    headAlign: 'center',\n    align: 'left',\n  },\n  {\n    title: '补充工作地点保留带电部分和安全措施',\n    dataIndex: 'measure',\n    width: 220,\n    headAlign: 'center',\n    align: 'left',\n  },\n];\n\n// 每日任务详细记录\nexport const recordColumns: BasicColumn[] = [\n  {\n    title: '开工时间',\n    dataIndex: 'startTime',\n    width: 140,\n  },\n  {\n    title: '收工时间',\n    dataIndex: 'endTime',\n    width: 140,\n  },\n  {\n    title: '备注',\n    dataIndex: 'remark',\n    width: 220,\n    headAlign: 'center',\n    align: 'left',\n  },\n];\n\nexport const detailTableProps: any = {\n  pagination: false,\n  striped: false,\n  useSearchForm: false,\n  showTableSetting: false,\n  bordered: true,\n  showIndexColumn: true,\n  canResize: false,\n};\n"],"names":["dateTimeFormat","getTreeList","params","defHttp","getStationPerson","createData","updateData","saveData","exportExcel","getData","getPage","getMatterList","getMeasureList","getRecordList","getTaskList","getOrg","columns","result","text","useRender","record","useUserStore","one","others","searchForm","taskColumns","getMeasureColumns","process","matterColumns","recordColumns","detailTableProps"],"mappings":"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,WAAY,IACZ,iBAAkB,EAClB,QAAS,CACP,CACE,MAAO,eACP,MAAO,OACP,UAAW,OACb,EACA,CACE,MAAO,2BACP,MAAO,WACP,UAAW,cACX,eAAgB,CACd,OAAQ,aACR,YAAa,aACb,YAAa,CAAC,OAAQ,MAAM,EAC5B,MAAO,YACT,CACF,EACA,CACE,MAAO,SACP,MAAO,OACP,UAAW,gBACX,eAAgB,CACd,KAAM,uBACR,CACF,EACA,CACE,MAAO,oCACP,MAAO,OACP,UAAW,cACX,eAAgB,CACd,OAAQ,aACR,YAAa,aACb,YAAa,CAAC,OAAQ,MAAM,EAC5B,MAAO,YACT,CACF,EACA,CACE,MAAO,sCACP,MAAO,OACP,UAAW,cACX,eAAgB,CACd,OAAQ,aACR,YAAa,aACb,YAAa,CAAC,OAAQ,MAAM,EAC5B,MAAO,YACT,CACF,EACA,CACE,MAAO,SACP,MAAO,OACP,UAAW,gBACX,eAAgB,CACd,KAAM,6BACR,CACF,CACF,CACF,EAGaC,EAA6B,CACxC,CACE,MAAO,YACP,UAAW,QACX,MAAO,IACP,UAAW,SACX,MAAO,MACT,EACA,CACE,MAAO,OACP,UAAW,UACX,MAAO,IACP,UAAW,SACX,MAAO,MACT,CACF,EAGaC,EAAqBC,GACD,CAC7B,CACE,MAAO,OACP,UAAW,iBACX,MAAO,IACP,UAAW,SACX,MAAO,MACT,EACA,CACE,MAAO,OACP,UAAW,UACX,MAAO,IACP,UAAW,SACX,MAAO,MACT,EACA,CACE,MAAO,OACP,UAAW,SACX,MAAO,IACP,OAAQA,EAAQ,cAAc,IAChC,CAAA,EAMSC,EAA+B,CAC1C,CACE,MAAO,kBACP,UAAW,SACX,MAAO,IACP,UAAW,SACX,MAAO,MACT,EACA,CACE,MAAO,oBACP,UAAW,UACX,MAAO,IACP,UAAW,SACX,MAAO,MACT,CACF,EAGaC,EAA+B,CAC1C,CACE,MAAO,OACP,UAAW,YACX,MAAO,GACT,EACA,CACE,MAAO,OACP,UAAW,UACX,MAAO,GACT,EACA,CACE,MAAO,KACP,UAAW,SACX,MAAO,IACP,UAAW,SACX,MAAO,MACT,CACF,EAEaC,EAAwB,CACnC,WAAY,GACZ,QAAS,GACT,cAAe,GACf,iBAAkB,GAClB,SAAU,GACV,gBAAiB,GACjB,UAAW,EACb"}