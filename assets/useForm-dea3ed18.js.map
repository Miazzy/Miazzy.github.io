{"version":3,"file":"useForm-dea3ed18.js","sources":["../../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_createCaseFirst.js","../../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/upperFirst.js","../../src/components/Form/src/hooks/useLabelWidth.ts","../../src/components/Form/src/components/FormItem.vue","../../src/components/Form/src/components/FormAction.vue","../../src/components/Form/src/hooks/useFormValues.ts","../../src/components/Form/src/hooks/useAdvanced.ts","../../src/components/Form/src/hooks/useFormEvents.ts","../../src/components/Form/src/hooks/useAutoFocus.ts","../../src/components/Form/src/BasicForm.vue","../../src/components/Form/src/hooks/useForm.ts"],"sourcesContent":["import castSlice from './_castSlice.js';\nimport hasUnicode from './_hasUnicode.js';\nimport stringToArray from './_stringToArray.js';\nimport toString from './toString.js';\n\n/**\n * Creates a function like `_.lowerFirst`.\n *\n * @private\n * @param {string} methodName The name of the `String` case method to use.\n * @returns {Function} Returns the new case function.\n */\nfunction createCaseFirst(methodName) {\n  return function(string) {\n    string = toString(string);\n\n    var strSymbols = hasUnicode(string)\n      ? stringToArray(string)\n      : undefined;\n\n    var chr = strSymbols\n      ? strSymbols[0]\n      : string.charAt(0);\n\n    var trailing = strSymbols\n      ? castSlice(strSymbols, 1).join('')\n      : string.slice(1);\n\n    return chr[methodName]() + trailing;\n  };\n}\n\nexport default createCaseFirst;\n","import createCaseFirst from './_createCaseFirst.js';\n\n/**\n * Converts the first character of `string` to upper case.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category String\n * @param {string} [string=''] The string to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.upperFirst('fred');\n * // => 'Fred'\n *\n * _.upperFirst('FRED');\n * // => 'FRED'\n */\nvar upperFirst = createCaseFirst('toUpperCase');\n\nexport default upperFirst;\n","import type { Ref } from 'vue';\nimport { computed, unref } from 'vue';\nimport type { FormProps, FormSchema } from '../types/form';\nimport { isNumber } from '/@/utils/is';\n\nexport function useItemLabelWidth(schemaItemRef: Ref<FormSchema>, propsRef: Ref<FormProps>) {\n  return computed(() => {\n    const schemaItem = unref(schemaItemRef);\n    const { labelCol = {}, wrapperCol = {} } = schemaItem.itemProps || {};\n    const { labelWidth, disabledLabelWidth } = schemaItem;\n\n    const {\n      labelWidth: globalLabelWidth,\n      labelCol: globalLabelCol,\n      wrapperCol: globWrapperCol,\n      layout,\n    } = unref(propsRef);\n\n    // If labelWidth is set globally, all items setting\n    if ((!globalLabelWidth && !labelWidth && !globalLabelCol) || disabledLabelWidth) {\n      labelCol.style = {\n        textAlign: 'left',\n      };\n      return { labelCol, wrapperCol };\n    }\n    let width = labelWidth || globalLabelWidth;\n    const col = { ...globalLabelCol, ...labelCol };\n    const wrapCol = { ...globWrapperCol, ...wrapperCol };\n\n    if (width) {\n      width = isNumber(width) ? `${width}px` : width;\n    }\n\n    return {\n      labelCol: { style: { width }, ...col },\n      wrapperCol: {\n        style: { width: layout === 'vertical' ? '100%' : `calc(100% - ${width})` },\n        ...wrapCol,\n      },\n    };\n  });\n}\n","<script lang=\"tsx\">\n  import { type Recordable, type Nullable } from '@vben/types';\n  import type { PropType, Ref } from 'vue';\n  import { computed, defineComponent, toRefs, unref } from 'vue';\n  import type { FormActionType, FormProps, FormSchema } from '../types/form';\n  import type { ValidationRule } from 'ant-design-vue/lib/form/Form';\n  import type { TableActionType } from '/@/components/Table';\n  import { Col, Divider, Form } from 'ant-design-vue';\n  import { componentMap } from '../componentMap';\n  import { BasicHelp } from '/@/components/Basic';\n  import { isBoolean, isFunction, isNull } from '/@/utils/is';\n  import { getSlot } from '/@/utils/helper/tsxHelper';\n  import {\n    createPlaceholderMessage,\n    NO_AUTO_LINK_COMPONENTS,\n    setComponentRuleType,\n  } from '../helper';\n  import { cloneDeep, upperFirst } from 'lodash-es';\n  import { useItemLabelWidth } from '../hooks/useLabelWidth';\n  import { useI18n } from '/@/hooks/web/useI18n';\n\n  export default defineComponent({\n    name: 'BasicFormItem',\n    inheritAttrs: false,\n    props: {\n      schema: {\n        type: Object as PropType<FormSchema>,\n        default: () => ({}),\n      },\n      formProps: {\n        type: Object as PropType<FormProps>,\n        default: () => ({}),\n      },\n      allDefaultValues: {\n        type: Object as PropType<Recordable<any>>,\n        default: () => ({}),\n      },\n      formModel: {\n        type: Object as PropType<Recordable<any>>,\n        default: () => ({}),\n      },\n      setFormModel: {\n        type: Function as PropType<(key: string, value: any, schema: FormSchema) => void>,\n        default: null,\n      },\n      tableAction: {\n        type: Object as PropType<TableActionType>,\n      },\n      formActionType: {\n        type: Object as PropType<FormActionType>,\n      },\n      isAdvanced: {\n        type: Boolean,\n      },\n    },\n    setup(props, { slots }) {\n      const { t } = useI18n();\n\n      const { schema, formProps } = toRefs(props) as {\n        schema: Ref<FormSchema>;\n        formProps: Ref<FormProps>;\n      };\n\n      const itemLabelWidthProp = useItemLabelWidth(schema, formProps);\n\n      const getValues = computed(() => {\n        const { allDefaultValues, formModel, schema } = props;\n        const { mergeDynamicData } = props.formProps;\n        return {\n          field: schema.field,\n          model: formModel,\n          values: {\n            ...mergeDynamicData,\n            ...allDefaultValues,\n            ...formModel,\n          } as Recordable<any>,\n          schema: schema,\n        };\n      });\n\n      const getComponentsProps = computed(() => {\n        const { schema, tableAction, formModel, formActionType } = props;\n        let { componentProps = {} } = schema;\n        if (isFunction(componentProps)) {\n          componentProps = componentProps({ schema, tableAction, formModel, formActionType }) ?? {};\n        }\n        if (schema.component === 'Divider') {\n          componentProps = Object.assign(\n            { type: 'horizontal' },\n            {\n              orientation: 'left',\n              plain: true,\n            },\n            componentProps,\n          );\n        }\n        return componentProps as Recordable<any>;\n      });\n\n      const getDisable = computed(() => {\n        const { disabled: globDisabled } = props.formProps;\n        const { dynamicDisabled } = props.schema;\n        const { disabled: itemDisabled = false } = unref(getComponentsProps);\n        let disabled = !!globDisabled || itemDisabled;\n        if (isBoolean(dynamicDisabled)) {\n          disabled = dynamicDisabled;\n        }\n        if (isFunction(dynamicDisabled)) {\n          disabled = dynamicDisabled(unref(getValues));\n        }\n        return disabled;\n      });\n\n      function getShow(): { isShow: boolean; isIfShow: boolean } {\n        const { show, ifShow } = props.schema;\n        const { showAdvancedButton } = props.formProps;\n        const itemIsAdvanced = showAdvancedButton\n          ? isBoolean(props.isAdvanced)\n            ? props.isAdvanced\n            : true\n          : true;\n\n        let isShow = true;\n        let isIfShow = true;\n\n        if (isBoolean(show)) {\n          isShow = show;\n        }\n        if (isBoolean(ifShow)) {\n          isIfShow = ifShow;\n        }\n        if (isFunction(show)) {\n          isShow = show(unref(getValues));\n        }\n        if (isFunction(ifShow)) {\n          isIfShow = ifShow(unref(getValues));\n        }\n        isShow = isShow && itemIsAdvanced;\n        return { isShow, isIfShow };\n      }\n\n      function handleRules(): ValidationRule[] {\n        const {\n          rules: defRules = [],\n          component,\n          rulesMessageJoinLabel,\n          label,\n          dynamicRules,\n          required,\n        } = props.schema;\n\n        if (isFunction(dynamicRules)) {\n          return dynamicRules(unref(getValues)) as ValidationRule[];\n        }\n\n        let rules: ValidationRule[] = cloneDeep(defRules) as ValidationRule[];\n        const { rulesMessageJoinLabel: globalRulesMessageJoinLabel } = props.formProps;\n\n        const joinLabel = Reflect.has(props.schema, 'rulesMessageJoinLabel')\n          ? rulesMessageJoinLabel\n          : globalRulesMessageJoinLabel;\n        const defaultMsg = createPlaceholderMessage(component) + `${joinLabel ? label : ''}`;\n\n        function validator(rule: any, value: any) {\n          const msg = rule.message || defaultMsg;\n          if (value === undefined || isNull(value)) {\n            // 空值\n            return Promise.reject(msg);\n          } else if (Array.isArray(value) && value.length === 0) {\n            // 数组类型\n            return Promise.reject(msg);\n          } else if (typeof value === 'string' && value.trim() === '') {\n            // 空字符串\n            return Promise.reject(msg);\n          } else if (\n            typeof value === 'object' &&\n            Reflect.has(value, 'checked') &&\n            Reflect.has(value, 'halfChecked') &&\n            Array.isArray(value.checked) &&\n            Array.isArray(value.halfChecked) &&\n            value.checked.length === 0 &&\n            value.halfChecked.length === 0\n          ) {\n            // 非关联选择的tree组件\n            return Promise.reject(msg);\n          }\n          return Promise.resolve();\n        }\n\n        const getRequired = isFunction(required) ? required(unref(getValues)) : required;\n\n        /*\n         * 1、若设置了required属性，又没有其他的rules，就创建一个验证规则；\n         * 2、若设置了required属性，又存在其他的rules，则只rules中不存在required属性时，才添加验证required的规则\n         *     也就是说rules中的required，优先级大于required\n         */\n        if (getRequired) {\n          if (!rules || rules.length === 0) {\n            rules = [{ required: getRequired, validator }];\n          } else {\n            const requiredIndex: number = rules.findIndex((rule) => Reflect.has(rule, 'required'));\n\n            if (requiredIndex === -1) {\n              rules.push({ required: getRequired, validator });\n            }\n          }\n        }\n\n        const requiredRuleIndex: number = rules.findIndex(\n          (rule) => Reflect.has(rule, 'required') && !Reflect.has(rule, 'validator'),\n        );\n\n        if (requiredRuleIndex !== -1) {\n          const rule = rules[requiredRuleIndex];\n          const { isShow } = getShow();\n          if (!isShow) {\n            rule.required = false;\n          }\n          if (component) {\n            if (!Reflect.has(rule, 'type')) {\n              rule.type = component === 'InputNumber' ? 'number' : 'string';\n            }\n\n            rule.message = rule.message || defaultMsg;\n\n            if (component.includes('Input') || component.includes('Textarea')) {\n              rule.whitespace = true;\n            }\n            const valueFormat = unref(getComponentsProps)?.valueFormat;\n            setComponentRuleType(rule, component, valueFormat);\n          }\n        }\n\n        // Maximum input length rule check\n        const characterInx = rules.findIndex((val) => val.max);\n        if (characterInx !== -1 && !rules[characterInx].validator) {\n          rules[characterInx].message =\n            rules[characterInx].message ||\n            t('component.form.maxTip', [rules[characterInx].max] as Recordable<any>);\n        }\n        return rules;\n      }\n\n      function renderComponent() {\n        const {\n          renderComponentContent,\n          component,\n          field,\n          changeEvent = 'change',\n          valueField,\n        } = props.schema;\n\n        const isCheck = component && ['Switch', 'Checkbox'].includes(component);\n\n        const eventKey = `on${upperFirst(changeEvent)}`;\n\n        const on = {\n          [eventKey]: (...args: Nullable<Recordable<any>>[]) => {\n            const [e] = args;\n            if (propsData[eventKey]) {\n              propsData[eventKey](...args);\n            }\n            const target = e ? e.target : null;\n            const value = target ? (isCheck ? target.checked : target.value) : e;\n            props.setFormModel(field, value, props.schema);\n          },\n        };\n        const Comp = componentMap.get(component) as ReturnType<typeof defineComponent>;\n\n        const { autoSetPlaceHolder, size } = props.formProps;\n        const propsData: Recordable<any> = {\n          allowClear: true,\n          getPopupContainer: (trigger: Element) => trigger.parentNode,\n          size,\n          ...unref(getComponentsProps),\n          disabled: unref(getDisable),\n        };\n\n        const isCreatePlaceholder = !propsData.disabled && autoSetPlaceHolder;\n        // RangePicker place is an array\n        if (isCreatePlaceholder && component !== 'RangePicker' && component) {\n          propsData.placeholder =\n            unref(getComponentsProps)?.placeholder || createPlaceholderMessage(component);\n        }\n        propsData.codeField = field;\n        propsData.formValues = unref(getValues);\n\n        const bindValue: Recordable<any> = {\n          [valueField || (isCheck ? 'checked' : 'value')]: props.formModel[field],\n        };\n\n        const compAttr: Recordable<any> = {\n          ...propsData,\n          ...on,\n          ...bindValue,\n        };\n\n        if (!renderComponentContent) {\n          return <Comp {...compAttr} />;\n        }\n        const compSlot = isFunction(renderComponentContent)\n          ? { ...renderComponentContent(unref(getValues), { disabled: unref(getDisable) }) }\n          : {\n              default: () => renderComponentContent,\n            };\n        return <Comp {...compAttr}>{compSlot}</Comp>;\n      }\n\n      function renderLabelHelpMessage() {\n        const { label, helpMessage, helpComponentProps, subLabel } = props.schema;\n        const renderLabel = subLabel ? (\n          <span>\n            {label} <span class=\"text-secondary\">{subLabel}</span>\n          </span>\n        ) : (\n          label\n        );\n        const getHelpMessage = isFunction(helpMessage)\n          ? helpMessage(unref(getValues))\n          : helpMessage;\n        if (!getHelpMessage || (Array.isArray(getHelpMessage) && getHelpMessage.length === 0)) {\n          return renderLabel;\n        }\n        return (\n          <span>\n            {renderLabel}\n            <BasicHelp placement=\"top\" class=\"mx-1\" text={getHelpMessage} {...helpComponentProps} />\n          </span>\n        );\n      }\n\n      function renderItem() {\n        const { itemProps, slot, render, field, suffix, component } = props.schema;\n        const { labelCol, wrapperCol } = unref(itemLabelWidthProp);\n        const { colon } = props.formProps;\n        const opts = { disabled: unref(getDisable) };\n        if (component === 'Divider') {\n          return (\n            <Col span={24}>\n              <Divider {...unref(getComponentsProps)}>{renderLabelHelpMessage()}</Divider>\n            </Col>\n          );\n        } else {\n          const getContent = () => {\n            return slot\n              ? getSlot(slots, slot, unref(getValues), opts)\n              : render\n              ? render(unref(getValues), opts)\n              : renderComponent();\n          };\n\n          const showSuffix = !!suffix;\n          const getSuffix = isFunction(suffix) ? suffix(unref(getValues)) : suffix;\n\n          // TODO 自定义组件验证会出现问题，因此这里框架默认将自定义组件设置手动触发验证，如果其他组件还有此问题请手动设置autoLink=false\n          if (NO_AUTO_LINK_COMPONENTS.includes(component)) {\n            props.schema &&\n              (props.schema.itemProps! = {\n                autoLink: false,\n                ...props.schema.itemProps,\n              });\n          }\n\n          return (\n            <Form.Item\n              name={field}\n              colon={colon}\n              class={{ 'suffix-item': showSuffix }}\n              {...(itemProps as Recordable<any>)}\n              label={renderLabelHelpMessage()}\n              rules={handleRules()}\n              labelCol={labelCol}\n              wrapperCol={wrapperCol}\n            >\n              <div style=\"display:flex\">\n                <div style=\"flex:1;\">{getContent()}</div>\n                {showSuffix && <span class=\"suffix\">{getSuffix}</span>}\n              </div>\n            </Form.Item>\n          );\n        }\n      }\n\n      return () => {\n        const { colProps = {}, colSlot, renderColContent, component } = props.schema;\n        if (!componentMap.has(component)) {\n          return null;\n        }\n\n        const { baseColProps = {} } = props.formProps;\n        const realColProps = { ...baseColProps, ...colProps };\n        const { isIfShow, isShow } = getShow();\n        const values = unref(getValues);\n        const opts = { disabled: unref(getDisable) };\n\n        const getContent = () => {\n          return colSlot\n            ? getSlot(slots, colSlot, values, opts)\n            : renderColContent\n            ? renderColContent(values, opts)\n            : renderItem();\n        };\n\n        return (\n          isIfShow && (\n            <Col {...realColProps} v-show={isShow}>\n              {getContent()}\n            </Col>\n          )\n        );\n      };\n    },\n  });\n</script>\n","<template>\n  <a-col v-bind=\"actionColOpt\" v-if=\"showActionButtonGroup\">\n    <div style=\"width: 100%\" :style=\"{ textAlign: actionColOpt.style.textAlign }\">\n      <FormItem>\n        <slot name=\"resetBefore\"></slot>\n        <Button\n          type=\"default\"\n          class=\"mr-2\"\n          v-bind=\"getResetBtnOptions\"\n          @click=\"resetAction\"\n          v-if=\"showResetButton\"\n        >\n          {{ getResetBtnOptions.text }}\n        </Button>\n        <slot name=\"submitBefore\"></slot>\n\n        <Button\n          type=\"primary\"\n          class=\"mr-2\"\n          v-bind=\"getSubmitBtnOptions\"\n          @click=\"submitAction\"\n          v-if=\"showSubmitButton\"\n        >\n          {{ getSubmitBtnOptions.text }}\n        </Button>\n\n        <slot name=\"advanceBefore\"></slot>\n        <Button type=\"link\" size=\"small\" @click=\"toggleAdvanced\" v-show=\"showExpandText\">\n          {{ isAdvanced ? t('component.form.putAway') : t('component.form.unfold') }}\n          <BasicArrow class=\"ml-1\" :expand=\"!isAdvanced\" up />\n        </Button>\n        <slot name=\"advanceAfter\"></slot>\n      </FormItem>\n    </div>\n  </a-col>\n</template>\n<script lang=\"ts\">\n  import type { ColEx } from '../types/index';\n  //import type { ButtonProps } from 'ant-design-vue/es/button/buttonTypes';\n  import { defineComponent, computed, PropType } from 'vue';\n  import { Form, Col } from 'ant-design-vue';\n  import { Button, ButtonProps } from '/@/components/Button';\n  import { BasicArrow } from '/@/components/Basic';\n  import { useFormContext } from '../hooks/useFormContext';\n  import type { FormSchema } from '../types/form';\n  import { useI18n } from '/@/hooks/web/useI18n';\n  import { propTypes } from '/@/utils/propTypes';\n\n  type ButtonOptions = Partial<ButtonProps> & { text: string };\n\n  export default defineComponent({\n    name: 'BasicFormAction',\n    components: {\n      FormItem: Form.Item,\n      Button,\n      BasicArrow,\n      [Col.name]: Col,\n    },\n    props: {\n      showActionButtonGroup: propTypes.bool.def(true),\n      showResetButton: propTypes.bool.def(true),\n      showSubmitButton: propTypes.bool.def(true),\n      showAdvancedButton: propTypes.bool.def(true),\n      resetButtonOptions: {\n        type: Object as PropType<ButtonOptions>,\n        default: () => ({}),\n      },\n      submitButtonOptions: {\n        type: Object as PropType<ButtonOptions>,\n        default: () => ({}),\n      },\n      actionColOptions: {\n        type: Object as PropType<Partial<ColEx>>,\n        default: () => ({}),\n      },\n      actionSpan: propTypes.number.def(6),\n      isAdvanced: propTypes.bool,\n      noHideBtnFlag: propTypes.bool.def(false),\n      hideAdvanceBtn: propTypes.bool,\n      // 表单配置规则\n      schemas: {\n        type: Array as PropType<FormSchema[]>,\n        default: () => [],\n      },\n    },\n    emits: ['toggle-advanced'],\n    setup(props, { emit }) {\n      const { t } = useI18n();\n\n      const actionColOpt = computed(() => {\n        const { showAdvancedButton, actionSpan: span, actionColOptions } = props;\n        const actionSpan = 24 - span;\n        const advancedSpanObj = showAdvancedButton\n          ? { span: actionSpan < 6 ? 24 : actionSpan }\n          : {};\n        const actionColOpt: Partial<ColEx> = {\n          style: { textAlign: 'right' },\n          span: showAdvancedButton ? 6 : 4,\n          ...advancedSpanObj,\n          ...actionColOptions,\n        };\n        return actionColOpt;\n      });\n\n      const getResetBtnOptions = computed((): ButtonOptions => {\n        return Object.assign(\n          {\n            text: t('common.resetText'),\n          },\n          props.resetButtonOptions,\n        );\n      });\n\n      const getSubmitBtnOptions = computed(() => {\n        return Object.assign(\n          {\n            text: t('common.queryText'),\n          },\n          props.submitButtonOptions,\n        );\n      });\n\n      // 计算schemas数组中每个查询字段\n      const calcColPropsSpan = (acc, curr) => {\n        if (curr?.colProps?.span) {\n          return acc + curr?.colProps?.span;\n        } else {\n          return acc;\n        }\n      };\n\n      // 计算是否显示展开折叠Text按钮\n      const showExpandText = computed(() => {\n        const { showAdvancedButton, hideAdvanceBtn, noHideBtnFlag, schemas } = props;\n        const totalSpan = schemas.reduce(calcColPropsSpan, 0);\n        let result = null;\n        if (noHideBtnFlag || totalSpan <= 20) {\n          result = showAdvancedButton && !hideAdvanceBtn;\n        } else {\n          result = showAdvancedButton;\n        }\n        return result;\n      });\n\n      function toggleAdvanced() {\n        emit('toggle-advanced');\n      }\n\n      return {\n        t,\n        actionColOpt,\n        getResetBtnOptions,\n        getSubmitBtnOptions,\n        toggleAdvanced,\n        showExpandText,\n        ...useFormContext(),\n      };\n    },\n  });\n</script>\n","import { isArray, isFunction, isObject, isString, isNullOrUnDef } from '/@/utils/is';\nimport { dateUtil } from '/@/utils/dateUtil';\nimport { unref } from 'vue';\nimport type { Ref, ComputedRef } from 'vue';\nimport type { FormProps, FormSchema } from '../types/form';\nimport { cloneDeep, set } from 'lodash-es';\n\ninterface UseFormValuesContext {\n  defaultValueRef: Ref<any>;\n  getSchema: ComputedRef<FormSchema[]>;\n  getProps: ComputedRef<FormProps>;\n  formModel: Recordable;\n}\n\n/**\n * @desription deconstruct array-link key. This method will mutate the target.\n */\nfunction tryDeconstructArray(key: string, value: any, target: Recordable) {\n  const pattern = /^\\[(.+)\\]$/;\n  if (pattern.test(key)) {\n    const match = key.match(pattern);\n    if (match && match[1]) {\n      const keys = match[1].split(',');\n      value = Array.isArray(value) ? value : [value];\n      keys.forEach((k, index) => {\n        set(target, k.trim(), value[index]);\n      });\n      return true;\n    }\n  }\n}\n\n/**\n * @desription deconstruct object-link key. This method will mutate the target.\n */\nfunction tryDeconstructObject(key: string, value: any, target: Recordable) {\n  const pattern = /^\\{(.+)\\}$/;\n  if (pattern.test(key)) {\n    const match = key.match(pattern);\n    if (match && match[1]) {\n      const keys = match[1].split(',');\n      value = isObject(value) ? value : {};\n      keys.forEach((k) => {\n        set(target, k.trim(), value[k.trim()]);\n      });\n      return true;\n    }\n  }\n}\n\nexport function useFormValues({\n  defaultValueRef,\n  getSchema,\n  formModel,\n  getProps,\n}: UseFormValuesContext) {\n  // Processing form values\n  function handleFormValues(values: Recordable) {\n    if (!isObject(values)) {\n      return {};\n    }\n    const res: Recordable = {};\n    for (const item of Object.entries(values)) {\n      let [, value] = item;\n      const [key] = item;\n      if (!key || (isArray(value) && value.length === 0) || isFunction(value)) {\n        continue;\n      }\n      const transformDateFunc = unref(getProps).transformDateFunc;\n      if (isObject(value)) {\n        value = transformDateFunc?.(value);\n      }\n\n      if (isArray(value) && value[0]?.format && value[1]?.format) {\n        value = value.map((item) => transformDateFunc?.(item));\n      }\n      // Remove spaces\n      if (isString(value)) {\n        // remove params from URL\n        if (value === '') {\n          value = undefined;\n        } else {\n          value = value.trim();\n        }\n      }\n      if (!tryDeconstructArray(key, value, res) && !tryDeconstructObject(key, value, res)) {\n        // 没有解构成功的，按原样赋值\n        set(res, key, value);\n      }\n    }\n    return handleRangeTimeValue(res);\n  }\n\n  /**\n   * @description: Processing time interval parameters\n   */\n  function handleRangeTimeValue(values: Recordable) {\n    const fieldMapToTime = unref(getProps).fieldMapToTime;\n\n    if (!fieldMapToTime || !Array.isArray(fieldMapToTime)) {\n      return values;\n    }\n\n    for (const [field, [startTimeKey, endTimeKey], format = 'YYYY-MM-DD'] of fieldMapToTime) {\n      if (!field || !startTimeKey || !endTimeKey) {\n        continue;\n      }\n      // If the value to be converted is empty, remove the field\n      if (!values[field]) {\n        Reflect.deleteProperty(values, field);\n        continue;\n      }\n\n      const [startTime, endTime]: string[] = values[field];\n\n      const [startTimeFormat, endTimeFormat] = Array.isArray(format) ? format : [format, format];\n\n      values[startTimeKey] = dateUtil(startTime).format(startTimeFormat);\n      values[endTimeKey] = dateUtil(endTime).format(endTimeFormat);\n      Reflect.deleteProperty(values, field);\n    }\n\n    return values;\n  }\n\n  function initDefault() {\n    const schemas = unref(getSchema);\n    const obj: Recordable = {};\n    schemas.forEach((item) => {\n      const { defaultValue, defaultValueObj } = item;\n      const fieldKeys = Object.keys(defaultValueObj || {});\n      if (fieldKeys.length) {\n        fieldKeys.map((field) => {\n          obj[field] = defaultValueObj![field];\n          if (formModel[field] === undefined) {\n            formModel[field] = defaultValueObj![field];\n          }\n        });\n      }\n      if (!isNullOrUnDef(defaultValue)) {\n        obj[item.field] = defaultValue;\n\n        if (formModel[item.field] === undefined) {\n          formModel[item.field] = defaultValue;\n        }\n      }\n    });\n    defaultValueRef.value = cloneDeep(obj);\n  }\n\n  return { handleFormValues, initDefault };\n}\n","import type { ColEx } from '../types';\nimport type { AdvanceState } from '../types/hooks';\nimport { ComputedRef, getCurrentInstance, Ref, shallowReactive, computed, unref, watch } from 'vue';\nimport type { FormProps, FormSchema } from '../types/form';\nimport { isBoolean, isFunction, isNumber, isObject } from '/@/utils/is';\nimport { useBreakpoint } from '/@/hooks/event/useBreakpoint';\nimport { useDebounceFn } from '@vueuse/core';\n\nconst BASIC_COL_LEN = 24;\n\ninterface UseAdvancedContext {\n  advanceState: AdvanceState;\n  emit: EmitType;\n  getProps: ComputedRef<FormProps>;\n  getSchema: ComputedRef<FormSchema[]>;\n  formModel: Recordable;\n  defaultValueRef: Ref<Recordable>;\n}\n\nexport default function ({\n  advanceState,\n  emit,\n  getProps,\n  getSchema,\n  formModel,\n  defaultValueRef,\n}: UseAdvancedContext) {\n  const vm = getCurrentInstance();\n\n  const { realWidthRef, screenEnum, screenRef } = useBreakpoint();\n\n  const getEmptySpan = computed((): number => {\n    if (!advanceState.isAdvanced) {\n      return 0;\n    }\n    // For some special cases, you need to manually specify additional blank lines\n    const emptySpan = unref(getProps).emptySpan || 0;\n\n    if (isNumber(emptySpan)) {\n      return emptySpan;\n    }\n    if (isObject(emptySpan)) {\n      const { span = 0 } = emptySpan;\n      const screen = unref(screenRef) as string;\n\n      const screenSpan = (emptySpan as any)[screen.toLowerCase()];\n      return screenSpan || span || 0;\n    }\n    return 0;\n  });\n\n  const debounceUpdateAdvanced = useDebounceFn(updateAdvanced, 30);\n\n  watch(\n    [() => unref(getSchema), () => advanceState.isAdvanced, () => unref(realWidthRef)],\n    () => {\n      const { showAdvancedButton } = unref(getProps);\n      if (showAdvancedButton) {\n        debounceUpdateAdvanced();\n      }\n    },\n    { immediate: true },\n  );\n\n  function getAdvanced(itemCol: Partial<ColEx>, itemColSum = 0, isLastAction = false) {\n    const width = unref(realWidthRef);\n\n    const mdWidth =\n      parseInt(itemCol.md as string) ||\n      parseInt(itemCol.xs as string) ||\n      parseInt(itemCol.sm as string) ||\n      (itemCol.span as number) ||\n      BASIC_COL_LEN;\n\n    const lgWidth = parseInt(itemCol.lg as string) || mdWidth;\n    const xlWidth = parseInt(itemCol.xl as string) || lgWidth;\n    const xxlWidth = parseInt(itemCol.xxl as string) || xlWidth;\n    if (width <= screenEnum.LG) {\n      itemColSum += mdWidth;\n    } else if (width < screenEnum.XL) {\n      itemColSum += lgWidth;\n    } else if (width < screenEnum.XXL) {\n      itemColSum += xlWidth;\n    } else {\n      itemColSum += xxlWidth;\n    }\n\n    if (isLastAction) {\n      advanceState.hideAdvanceBtn = false;\n      if (itemColSum <= BASIC_COL_LEN * 2) {\n        // When less than or equal to 2 lines, the collapse and expand buttons are not displayed\n        advanceState.hideAdvanceBtn = true;\n        advanceState.isAdvanced = true;\n      } else if (\n        itemColSum > BASIC_COL_LEN * 2 &&\n        itemColSum <= BASIC_COL_LEN * (unref(getProps).autoAdvancedLine || 3)\n      ) {\n        advanceState.hideAdvanceBtn = false;\n\n        // More than 3 lines collapsed by default\n      } else if (!advanceState.isLoad) {\n        advanceState.isLoad = true;\n        advanceState.isAdvanced = !advanceState.isAdvanced;\n      }\n      return { isAdvanced: advanceState.isAdvanced, itemColSum };\n    }\n    if (itemColSum > BASIC_COL_LEN * (unref(getProps).alwaysShowLines || 1)) {\n      return { isAdvanced: advanceState.isAdvanced, itemColSum };\n    } else {\n      // The first line is always displayed\n      return { isAdvanced: true, itemColSum };\n    }\n  }\n\n  const fieldsIsAdvancedMap = shallowReactive({});\n\n  function updateAdvanced() {\n    let itemColSum = 0;\n    let realItemColSum = 0;\n    const { baseColProps = {} } = unref(getProps);\n\n    for (const schema of unref(getSchema)) {\n      const { show, colProps } = schema;\n      let isShow = true;\n\n      if (isBoolean(show)) {\n        isShow = show;\n      }\n\n      if (isFunction(show)) {\n        isShow = show({\n          schema: schema,\n          model: formModel,\n          field: schema.field,\n          values: {\n            ...unref(defaultValueRef),\n            ...formModel,\n          },\n        });\n      }\n\n      if (isShow && (colProps || baseColProps)) {\n        const { itemColSum: sum, isAdvanced } = getAdvanced(\n          { ...baseColProps, ...colProps },\n          itemColSum,\n        );\n\n        itemColSum = sum || 0;\n        if (isAdvanced) {\n          realItemColSum = itemColSum;\n        }\n        fieldsIsAdvancedMap[schema.field] = isAdvanced;\n      }\n    }\n\n    // 确保页面发送更新\n    vm?.proxy?.$forceUpdate();\n\n    advanceState.actionSpan = (realItemColSum % BASIC_COL_LEN) + unref(getEmptySpan);\n\n    getAdvanced(unref(getProps).actionColOptions || { span: BASIC_COL_LEN }, itemColSum, true);\n\n    emit('advanced-change');\n  }\n\n  function handleToggleAdvanced() {\n    advanceState.isAdvanced = !advanceState.isAdvanced;\n    emit('toggle', advanceState.isAdvanced);\n  }\n\n  return { handleToggleAdvanced, fieldsIsAdvancedMap };\n}\n","import type { ComputedRef, Ref } from 'vue';\nimport type { FormProps, FormSchema, FormActionType } from '../types/form';\nimport type { NamePath } from 'ant-design-vue/lib/form/interface';\nimport { unref, toRaw, nextTick } from 'vue';\nimport {\n  isArray,\n  isFunction,\n  isObject,\n  isString,\n  isDef,\n  isNullOrUnDef,\n  isEmpty,\n} from '/@/utils/is';\nimport { deepMerge } from '/@/utils';\nimport { dateItemType, handleInputNumberValue, defaultValueComponents } from '../helper';\nimport { dateUtil } from '/@/utils/dateUtil';\nimport { cloneDeep, set, uniqBy, get } from 'lodash-es';\nimport { error } from '/@/utils/log';\n\ninterface UseFormActionContext {\n  emit: EmitType;\n  getProps: ComputedRef<FormProps>;\n  getSchema: ComputedRef<FormSchema[]>;\n  formModel: Recordable;\n  defaultValueRef: Ref<Recordable>;\n  formElRef: Ref<FormActionType>;\n  schemaRef: Ref<FormSchema[]>;\n  handleFormValues: Fn;\n}\n\nfunction tryConstructArray(field: string, values: Recordable = {}): any[] | undefined {\n  const pattern = /^\\[(.+)\\]$/;\n  if (pattern.test(field)) {\n    const match = field.match(pattern);\n    if (match && match[1]) {\n      const keys = match[1].split(',');\n      if (!keys.length) {\n        return undefined;\n      }\n\n      const result = [];\n      keys.forEach((k, index) => {\n        set(result, index, values[k.trim()]);\n      });\n\n      return result.filter(Boolean).length ? result : undefined;\n    }\n  }\n}\n\nfunction tryConstructObject(field: string, values: Recordable = {}): Recordable | undefined {\n  const pattern = /^\\{(.+)\\}$/;\n  if (pattern.test(field)) {\n    const match = field.match(pattern);\n    if (match && match[1]) {\n      const keys = match[1].split(',');\n      if (!keys.length) {\n        return;\n      }\n\n      const result = {};\n      keys.forEach((k) => {\n        set(result, k.trim(), values[k.trim()]);\n      });\n\n      return Object.values(result).filter(Boolean).length ? result : undefined;\n    }\n  }\n}\n\nexport function useFormEvents({\n  emit,\n  getProps,\n  formModel,\n  getSchema,\n  defaultValueRef,\n  formElRef,\n  schemaRef,\n  handleFormValues,\n}: UseFormActionContext) {\n  async function resetFields(): Promise<void> {\n    const { resetFunc, submitOnReset } = unref(getProps);\n    resetFunc && isFunction(resetFunc) && (await resetFunc());\n\n    const formEl = unref(formElRef);\n    if (!formEl) return;\n\n    Object.keys(formModel).forEach((key) => {\n      const schema = unref(getSchema).find((item) => item.field === key);\n      const defaultValueObj = schema?.defaultValueObj;\n      const fieldKeys = Object.keys(defaultValueObj || {});\n      if (fieldKeys.length) {\n        fieldKeys.map((field) => {\n          formModel[field] = defaultValueObj![field];\n        });\n      }\n      formModel[key] = getDefaultValue(schema, defaultValueRef, key);\n    });\n    nextTick(() => clearValidate());\n\n    emit('reset', toRaw(formModel));\n    submitOnReset && handleSubmit();\n  }\n  // 获取表单fields\n  const getAllFields = () =>\n    unref(getSchema)\n      .map((item) => [...(item.fields || []), item.field])\n      .flat(1)\n      .filter(Boolean);\n  /**\n   * @description: Set form value\n   */\n  async function setFieldsValue(values: Recordable): Promise<void> {\n    const fields = getAllFields();\n\n    // key 支持 a.b.c 的嵌套写法\n    const delimiter = '.';\n    const nestKeyArray = fields.filter((item) => String(item).indexOf(delimiter) >= 0);\n\n    const validKeys: string[] = [];\n    fields.forEach((key) => {\n      const schema = unref(getSchema).find((item) => item.field === key);\n      let value = get(values, key);\n      const hasKey = Reflect.has(values, key);\n\n      value = handleInputNumberValue(schema?.component, value);\n      const { componentProps } = schema || {};\n      let _props = componentProps as any;\n      if (typeof componentProps === 'function') {\n        _props = _props({ formModel: unref(formModel) });\n      }\n\n      const constructValue = tryConstructArray(key, values) || tryConstructObject(key, values);\n\n      // 0| '' is allow\n      if (hasKey || !!constructValue) {\n        const fieldValue = constructValue || value;\n        // time type\n        if (itemIsDateType(key)) {\n          if (Array.isArray(fieldValue)) {\n            const arr: any[] = [];\n            for (const ele of fieldValue) {\n              arr.push(ele ? dateUtil(ele) : null);\n            }\n            unref(formModel)[key] = arr;\n          } else {\n            unref(formModel)[key] = fieldValue\n              ? _props?.valueFormat\n                ? fieldValue\n                : dateUtil(fieldValue)\n              : null;\n          }\n        } else {\n          unref(formModel)[key] = fieldValue;\n        }\n        if (_props?.onChange) {\n          _props?.onChange(fieldValue);\n        }\n        validKeys.push(key);\n      } else {\n        nestKeyArray.forEach((nestKey: string) => {\n          try {\n            const value = nestKey.split('.').reduce((out, item) => out[item], values);\n            if (isDef(value)) {\n              unref(formModel)[nestKey] = unref(value);\n              validKeys.push(nestKey);\n            }\n          } catch (e) {\n            // key not exist\n            if (isDef(defaultValueRef.value[nestKey])) {\n              unref(formModel)[nestKey] = cloneDeep(unref(defaultValueRef.value[nestKey]));\n            }\n          }\n        });\n      }\n    });\n    validateFields(validKeys).catch((_) => {});\n  }\n\n  /**\n   * @description: Delete based on field name\n   */\n  async function removeSchemaByField(fields: string | string[]): Promise<void> {\n    const schemaList: FormSchema[] = cloneDeep(unref(getSchema));\n    if (!fields) {\n      return;\n    }\n\n    let fieldList: string[] = isString(fields) ? [fields] : fields;\n    if (isString(fields)) {\n      fieldList = [fields];\n    }\n    for (const field of fieldList) {\n      _removeSchemaByFeild(field, schemaList);\n    }\n    schemaRef.value = schemaList;\n  }\n\n  /**\n   * @description: Delete based on field name\n   */\n  function _removeSchemaByFeild(field: string, schemaList: FormSchema[]): void {\n    if (isString(field)) {\n      const index = schemaList.findIndex((schema) => schema.field === field);\n      if (index !== -1) {\n        delete formModel[field];\n        schemaList.splice(index, 1);\n      }\n    }\n  }\n\n  /**\n   * @description: Insert after a certain field, if not insert the last\n   */\n  async function appendSchemaByField(\n    schema: FormSchema | FormSchema[],\n    prefixField?: string,\n    first = false,\n  ) {\n    const schemaList: FormSchema[] = cloneDeep(unref(getSchema));\n    const addSchemaIds: string[] = Array.isArray(schema)\n      ? schema.map((item) => item.field)\n      : [schema.field];\n    if (schemaList.find((item) => addSchemaIds.includes(item.field))) {\n      error('There are schemas that have already been added');\n      return;\n    }\n    const index = schemaList.findIndex((schema) => schema.field === prefixField);\n    const _schemaList = isObject(schema) ? [schema as FormSchema] : (schema as FormSchema[]);\n    if (!prefixField || index === -1 || first) {\n      first ? schemaList.unshift(..._schemaList) : schemaList.push(..._schemaList);\n      schemaRef.value = schemaList;\n      _setDefaultValue(schema);\n      return;\n    }\n    if (index !== -1) {\n      schemaList.splice(index + 1, 0, ..._schemaList);\n    }\n    _setDefaultValue(schema);\n\n    schemaRef.value = schemaList;\n  }\n\n  async function resetSchema(data: Partial<FormSchema> | Partial<FormSchema>[]) {\n    let updateData: Partial<FormSchema>[] = [];\n    if (isObject(data)) {\n      updateData.push(data as FormSchema);\n    }\n    if (isArray(data)) {\n      updateData = [...data];\n    }\n\n    const hasField = updateData.every(\n      (item) => item.component === 'Divider' || (Reflect.has(item, 'field') && item.field),\n    );\n\n    if (!hasField) {\n      error(\n        'All children of the form Schema array that need to be updated must contain the `field` field',\n      );\n      return;\n    }\n    schemaRef.value = updateData as FormSchema[];\n  }\n\n  async function updateSchema(data: Partial<FormSchema> | Partial<FormSchema>[]) {\n    let updateData: Partial<FormSchema>[] = [];\n    if (isObject(data)) {\n      updateData.push(data as FormSchema);\n    }\n    if (isArray(data)) {\n      updateData = [...data];\n    }\n\n    const hasField = updateData.every(\n      (item) => item.component === 'Divider' || (Reflect.has(item, 'field') && item.field),\n    );\n\n    if (!hasField) {\n      error(\n        'All children of the form Schema array that need to be updated must contain the `field` field',\n      );\n      return;\n    }\n    const schema: FormSchema[] = [];\n    unref(getSchema).forEach((val) => {\n      let _val;\n      updateData.forEach((item) => {\n        if (val.field === item.field) {\n          _val = item;\n        }\n      });\n      if (_val !== undefined && val.field === _val.field) {\n        const newSchema = deepMerge(val, _val);\n        schema.push(newSchema as FormSchema);\n      } else {\n        schema.push(val);\n      }\n    });\n    _setDefaultValue(schema);\n\n    schemaRef.value = uniqBy(schema, 'field');\n  }\n\n  function _setDefaultValue(data: FormSchema | FormSchema[]) {\n    let schemas: FormSchema[] = [];\n    if (isObject(data)) {\n      schemas.push(data as FormSchema);\n    }\n    if (isArray(data)) {\n      schemas = [...data];\n    }\n\n    const obj: Recordable = {};\n    const currentFieldsValue = getFieldsValue();\n    schemas.forEach((item) => {\n      if (\n        item.component != 'Divider' &&\n        Reflect.has(item, 'field') &&\n        item.field &&\n        !isNullOrUnDef(item.defaultValue) &&\n        (!(item.field in currentFieldsValue) ||\n          isNullOrUnDef(currentFieldsValue[item.field]) ||\n          isEmpty(currentFieldsValue[item.field]))\n      ) {\n        obj[item.field] = item.defaultValue;\n      }\n    });\n    setFieldsValue(obj);\n  }\n\n  function getFieldsValue(): Recordable {\n    const formEl = unref(formElRef);\n    if (!formEl) return {};\n    return handleFormValues(toRaw(unref(formModel)));\n  }\n\n  /**\n   * @description: Is it time\n   */\n  function itemIsDateType(key: string) {\n    return unref(getSchema).some((item) => {\n      return item.field === key ? dateItemType.includes(item.component) : false;\n    });\n  }\n\n  async function validateFields(nameList?: NamePath[] | undefined) {\n    return unref(formElRef)?.validateFields(nameList);\n  }\n\n  async function validate(nameList?: NamePath[] | false | undefined) {\n    let _nameList: any;\n    if (nameList === undefined) {\n      _nameList = getAllFields();\n    } else {\n      _nameList = nameList === Array.isArray(nameList) ? nameList : undefined;\n    }\n    return await unref(formElRef)?.validate(_nameList);\n  }\n\n  async function clearValidate(name?: string | string[]) {\n    await unref(formElRef)?.clearValidate(name);\n  }\n\n  async function scrollToField(name: NamePath, options?: ScrollOptions | undefined) {\n    await unref(formElRef)?.scrollToField(name, options);\n  }\n\n  /**\n   * @description: Form submission\n   */\n  async function handleSubmit(e?: Event): Promise<void> {\n    e && e.preventDefault();\n    const { submitFunc } = unref(getProps);\n    if (submitFunc && isFunction(submitFunc)) {\n      await submitFunc();\n      return;\n    }\n    const formEl = unref(formElRef);\n    if (!formEl) return;\n    try {\n      const values = await validate();\n      const res = handleFormValues(values);\n      emit('submit', res);\n    } catch (error: any) {\n      if (error?.outOfDate === false && error?.errorFields) {\n        return;\n      }\n      throw new Error(error);\n    }\n  }\n\n  return {\n    handleSubmit,\n    clearValidate,\n    validate,\n    validateFields,\n    getFieldsValue,\n    updateSchema,\n    resetSchema,\n    appendSchemaByField,\n    removeSchemaByField,\n    resetFields,\n    setFieldsValue,\n    scrollToField,\n  };\n}\n\nfunction getDefaultValue(\n  schema: FormSchema | undefined,\n  defaultValueRef: UseFormActionContext['defaultValueRef'],\n  key: string,\n) {\n  let defaultValue = cloneDeep(defaultValueRef.value[key]);\n  const isInput = checkIsInput(schema);\n  if (isInput) {\n    return defaultValue || '';\n  }\n  if (!defaultValue && schema && checkIsRangeSlider(schema)) {\n    defaultValue = [0, 0];\n  }\n  return defaultValue;\n}\n\nfunction checkIsRangeSlider(schema: FormSchema) {\n  if (schema.component === 'Slider' && schema.componentProps && schema.componentProps.range) {\n    return true;\n  }\n}\n\nfunction checkIsInput(schema?: FormSchema) {\n  return schema?.component && defaultValueComponents.includes(schema.component);\n}\n","import type { ComputedRef, Ref } from 'vue';\nimport type { FormSchema, FormActionType, FormProps } from '../types/form';\n\nimport { unref, nextTick, watchEffect } from 'vue';\n\ninterface UseAutoFocusContext {\n  getSchema: ComputedRef<FormSchema[]>;\n  getProps: ComputedRef<FormProps>;\n  isInitedDefault: Ref<boolean>;\n  formElRef: Ref<FormActionType>;\n}\nexport async function useAutoFocus({\n  getSchema,\n  getProps,\n  formElRef,\n  isInitedDefault,\n}: UseAutoFocusContext) {\n  watchEffect(async () => {\n    if (unref(isInitedDefault) || !unref(getProps).autoFocusFirstItem) {\n      return;\n    }\n    await nextTick();\n    const schemas = unref(getSchema);\n    const formEl = unref(formElRef);\n    const el = (formEl as any)?.$el as HTMLElement;\n    if (!formEl || !el || !schemas || schemas.length === 0) {\n      return;\n    }\n\n    const firstItem = schemas[0];\n    // Only open when the first form item is input type\n    if (!firstItem.component.includes('Input')) {\n      return;\n    }\n\n    const inputEl = el.querySelector('.ant-row:first-child input') as Nullable<HTMLInputElement>;\n    if (!inputEl) return;\n    inputEl?.focus();\n  });\n}\n","<template>\n  <Form\n    v-bind=\"getBindValue\"\n    :class=\"getFormClass\"\n    ref=\"formElRef\"\n    :model=\"formModel\"\n    @keypress.enter=\"handleEnterPress\"\n  >\n    <Row v-bind=\"getRow\">\n      <slot name=\"formHeader\"></slot>\n      <template v-for=\"schema in getSchema\" :key=\"schema.field\">\n        <FormItem\n          :isAdvanced=\"fieldsIsAdvancedMap[schema.field]\"\n          :tableAction=\"tableAction\"\n          :formActionType=\"formActionType\"\n          :schema=\"schema\"\n          :formProps=\"getProps\"\n          :allDefaultValues=\"defaultValueRef\"\n          :formModel=\"formModel\"\n          :setFormModel=\"setFormModel\"\n        >\n          <template #[item]=\"data\" v-for=\"item in Object.keys($slots)\">\n            <slot :name=\"item\" v-bind=\"data || {}\"></slot>\n          </template>\n        </FormItem>\n      </template>\n\n      <FormAction v-bind=\"getFormActionBindProps\" @toggle-advanced=\"handleActionToggleAdvanced\">\n        <template\n          #[item]=\"data\"\n          v-for=\"item in ['resetBefore', 'submitBefore', 'advanceBefore', 'advanceAfter']\"\n        >\n          <slot :name=\"item\" v-bind=\"data || {}\"></slot>\n        </template>\n      </FormAction>\n      <slot name=\"formFooter\"></slot>\n    </Row>\n  </Form>\n</template>\n<script lang=\"ts\">\n  import type { FormActionType, FormProps, FormSchema } from './types/form';\n  import type { AdvanceState } from './types/hooks';\n  import type { Ref } from 'vue';\n\n  import { defineComponent, reactive, ref, computed, unref, onMounted, watch, nextTick } from 'vue';\n  import { Form, Row } from 'ant-design-vue';\n  import FormItem from './components/FormItem.vue';\n  import FormAction from './components/FormAction.vue';\n\n  import { dateItemType } from './helper';\n  import { dateUtil } from '/@/utils/dateUtil';\n\n  // import { cloneDeep } from 'lodash-es';\n  import { deepMerge } from '/@/utils';\n\n  import { useFormValues } from './hooks/useFormValues';\n  import useAdvanced from './hooks/useAdvanced';\n  import { useFormEvents } from './hooks/useFormEvents';\n  import { createFormContext } from './hooks/useFormContext';\n  import { useAutoFocus } from './hooks/useAutoFocus';\n  import { useModalContext } from '/@/components/Modal';\n  import { useDebounceFn } from '@vueuse/core';\n\n  import { basicProps } from './props';\n  import { useDesign } from '/@/hooks/web/useDesign';\n  import { cloneDeep } from 'lodash-es';\n\n  export default defineComponent({\n    name: 'BasicForm',\n    components: { FormItem, Form, Row, FormAction },\n    props: basicProps,\n    emits: ['advanced-change', 'reset', 'submit', 'register', 'field-value-change'],\n    setup(props, { emit, attrs }) {\n      const formModel = reactive({});\n      const modalFn = useModalContext();\n\n      const advanceState = reactive<AdvanceState>({\n        isAdvanced: true,\n        hideAdvanceBtn: false,\n        isLoad: false,\n        actionSpan: 6,\n      });\n\n      const defaultValueRef = ref({});\n      const isInitedDefaultRef = ref(false);\n      const propsRef = ref<Partial<FormProps>>({});\n      const schemaRef = ref<FormSchema[] | null>(null);\n      const formElRef = ref<FormActionType | null>(null);\n\n      const { prefixCls } = useDesign('basic-form');\n\n      // Get the basic configuration of the form\n      const getProps = computed((): FormProps => {\n        return { ...props, ...unref(propsRef) };\n      });\n\n      const getFormClass = computed(() => {\n        return [\n          prefixCls,\n          {\n            [`${prefixCls}--compact`]: unref(getProps).compact,\n          },\n        ];\n      });\n\n      // Get uniform row style and Row configuration for the entire form\n      const getRow = computed(() => {\n        const { baseRowStyle = {}, rowProps } = unref(getProps);\n        return {\n          style: baseRowStyle,\n          ...rowProps,\n        };\n      });\n\n      const getBindValue = computed(() => ({ ...attrs, ...props, ...unref(getProps) }));\n\n      const getSchema = computed((): FormSchema[] => {\n        const schemas: FormSchema[] = unref(schemaRef) || (unref(getProps).schemas as any);\n        for (const schema of schemas) {\n          const { defaultValue, component, componentProps,isHandleDateDefaultValue = true } = schema;\n          // handle date type\n          if (isHandleDateDefaultValue && defaultValue && dateItemType.includes(component)) {\n              const valueFormat =componentProps ? componentProps['valueFormat'] : null;\n            if (!Array.isArray(defaultValue)) {\n              schema.defaultValue =  valueFormat\n                  ? dateUtil(defaultValue).format(valueFormat)\n                  : dateUtil(defaultValue);\n            } else {\n              const def: any[] = [];\n              defaultValue.forEach((item) => {\n                def.push(valueFormat ? dateUtil(item).format(valueFormat) : dateUtil(item));\n              });\n              schema.defaultValue = def;\n            }\n          }\n        }\n        if (unref(getProps).showAdvancedButton) {\n          return cloneDeep(\n            schemas.filter((schema) => schema.component !== 'Divider') as FormSchema[],\n          );\n        } else {\n          return cloneDeep(schemas as FormSchema[]);\n        }\n      });\n\n      const { handleToggleAdvanced, fieldsIsAdvancedMap } = useAdvanced({\n        advanceState,\n        emit,\n        getProps,\n        getSchema,\n        formModel,\n        defaultValueRef,\n      });\n\n      const handleActionToggleAdvanced = () => {\n        emit('toggle-advanced');\n        handleToggleAdvanced();\n      };\n\n      const { handleFormValues, initDefault } = useFormValues({\n        getProps,\n        defaultValueRef,\n        getSchema,\n        formModel,\n      });\n\n      useAutoFocus({\n        getSchema,\n        getProps,\n        isInitedDefault: isInitedDefaultRef,\n        formElRef: formElRef as Ref<FormActionType>,\n      });\n\n      const {\n        handleSubmit,\n        setFieldsValue,\n        clearValidate,\n        validate,\n        validateFields,\n        getFieldsValue,\n        updateSchema,\n        resetSchema,\n        appendSchemaByField,\n        removeSchemaByField,\n        resetFields,\n        scrollToField,\n      } = useFormEvents({\n        emit,\n        getProps,\n        formModel,\n        getSchema,\n        defaultValueRef,\n        formElRef: formElRef as Ref<FormActionType>,\n        schemaRef: schemaRef as Ref<FormSchema[]>,\n        handleFormValues,\n      });\n\n      createFormContext({\n        resetAction: resetFields,\n        submitAction: handleSubmit,\n      });\n\n      watch(\n        () => unref(getProps).model,\n        () => {\n          const { model } = unref(getProps);\n          if (!model) return;\n          setFieldsValue(model);\n        },\n        {\n          immediate: true,\n        },\n      );\n\n      watch(\n        () => unref(getProps).schemas,\n        (schemas) => {\n          resetSchema(schemas ?? []);\n        },\n      );\n\n      watch(\n        () => getSchema.value,\n        (schema) => {\n          nextTick(() => {\n            //  Solve the problem of modal adaptive height calculation when the form is placed in the modal\n            modalFn?.redoModalHeight?.();\n          });\n          if (unref(isInitedDefaultRef)) {\n            return;\n          }\n          if (schema?.length) {\n            initDefault();\n            isInitedDefaultRef.value = true;\n          }\n        },\n      );\n\n      watch(\n        () => formModel,\n        useDebounceFn(() => {\n          unref(getProps).submitOnChange && handleSubmit();\n        }, 300),\n        { deep: true },\n      );\n\n      async function setProps(formProps: Partial<FormProps>): Promise<void> {\n        propsRef.value = deepMerge(unref(propsRef) || {}, formProps);\n      }\n\n      function setFormModel(key: string, value: any, schema: FormSchema) {\n        formModel[key] = value;\n        emit('field-value-change', key, value);\n        // TODO 优化验证，这里如果是autoLink=false手动关联的情况下才会再次触发此函数\n        if (schema && schema.itemProps && !schema.itemProps.autoLink) {\n          validateFields([key]).catch((_) => {});\n        }\n      }\n\n      function handleEnterPress(e: KeyboardEvent) {\n        const { autoSubmitOnEnter } = unref(getProps);\n        if (!autoSubmitOnEnter) return;\n        if (e.key === 'Enter' && e.target && e.target instanceof HTMLElement) {\n          const target: HTMLElement = e.target as HTMLElement;\n          if (target && target.tagName && target.tagName.toUpperCase() == 'INPUT') {\n            handleSubmit();\n          }\n        }\n      }\n\n      const formActionType: Partial<FormActionType> = {\n        getFieldsValue,\n        setFieldsValue,\n        resetFields,\n        updateSchema,\n        resetSchema,\n        setProps,\n        removeSchemaByField,\n        appendSchemaByField,\n        clearValidate,\n        validateFields,\n        validate,\n        submit: handleSubmit,\n        scrollToField: scrollToField,\n      };\n\n      onMounted(() => {\n        initDefault();\n        emit('register', formActionType);\n      });\n\n      return {\n        getBindValue,\n        handleToggleAdvanced,\n        handleActionToggleAdvanced,\n        handleEnterPress,\n        formModel,\n        defaultValueRef,\n        advanceState,\n        getRow,\n        getProps,\n        formElRef,\n        getSchema,\n        formActionType: formActionType as any,\n        setFormModel,\n        getFormClass,\n        getFormActionBindProps: computed(() => {\n          const result = { ...getProps.value, ...advanceState };\n          return result;\n        }),\n        fieldsIsAdvancedMap,\n        ...formActionType,\n      };\n    },\n  });\n</script>\n<style lang=\"less\">\n  @prefix-cls: ~'@{namespace}-basic-form';\n\n  .@{prefix-cls} {\n    .ant-form-item {\n      &-label label::after {\n        margin: 0 6px 0 2px;\n      }\n\n      &-with-help {\n        margin-bottom: 0;\n      }\n\n      &:not(.ant-form-item-with-help) {\n        margin-bottom: 20px;\n      }\n\n      &.suffix-item {\n        .ant-form-item-children {\n          display: flex;\n        }\n\n        .ant-form-item-control {\n          margin-top: 4px;\n        }\n\n        .suffix {\n          display: inline-flex;\n          align-items: center;\n          margin-top: 1px;\n          padding-left: 6px;\n          line-height: 1;\n        }\n      }\n    }\n\n    .ant-form-explain {\n      font-size: 14px;\n    }\n\n    &--compact {\n      .ant-form-item {\n        margin-bottom: 8px !important;\n      }\n    }\n  }\n</style>\n","import type { FormProps, FormActionType, UseFormReturnType, FormSchema } from '../types/form';\nimport type { NamePath } from 'ant-design-vue/lib/form/interface';\nimport type { DynamicProps } from '/#/utils';\nimport { ref, onUnmounted, unref, nextTick, watch } from 'vue';\nimport { isProdMode } from '/@/utils/env';\nimport { error } from '/@/utils/log';\nimport { getDynamicProps } from '/@/utils';\n\nexport declare type ValidateFields = (nameList?: NamePath[]) => Promise<Recordable>;\n\ntype Props = Partial<DynamicProps<FormProps>>;\n\nexport function useForm(props?: Props): UseFormReturnType {\n  const formRef = ref<Nullable<FormActionType>>(null);\n  const loadedRef = ref<Nullable<boolean>>(false);\n\n  async function getForm() {\n    const form = unref(formRef);\n    if (!form) {\n      error(\n        'The form instance has not been obtained, please make sure that the form has been rendered when performing the form operation!',\n      );\n    }\n    await nextTick();\n    return form as FormActionType;\n  }\n\n  function register(instance: FormActionType) {\n    isProdMode() &&\n      onUnmounted(() => {\n        formRef.value = null;\n        loadedRef.value = null;\n      });\n    if (unref(loadedRef) && isProdMode() && instance === unref(formRef)) return;\n\n    formRef.value = instance;\n    loadedRef.value = true;\n\n    watch(\n      () => props,\n      () => {\n        props && instance.setProps(getDynamicProps(props));\n      },\n      {\n        immediate: true,\n        deep: true,\n      },\n    );\n  }\n\n  const methods: FormActionType = {\n    scrollToField: async (name: NamePath, options?: ScrollOptions | undefined) => {\n      const form = await getForm();\n      form.scrollToField(name, options);\n    },\n    setProps: async (formProps: Partial<FormProps>) => {\n      const form = await getForm();\n      form.setProps(formProps);\n    },\n\n    updateSchema: async (data: Partial<FormSchema> | Partial<FormSchema>[]) => {\n      const form = await getForm();\n      form.updateSchema(data);\n    },\n\n    resetSchema: async (data: Partial<FormSchema> | Partial<FormSchema>[]) => {\n      const form = await getForm();\n      form.resetSchema(data);\n    },\n\n    clearValidate: async (name?: string | string[]) => {\n      const form = await getForm();\n      form.clearValidate(name);\n    },\n\n    resetFields: async () => {\n      getForm().then(async (form) => {\n        await form.resetFields();\n      });\n    },\n\n    removeSchemaByField: async (field: string | string[]) => {\n      unref(formRef)?.removeSchemaByField(field);\n    },\n\n    // TODO promisify\n    getFieldsValue: <T>() => {\n      return unref(formRef)?.getFieldsValue() as T;\n    },\n\n    setFieldsValue: async <T>(values: T) => {\n      const form = await getForm();\n      form.setFieldsValue<T>(values);\n    },\n\n    appendSchemaByField: async (\n      schema: FormSchema | FormSchema[],\n      prefixField: string | undefined,\n      first: boolean,\n    ) => {\n      const form = await getForm();\n      form.appendSchemaByField(schema, prefixField, first);\n    },\n\n    submit: async (): Promise<any> => {\n      const form = await getForm();\n      return form.submit();\n    },\n\n    validate: async (nameList?: NamePath[]): Promise<Recordable> => {\n      const form = await getForm();\n      return form.validate(nameList);\n    },\n\n    validateFields: async (nameList?: NamePath[]): Promise<Recordable> => {\n      const form = await getForm();\n      return form.validateFields(nameList);\n    },\n  };\n\n  return [register, methods];\n}\n"],"names":["createCaseFirst","methodName","string","toString","strSymbols","hasUnicode","stringToArray","chr","trailing","castSlice","upperFirst","upperFirst$1","useItemLabelWidth","schemaItemRef","propsRef","computed","schemaItem","unref","labelCol","wrapperCol","labelWidth","disabledLabelWidth","globalLabelWidth","globalLabelCol","globWrapperCol","layout","width","col","__spreadValues","wrapCol","isNumber","_isSlot","s","Object","prototype","call","_isVNode","defineComponent","name","inheritAttrs","props","schema","type","default","formProps","allDefaultValues","formModel","setFormModel","Function","tableAction","formActionType","isAdvanced","Boolean","setup","slots","t","useI18n","toRefs","itemLabelWidthProp","getValues","mergeDynamicData","field","model","values","getComponentsProps","componentProps","isFunction","component","assign","orientation","plain","getDisable","disabled","globDisabled","dynamicDisabled","itemDisabled","isBoolean","getShow","show","ifShow","showAdvancedButton","itemIsAdvanced","isShow","isIfShow","handleRules","rules","defRules","rulesMessageJoinLabel","label","dynamicRules","required","cloneDeep","globalRulesMessageJoinLabel","joinLabel","Reflect","has","defaultMsg","createPlaceholderMessage","validator","rule","value","msg","message","undefined","isNull","Array","isArray","length","trim","checked","halfChecked","Promise","reject","resolve","getRequired","findIndex","push","requiredRuleIndex","includes","whitespace","valueFormat","setComponentRuleType","characterInx","val","max","renderComponent","renderComponentContent","changeEvent","valueField","isCheck","eventKey","on","args","e","propsData","target","Comp","componentMap","get","autoSetPlaceHolder","size","__spreadProps","allowClear","getPopupContainer","trigger","parentNode","placeholder","codeField","formValues","bindValue","compAttr","_createVNode","compSlot","renderLabelHelpMessage","helpMessage","helpComponentProps","subLabel","renderLabel","_createTextVNode","getHelpMessage","BasicHelp","_mergeProps","renderItem","itemProps","slot","render","suffix","colon","opts","_slot","Col","Divider","getContent","getSlot","showSuffix","getSuffix","NO_AUTO_LINK_COMPONENTS","autoLink","Form","Item","_slot2","colProps","colSlot","renderColContent","baseColProps","realColProps","_withDirectives","_vShow","_resolveComponent","_createBlock","_component_a_col","_normalizeProps","_ctx","_withCtx","_createElementVNode","_normalizeStyle","_component_FormItem","_renderSlot","_openBlock","_component_Button","_createCommentVNode","_toDisplayString","_component_BasicArrow","tryDeconstructArray","key","pattern","match","keys","k","index","set","tryDeconstructObject","isObject","useFormValues","defaultValueRef","getSchema","getProps","handleFormValues","res","item","transformDateFunc","_a","_b","isString","handleRangeTimeValue","fieldMapToTime","startTimeKey","endTimeKey","format","startTime","endTime","startTimeFormat","endTimeFormat","dateUtil","initDefault","schemas","obj","defaultValue","defaultValueObj","fieldKeys","isNullOrUnDef","BASIC_COL_LEN","useAdvanced","advanceState","emit","vm","getCurrentInstance","realWidthRef","screenEnum","screenRef","useBreakpoint","getEmptySpan","emptySpan","span","screen","debounceUpdateAdvanced","useDebounceFn","updateAdvanced","watch","getAdvanced","itemCol","itemColSum","isLastAction","mdWidth","lgWidth","xlWidth","xxlWidth","fieldsIsAdvancedMap","shallowReactive","realItemColSum","sum","handleToggleAdvanced","tryConstructArray","result","tryConstructObject","useFormEvents","formElRef","schemaRef","resetFields","__async","resetFunc","submitOnReset","getDefaultValue","nextTick","clearValidate","toRaw","handleSubmit","getAllFields","setFieldsValue","fields","delimiter","nestKeyArray","validKeys","hasKey","handleInputNumberValue","_props","constructValue","fieldValue","itemIsDateType","arr","ele","nestKey","out","isDef","validateFields","_","removeSchemaByField","schemaList","fieldList","_removeSchemaByFeild","appendSchemaByField","prefixField","first","addSchemaIds","error","_schemaList","_setDefaultValue","resetSchema","data","updateData","updateSchema","_val","newSchema","deepMerge","uniqBy","currentFieldsValue","getFieldsValue","isEmpty","dateItemType","nameList","validate","_nameList","scrollToField","options","submitFunc","checkIsInput","checkIsRangeSlider","defaultValueComponents","useAutoFocus","_0","isInitedDefault","watchEffect","formEl","el","inputEl","_sfc_main","FormItem","Row","FormAction","basicProps","attrs","reactive","modalFn","useModalContext","ref","isInitedDefaultRef","prefixCls","useDesign","getFormClass","getRow","baseRowStyle","rowProps","getBindValue","isHandleDateDefaultValue","def","handleActionToggleAdvanced","createFormContext","setProps","handleEnterPress","autoSubmitOnEnter","onMounted","_component_Form","_withKeys","_component_Row","_guardReactiveProps","_createElementBlock","_Fragment","_renderList","_createSlots","useForm","formRef","loadedRef","getForm","form","register","instance","onUnmounted","isProdMode","getDynamicProps"],"mappings":"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","x_google_ignoreList":[0,1]}