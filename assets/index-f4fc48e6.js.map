{"version":3,"file":"index-f4fc48e6.js","sources":["../../src/hooks/component/useFormItem.ts","../../src/components/CountDown/src/useCountdown.ts","../../src/components/CountDown/src/CountButton.vue","../../src/components/CountDown/src/CountdownInput.vue","../../src/components/CountDown/index.ts"],"sourcesContent":["import type { UnwrapRef, Ref, WritableComputedRef, DeepReadonly } from 'vue';\nimport {\n  reactive,\n  readonly,\n  computed,\n  getCurrentInstance,\n  watchEffect,\n  unref,\n  toRaw,\n  nextTick,\n} from 'vue';\n\nimport { isEqual } from 'lodash-es';\n\nexport function useRuleFormItem<T extends Recordable, K extends keyof T, V = UnwrapRef<T[K]>>(\n  props: T,\n  key?: K,\n  changeEvent?,\n  emitData?: Ref<any[]>,\n): [WritableComputedRef<V>, (val: V) => void, DeepReadonly<V>];\n\nexport function useRuleFormItem<T extends Recordable>(\n  props: T,\n  key: keyof T = 'value',\n  changeEvent = 'change',\n  emitData?: Ref<any[]>,\n) {\n  const instance = getCurrentInstance();\n  const emit = instance?.emit;\n\n  const innerState = reactive({\n    value: props[key],\n  });\n\n  const defaultState = readonly(innerState);\n\n  const setState = (val: UnwrapRef<T[keyof T]>): void => {\n    innerState.value = val as T[keyof T];\n  };\n\n  watchEffect(() => {\n    innerState.value = props[key];\n  });\n\n  const state: any = computed({\n    get() {\n      return innerState.value;\n    },\n    set(value) {\n      if (isEqual(value, defaultState.value)) return;\n\n      innerState.value = value as T[keyof T];\n      nextTick(() => {\n        emit?.(changeEvent, value, ...(toRaw(unref(emitData)) || []));\n      });\n    },\n  });\n\n  return [state, setState, defaultState];\n}\n","import { ref, unref } from 'vue';\nimport { tryOnUnmounted } from '@vueuse/core';\n\nexport function useCountdown(count: number) {\n  const currentCount = ref(count);\n\n  const isStart = ref(false);\n\n  let timerId: ReturnType<typeof setInterval> | null;\n\n  function clear() {\n    timerId && window.clearInterval(timerId);\n  }\n\n  function stop() {\n    isStart.value = false;\n    clear();\n    timerId = null;\n  }\n\n  function start() {\n    if (unref(isStart) || !!timerId) {\n      return;\n    }\n    isStart.value = true;\n    timerId = setInterval(() => {\n      if (unref(currentCount) === 1) {\n        stop();\n        currentCount.value = count;\n      } else {\n        currentCount.value -= 1;\n      }\n    }, 1000);\n  }\n\n  function reset() {\n    currentCount.value = count;\n    stop();\n  }\n\n  function restart() {\n    reset();\n    start();\n  }\n\n  tryOnUnmounted(() => {\n    reset();\n  });\n\n  return { start, reset, restart, clear, stop, currentCount, isStart };\n}\n","<template>\n  <Button v-bind=\"$attrs\" :disabled=\"isStart\" @click=\"handleStart\" :loading=\"loading\">\n    {{ getButtonText }}\n  </Button>\n</template>\n<script lang=\"ts\">\n  import { defineComponent, ref, watchEffect, computed, unref } from 'vue';\n  import { Button } from 'ant-design-vue';\n  import { useCountdown } from './useCountdown';\n  import { isFunction } from '/@/utils/is';\n  import { useI18n } from '/@/hooks/web/useI18n';\n\n  const props = {\n    value: { type: [Object, Number, String, Array] },\n    count: { type: Number, default: 60 },\n    beforeStartFunc: {\n      type: Function as PropType<() => Promise<boolean>>,\n      default: null,\n    },\n  };\n\n  export default defineComponent({\n    name: 'CountButton',\n    components: { Button },\n    props,\n    setup(props) {\n      const loading = ref(false);\n\n      const { currentCount, isStart, start, reset } = useCountdown(props.count);\n      const { t } = useI18n();\n\n      const getButtonText = computed(() => {\n        return !unref(isStart)\n          ? t('component.countdown.normalText')\n          : t('component.countdown.sendText', [unref(currentCount)]);\n      });\n\n      watchEffect(() => {\n        props.value === undefined && reset();\n      });\n\n      /**\n       * @description: Judge whether there is an external function before execution, and decide whether to start after execution\n       */\n      async function handleStart() {\n        const { beforeStartFunc } = props;\n        if (beforeStartFunc && isFunction(beforeStartFunc)) {\n          loading.value = true;\n          try {\n            const canStart = await beforeStartFunc();\n            canStart && start();\n          } finally {\n            loading.value = false;\n          }\n        } else {\n          start();\n        }\n      }\n      return { handleStart, currentCount, loading, getButtonText, isStart };\n    },\n  });\n</script>\n","<template>\n  <a-input v-bind=\"$attrs\" :class=\"prefixCls\" :size=\"size\" :value=\"state\">\n    <template #addonAfter>\n      <CountButton :size=\"size\" :count=\"count\" :value=\"state\" :beforeStartFunc=\"sendCodeApi\" />\n    </template>\n    <template #[item]=\"data\" v-for=\"item in Object.keys($slots).filter((k) => k !== 'addonAfter')\">\n      <slot :name=\"item\" v-bind=\"data || {}\"></slot>\n    </template>\n  </a-input>\n</template>\n<script lang=\"ts\">\n  import { defineComponent, PropType } from 'vue';\n  import CountButton from './CountButton.vue';\n  import { useDesign } from '/@/hooks/web/useDesign';\n  import { useRuleFormItem } from '/@/hooks/component/useFormItem';\n\n  const props = {\n    value: { type: String },\n    size: { type: String, validator: (v) => ['default', 'large', 'small'].includes(v) },\n    count: { type: Number, default: 60 },\n    sendCodeApi: {\n      type: Function as PropType<() => Promise<boolean>>,\n      default: null,\n    },\n  };\n\n  export default defineComponent({\n    name: 'CountDownInput',\n    components: { CountButton },\n    inheritAttrs: false,\n    props,\n    setup(props) {\n      const { prefixCls } = useDesign('countdown-input');\n      const [state] = useRuleFormItem(props);\n\n      return { prefixCls, state };\n    },\n  });\n</script>\n<style lang=\"less\">\n  @prefix-cls: ~'@{namespace}-countdown-input';\n\n  .@{prefix-cls} {\n    .ant-input-group-addon {\n      padding-right: 0;\n      border: none;\n      background-color: transparent;\n\n      button {\n        font-size: 14px;\n      }\n    }\n  }\n</style>\n","import { withInstall } from '/@/utils';\nimport countButton from './src/CountButton.vue';\nimport countdownInput from './src/CountdownInput.vue';\n\nexport const CountdownInput = withInstall(countdownInput);\nexport const CountButton = withInstall(countButton);\n"],"names":["useRuleFormItem","props","key","changeEvent","emitData","instance","getCurrentInstance","emit","innerState","reactive","defaultState","readonly","setState","val","watchEffect","computed","value","isEqual","nextTick","toRaw","unref","useCountdown","count","currentCount","ref","isStart","timerId","clear","stop","start","reset","restart","tryOnUnmounted","_sfc_main$1","defineComponent","Button","loading","t","useI18n","getButtonText","handleStart","__async","beforeStartFunc","isFunction","_resolveComponent","_openBlock","_createBlock","_component_Button","_mergeProps","_ctx","v","_sfc_main","CountButton","prefixCls","useDesign","state","_component_a_input","_createSlots","_withCtx","_createVNode","_component_CountButton","k","item","data","CountdownInput","withInstall","countdownInput","countButton"],"mappings":"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"}