{"version":3,"file":"index-d0b03492.js","sources":["../../src/views/bi/reportform/preview/index.data.ts","../../src/views/bi/reportform/preview/index.vue"],"sourcesContent":["import { defHttp } from '/@/utils/http/axios';\nimport { FormSchema } from '/@/components/Form';\nimport { useUserStore } from '/@/store/modules/user';\n\nexport enum Api {\n  LIST_ORG_URL = '/bi/common/org/info',\n  BASE_URL = '/bi/report-form/preview/config',\n  PAGE_URL = '/bi/report-form/preview/page',\n  CHART_URL = '/bi/report-form/preview/chart',\n  EXPORT_EXCEL_URL = '/bi/report-form/preview/export-excel',\n  LIST_COMPANY_URL = '/bi/report-form/preview/company-list',\n  LIST_STATION_URL = '/bi/report-form/preview/station-list',\n}\n\n// 获得公司列表\nexport const getCompanyList = (params) =>\n  defHttp.get(\n    {\n      url: Api.LIST_COMPANY_URL,\n      params,\n    },\n    { isOnlyResult: true },\n  );\n\n// 获得电站列表\nexport const getStationList = (params) =>\n  defHttp.get(\n    {\n      url: Api.LIST_STATION_URL,\n      params,\n    },\n    { isOnlyResult: true },\n  );\n\n// 获得组织列表\nexport const getOrgList = (params) =>\n  defHttp.get(\n    {\n      url: Api.LIST_ORG_URL,\n      params,\n    },\n    { isOnlyResult: true },\n  );\n\n// 分页获取列表\nexport const getConfig = (reportFormId: string) =>\n  defHttp.get(\n    {\n      url: `${Api.BASE_URL}?reportFormId=${reportFormId}`,\n    },\n    { isOnlyResult: true },\n  );\n\n// 获取列表\nexport const getPage = (params) =>\n  defHttp.get(\n    {\n      url: Api.PAGE_URL,\n      params,\n    },\n    { isOnlyResult: true },\n  );\n\n// 获取图表\nexport const getChart = (params) =>\n  defHttp.get(\n    {\n      url: Api.CHART_URL,\n      params,\n    },\n    { isOnlyResult: true },\n  );\n\n// 导出\nexport const exportExcel = (params) =>\n  defHttp.post(\n    {\n      url: Api.EXPORT_EXCEL_URL,\n      params,\n      responseType: 'blob',\n    },\n    { isOnlyResult: true },\n  );\n\nexport const getFormSearchSchemas = (params): FormSchema[] => {\n  return [\n    {\n      field: 'timeDimension',\n      label: '时间维度',\n      component: 'Input',\n      show: false,\n    },\n    {\n      field: 'reportRange',\n      label: '报表范围',\n      component: 'Input',\n      show: false,\n    },\n    {\n      field: '[startTime, endTime]',\n      label: '时间范围',\n      component: 'RangePicker',\n      componentProps: ({ formModel }) => {\n        const option = { style: 'width: 100%' } as any;\n        if (formModel.timeDimension === 'day') {\n          option.format = 'YYYY-MM-DD';\n          option.valueFormat = 'YYYY-MM-DD';\n          option.placeholder = ['开始日期', '结束日期'];\n        } else if (formModel.timeDimension === 'week') {\n          option.picker = 'week';\n          option.valueFormat = 'YYYY-MM-DD';\n          option.placeholder = ['开始周', '结束周'];\n        } else if (formModel.timeDimension === 'month') {\n          option.format = 'YYYY-MM';\n          option.valueFormat = 'YYYY-MM';\n          option.picker = 'month';\n          option.placeholder = ['开始月份', '结束月份'];\n        } else if (formModel.timeDimension === 'quarter') {\n          option.picker = 'quarter';\n          option.valueFormat = 'YYYY-MM';\n          option.placeholder = ['开始季度', '结束季度'];\n        } else if (formModel.timeDimension === 'year') {\n          option.format = 'YYYY';\n          option.valueFormat = 'YYYY';\n          option.picker = 'year';\n          option.placeholder = ['开始年份', '结束年份'];\n        }\n        return option;\n      },\n    },\n    {\n      field: 'companyId',\n      label: '所属公司',\n      component: 'ApiSelect',\n      componentProps: ({ formModel }) => {\n        return {\n          api: async () => {\n            const data = await getCompanyList({});\n            const options: any = [];\n            if (data && data.length > 0) {\n              data.forEach((item) => {\n                options.push({ value: item.companyId, label: item.companyName });\n              });\n            }\n            return options;\n          },\n          onChange: (value) => {\n            params.companyId = value;\n            formModel.stationIds = [];\n          },\n        };\n      },\n      show: useUserStore().isMultiOrganization,\n    },\n    {\n      field: 'stationIds',\n      label: '电站名称',\n      component: 'ApiSelect',\n      componentProps: {\n        api: async () => {\n          const data = await getStationList({ ...params });\n          const options: any = [];\n          if (data && data.length > 0) {\n            data.forEach((item) => {\n              options.push({ value: item.stationId, label: item.stationName });\n            });\n          }\n          return options;\n        },\n        mode: 'multiple',\n        maxTagCount: 'responsive',\n        filterOption: (input: string, option: any) => {\n          return option.label.toLowerCase().indexOf(input.toLowerCase()) >= 0;\n        },\n      },\n    },\n    {\n      field: 'comparativeDimension',\n      label: '对比维度',\n      component: 'Select',\n      componentProps: ({ formModel }) => {\n        let options = [] as any;\n        if (formModel.timeDimension === 'day' || formModel.timeDimension === 'month') {\n          options = [\n            { value: 'month', label: '月度' },\n            { value: 'quarter', label: '季度' },\n            { value: 'year', label: '年度' },\n          ];\n        } else if (formModel.timeDimension === 'quarter') {\n          options = [\n            { value: 'quarter', label: '季度' },\n            { value: 'year', label: '年度' },\n          ];\n        } else if (formModel.timeDimension === 'year') {\n          options = [{ value: 'year', label: '年度' }];\n        }\n        return {\n          options: options,\n        };\n      },\n      show: ({ values }) => {\n        const isShow =\n          values.timeDimension === 'day' ||\n          values.timeDimension === 'month' ||\n          values.timeDimension === 'quarter';\n        return isShow && !values.subtotalDimension;\n      },\n    },\n    {\n      field: 'subtotalDimension',\n      label: '小计维度',\n      component: 'Select',\n      componentProps: ({ formModel }) => {\n        let options = [] as any;\n        if (formModel.reportRange === 'station') {\n          options = [\n            { value: 'station', label: '电站' },\n            { value: 'company', label: '公司' },\n          ];\n        } else if (formModel.reportRange === 'company') {\n          options = [{ value: 'company', label: '公司' }];\n        }\n        // 非多组织过滤公司\n        if (!useUserStore().isMultiOrganization) {\n          options = options.filter((item) => {\n            if (item.value === 'station') {\n              return item;\n            }\n          });\n        }\n        return {\n          options: options,\n          onChange: () => {\n            formModel.comparativeDimension = '';\n          },\n        };\n      },\n      show: ({ values }) => {\n        return values.reportRange !== 'org';\n      },\n    },\n  ];\n};\n","<template>\n  <div class=\"tab-model\">\n    <div class=\"tab-button-div\">\n      <BasicForm @register=\"formRegister\" @advanced-change=\"redoHeight\" />\n    </div>\n\n    <div id=\"preview-table-tab-content\" class=\"tab-table-div tab-table-content\">\n      <a-tabs v-model:activeKey=\"activeKey\" @change=\"handleTabsChange\">\n        <a-tab-pane key=\"1\" tab=\"报表\">\n          <BasicTable @register=\"registerTable\" @resize-column=\"(w, col) => (col.width = w)\">\n            <template #toolbar>\n              <a-button class=\"yellow-btn\" :preIcon=\"IconEnum.EXPORT\" @click=\"handleExport\">{{\n                t('common.action.export')\n              }}</a-button>\n            </template>\n          </BasicTable>\n        </a-tab-pane>\n        <a-tab-pane v-if=\"formState.chartType !== 'no'\" key=\"2\" tab=\"图表\" force-render>\n          <div class=\"chart-header\">\n            <a-form labelAlign=\"right\" autocomplete=\"off\">\n              <a-row :gutter=\"24\">\n                <a-col v-show=\"true\" :span=\"18\" />\n                <a-col v-show=\"true\" :span=\"6\">\n                  <a-form-item label=\"指标\" :labelCol=\"{ span: 6 }\">\n                    <a-select\n                      v-model:value=\"formState.indexId\"\n                      :options=\"indexSelectOptions\"\n                      @change=\"handleIndexChange\"\n                    />\n                  </a-form-item>\n                </a-col>\n              </a-row>\n            </a-form>\n          </div>\n          <div id=\"mainChart\" class=\"chart-content\"></div>\n        </a-tab-pane>\n      </a-tabs>\n    </div>\n  </div>\n</template>\n<script lang=\"ts\" setup>\n  import { onMounted, ref, unref, reactive } from 'vue';\n  import { useRouter } from 'vue-router';\n  import { useI18n } from '@/hooks/web/useI18n';\n  import { useMessage } from '@/hooks/web/useMessage';\n  import { IconEnum } from '@/enums/appEnum';\n  import { BasicForm, useForm } from '@/components/Form';\n  import {\n    BasicTable,\n    useTable,\n    SorterResult,\n    BasicColumn,\n    BasicTableProps,\n  } from '/@/components/Table';\n  import * as echarts from 'echarts';\n  import { exportExcelFile } from '@/utils/file/download';\n  import { getConfig, getPage, getChart, exportExcel, getFormSearchSchemas } from './index.data';\n  import { useUserStore } from '/@/store/modules/user';\n\n  const { t } = useI18n();\n  const router = useRouter();\n  const { currentRoute } = router;\n  const route = unref(currentRoute);\n  const reportFormId = (route.query.reportFormId || '341') as string;\n  const { createConfirm, createMessage } = useMessage();\n  const searchInfo = ref({}) as any;\n  const activeKey = ref('1');\n  const formState = reactive({\n    indexId: '',\n    indexName: '',\n    chartType: '',\n    timeDimension: '',\n    reportRange: '',\n  });\n  const indexSelectOptions = ref([]) as any;\n  const maxHeight = ref(document.body.clientHeight - 272);\n\n  const handleIndexChange = (value, option) => {\n    formState.indexName = option.label;\n    reloadChart();\n  };\n\n  const getParam = (isPage: boolean) => {\n    const query = { ...getFieldsValue() };\n    if (query.stationIds && query.stationIds.length > 0) {\n      query.stationId = query.stationIds.join(',');\n    }\n    let param = {\n      reportFormId: reportFormId,\n      sortField: searchInfo.value?.sortField,\n      sortOrder: searchInfo.value?.sortOrder,\n    } as any;\n    if (isPage) {\n      const paginationRef = getPaginationRef() as any;\n      param.pageNo = paginationRef.current;\n      param.pageSize = paginationRef.pageSize;\n    }\n    for (const key in query) {\n      if (key === 'stationIds') {\n        continue;\n      }\n      param[key] = query[key];\n    }\n    param.reportRange = formState.reportRange;\n    param.timeDimension = formState.timeDimension;\n    return param;\n  };\n\n  const getPageByParam = async () => {\n    const query = getParam(true);\n    return await getPage(query);\n  };\n\n  const columns = ref<BasicColumn[]>([]);\n  const loadBaseData = async () => {\n    const data = await getConfig(reportFormId);\n    formState.chartType = data.chartType;\n    formState.reportRange = data.reportRange;\n    formState.timeDimension = data.timeDimension;\n    data.columns.forEach((item) => {\n      columns.value.push({\n        title: item.title,\n        dataIndex: item.dataIndex,\n        headAlign: 'center',\n        align: item.align || 'center',\n        sorter: isSorter(item.dataIndex) && false,\n        resizable: true,\n        minWidth: item.width ? item.width : 150,\n        ifShow: isShow(item.dataIndex),\n      });\n      // 指标\n      if (item.isIndex) {\n        indexSelectOptions.value.push({ value: item.dataIndex, label: item.title });\n      }\n    });\n    if (indexSelectOptions.value?.length > 0) {\n      formState.indexId = indexSelectOptions.value[0].value;\n      formState.indexName = indexSelectOptions.value[0].label;\n    }\n    setFormFieldsValue();\n  };\n\n  const setFormFieldsValue = () => {\n    setFieldsValue({ timeDimension: formState.timeDimension, reportRange: formState.reportRange });\n  };\n\n  const isShow = (key) => {\n    if (key === 'companyName') {\n      return useUserStore().isMultiOrganization;\n    }\n    return !(key === 'month' || key === 'quarter' || key === 'year');\n  };\n\n  const isSorter = (key) => {\n    return !(\n      key === 'companyName' ||\n      key === 'stationName' ||\n      key === 'month' ||\n      key === 'quarter' ||\n      key === 'year'\n    );\n  };\n\n  const stationParams = reactive({ companyId: null });\n  const [formRegister, { resetFields, setFieldsValue, getFieldsValue }] = useForm({\n    labelWidth: 120,\n    baseColProps: { span: 8 },\n    actionColOptions: {\n      span: 24,\n    },\n    autoAdvancedLine: 1,\n    schemas: getFormSearchSchemas(stationParams),\n    compact: true,\n    showAdvancedButton: true,\n    resetButtonOptions: {\n      onClick: async () => {\n        await resetFields();\n        await setFormFieldsValue();\n        stationParams.companyId = null;\n        await setColumns();\n        reloadTable();\n        reloadChart();\n      },\n    },\n    submitFunc: async () => {\n      await setColumns();\n      reloadTable();\n      reloadChart();\n      return Promise.resolve();\n    },\n  });\n\n  const reloadTable = () => {\n    if (activeKey.value === '1') {\n      reload();\n    }\n  };\n\n  const reloadChart = () => {\n    if (activeKey.value === '2') {\n      setTimeout(function () {\n        loadChart();\n      }, 300);\n    }\n  };\n\n  const setColumns = () => {\n    const fieldsValue = getFieldsValue();\n    const comparativeDimension = fieldsValue.comparativeDimension;\n    const subtotalDimension = fieldsValue.subtotalDimension;\n    columns.value.forEach((item) => {\n      item.ifShow = isShow(item.dataIndex);\n      if (item.dataIndex === comparativeDimension) {\n        item.ifShow = true;\n      }\n      // 公司小计，取消电站列\n      if (subtotalDimension === 'company' && item.dataIndex === 'stationName') {\n        item.ifShow = false;\n      }\n      // 公司列\n      if (item.dataIndex === 'companyName') {\n        item.ifShow = useUserStore().isMultiOrganization;\n      }\n      // 存在小计维度，取消排序\n      item.sorter = isSorter(item.dataIndex) && false;\n      if (subtotalDimension) {\n        item.sorter = false;\n      }\n    });\n    setProps({ columns: columns.value as any, pagination: subtotalDimension ? false : true });\n  };\n\n  const [registerTable, { setProps, getPaginationRef, reload, redoHeight }] = useTable({\n    api: getPageByParam,\n    target: '#preview-table-tab-content',\n    targetTabKey: '1',\n    useSearchForm: false,\n    bordered: true,\n    immediate: false,\n    sortFn: (sortInfo: SorterResult) => {\n      searchInfo.value.sortField = sortInfo.order ? sortInfo.field : '';\n      searchInfo.value.sortOrder = sortInfo.order?.replace('end', '');\n    },\n    showTableSetting: true,\n    tableSetting: { fullScreen: true },\n    scroll: { y: maxHeight.value },\n    maxHeight: maxHeight.value,\n    showIndexColumn: true,\n  });\n\n  type EChartsOption = echarts.EChartsOption;\n  const xData = ref([]);\n  const yData = ref([]);\n  let option: EChartsOption;\n  let myChart;\n  const loadChart = async (isReRequest: boolean = true) => {\n    if (!myChart) {\n      myChart = echarts.init(document.getElementById('mainChart'));\n    }\n    const query = getParam(false);\n    if (isReRequest) {\n      const data = await getChart(query);\n      xData.value = data.x;\n      yData.value = data.y;\n    }\n    let series = [] as any;\n    if (query.comparativeDimension && query.reportRange !== 'org') {\n      for (const key in yData.value) {\n        if (key.lastIndexOf('_' + formState.indexId) > -1) {\n          series.push({\n            name: `${key.split('_')[0]} ${formState.indexName}`,\n            type: formState.chartType,\n            data: yData.value[key],\n          });\n        }\n      }\n    } else {\n      series.push({\n        name: formState.indexName,\n        type: formState.chartType,\n        data: yData.value[formState.indexId],\n      });\n    }\n    // 数据缩放\n    let dataZoom;\n    const xLength = xData.value.length;\n    const yLength = series.length;\n    if (xLength * yLength > 10) {\n      dataZoom = [\n        {\n          type: 'slider',\n          show: true,\n          start: 0,\n          end: 30,\n        },\n      ];\n    }\n\n    option = {\n      tooltip: {\n        trigger: query.comparativeDimension ? 'item' : 'axis',\n        axisPointer: {\n          type: 'cross',\n          crossStyle: {\n            color: '#999',\n          },\n        },\n      },\n      toolbox: {\n        feature: {\n          dataView: { show: false, readOnly: false },\n          magicType: { show: true, type: ['line', 'bar'] },\n          restore: { show: true },\n          saveAsImage: { show: false },\n        },\n      },\n      xAxis: [\n        {\n          type: 'category',\n          data: xData.value,\n          axisPointer: {\n            type: 'shadow',\n          },\n          axisLabel: {\n            interval: 0,\n            rotate: 30,\n          },\n        },\n      ],\n      yAxis: [\n        {\n          type: 'value',\n        },\n      ],\n      dataZoom: dataZoom,\n      series: series,\n    };\n    myChart.setOption(option, {\n      notMerge: true,\n    });\n  };\n\n  function handleExport() {\n    createConfirm({\n      title: t('common.message.confirmTitle'),\n      iconType: 'warning',\n      content: t('common.message.exportMessage'),\n      async onOk() {\n        const param = getParam(false);\n        param.filename = '报表.xls';\n        param.excelList = getExcelList();\n        await exportExcel(param).then((res) => {\n          exportExcelFile(res?.data, param.filename);\n        });\n        createMessage.success(t('common.exportSuccessText'));\n      },\n    });\n  }\n\n  const getExcelList = () => {\n    let excelList = [] as any;\n    columns.value.forEach((item) => {\n      if (item.ifShow) {\n        excelList.push({ title: item.title, dataIndex: item.dataIndex });\n      }\n    });\n    return excelList;\n  };\n\n  const handleTabsChange = (activeKey) => {\n    if (activeKey == '1') {\n      reload();\n    } else if (activeKey == '2') {\n      setTimeout(function () {\n        loadChart();\n      }, 300);\n    }\n  };\n\n  // 启动执行代码\n  onMounted(async () => {\n    await loadBaseData();\n    const props = {\n      columns: columns.value as any,\n    } as Partial<BasicTableProps>;\n    setProps(props);\n    reload();\n  });\n</script>\n<style lang=\"less\" scoped>\n  @import '/@/design/biz/bizList.less';\n</style>\n<style lang=\"less\" scoped>\n  .chart-header {\n    padding: 10px 16px;\n  }\n\n  .chart-content {\n    width: 100%;\n    height: 100%;\n    min-height: 500px;\n    padding: 10px 16px;\n  }\n\n  .tab-model {\n    height: 100vh !important;\n    overflow: hidden;\n\n    .tab-table-content {\n      height: calc(100vh - 127px) !important;\n\n      > .ant-tabs {\n        height: 100% !important;\n\n        .ant-tabs-content-holder {\n          height: calc(100vh - 192px) !important;\n        }\n      }\n    }\n  }\n\n  [data-theme='dark'] .theme1 .ant-form {\n    background-color: unset;\n  }\n</style>\n"],"names":["getCompanyList","params","defHttp","getStationList","getConfig","reportFormId","getPage","getChart","exportExcel","getFormSearchSchemas","formModel","option","__async","data","options","item","value","useUserStore","__spreadValues","input","values","useI18n","router","useRouter","currentRoute","unref","createConfirm","createMessage","useMessage","searchInfo","ref","activeKey","formState","reactive","indexSelectOptions","maxHeight","handleIndexChange","reloadChart","getParam","isPage","query","getFieldsValue","param","_a","_b","paginationRef","getPaginationRef","key","getPageByParam","columns","loadBaseData","isSorter","isShow","setFormFieldsValue","setFieldsValue","stationParams","formRegister","resetFields","useForm","setColumns","reloadTable","reload","loadChart","fieldsValue","comparativeDimension","subtotalDimension","setProps","registerTable","redoHeight","useTable","sortInfo","xData","yData","myChart","isReRequest","echarts.init","series","dataZoom","xLength","yLength","handleExport","getExcelList","res","exportExcelFile","excelList","handleTabsChange","onMounted","props"],"mappings":"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"}