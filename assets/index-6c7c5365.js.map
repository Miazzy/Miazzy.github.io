{"version":3,"file":"index-6c7c5365.js","sources":["../../src/views/bpm/manage/task/taskCenter/taskCenter.data.ts","../../src/views/bpm/manage/task/taskCenter/index.vue"],"sourcesContent":["import { BasicColumn, FormSchema, useRender } from '@/components/Table';\nimport { assign, forEach } from 'min-dash';\n\nexport function getInstanceResult(value: any) {\n  const obj = {};\n  forEach(bpmProcessInstanceResult, function (def) {\n    if (def.value === value.toString()) {\n      assign(obj, def);\n    }\n  });\n  return obj;\n}\n\nconst bpmProcessInstanceResult = [\n  {\n    dictType: 'bpm_process_instance_result',\n    value: '0',\n    label: '草稿',\n    colorType: 'primary',\n    cssClass: '',\n  },\n  {\n    dictType: 'bpm_process_instance_result',\n    value: '1',\n    label: '处理中',\n    colorType: 'primary',\n    cssClass: '',\n  },\n  {\n    dictType: 'bpm_process_instance_result',\n    value: '2',\n    label: '通过',\n    colorType: 'success',\n    cssClass: '',\n  },\n  {\n    dictType: 'bpm_process_instance_result',\n    value: '3',\n    label: '不通过',\n    colorType: 'danger',\n    cssClass: '',\n  },\n  {\n    dictType: 'bpm_process_instance_result',\n    value: '4',\n    label: '已取消',\n    colorType: 'info',\n    cssClass: '',\n  },\n  {\n    dictType: 'bpm_process_instance_result',\n    value: '5',\n    label: '已终止',\n    colorType: 'info',\n    cssClass: '',\n  },\n];\n\nexport const columns: BasicColumn[] = [\n  {\n    title: '单据编号',\n    dataIndex: 'businessCode',\n    width: 160,\n    sorter: true,\n    resizable: true,\n  },\n\n  {\n    title: '任务主题',\n    dataIndex: 'description',\n    width: 200,\n    sorter: true,\n    resizable: true,\n  },\n  {\n    title: '流程名称',\n    dataIndex: 'name',\n    width: 160,\n    sorter: true,\n    resizable: true,\n  },\n  {\n    title: '当前节点',\n    dataIndex: 'taskDefKey',\n    width: 160,\n    sorter: true,\n    resizable: true,\n  },\n  {\n    title: '处理人',\n    dataIndex: 'assigneeName',\n    width: 100,\n    sorter: true,\n    resizable: true,\n  },\n  {\n    title: '申请人',\n    dataIndex: 'startUserName',\n    width: 100,\n    sorter: true,\n    resizable: true,\n  },\n  {\n    title: '创建时间',\n    dataIndex: 'createdOn',\n    width: 160,\n    sorter: true,\n    resizable: true,\n  },\n  {\n    title: '流程状态',\n    dataIndex: 'status',\n    sorter: true,\n    resizable: true,\n    width: 100,\n    customRender: ({ record }) => {\n      const obj = getInstanceResult(record.status);\n      return useRender.renderFlowStatus(record.status, obj['label']);\n    },\n  },\n];\n\nexport const searchFormSchema: FormSchema[] = [\n  {\n    label: '单据编号',\n    field: 'bizCode',\n    component: 'Input',\n    colProps: { span: 8 },\n  },\n  {\n    label: '任务主题',\n    field: 'description',\n    component: 'Input',\n    colProps: { span: 8 },\n  },\n  {\n    label: '流程名称',\n    field: 'name',\n    component: 'Input',\n    colProps: { span: 8 },\n  },\n  {\n    label: '申请人',\n    field: 'personMemberName',\n    component: 'Input',\n    colProps: { span: 8 },\n  },\n\n  {\n    label: '创建时间',\n    field: '[startDate, endDate]',\n    component: 'RangePicker',\n    componentProps: {\n      format: 'YYYY-MM-DD',\n      valueFormat: 'YYYY-MM-DD',\n      placeholder: ['开始日期', '结束日期'],\n    },\n    colProps: { span: 8 },\n  },\n  {\n    field: 'status',\n    label: '流程状态',\n    component: 'DictSelectBox',\n    componentProps: {\n      type: 'bpm_process_instance_result',\n    },\n    colProps: { span: 8 },\n  },\n];\n","<script lang=\"ts\" setup>\n  import { onMounted, ref, reactive, toRaw } from 'vue';\n  import { BasicTable, BasicColumn, useTable, SorterResult } from '@/components/Table';\n  import { TreeItem } from '/@/components/Tree';\n  import { PageWrapper } from '/@/components/Page';\n  import CommonTree from '@/components/Framework/Tree/CommonTree.vue';\n  import { searchFormSchema, columns } from './taskCenter.data';\n  import * as CommonUtil from '/@/utils/common';\n  import { assign } from 'lodash-es';\n  import * as TaskApi from '@/api/bpm/task';\n  import { useRoute } from 'vue-router';\n  import { MsgManager } from '/@/message/MsgManager';\n\n  defineOptions({ name: 'TaskCenter' });\n\n  const { query } = useRoute();\n\n  const treeData = ref<TreeItem[]>([]); // 左侧任务类型树数据\n  const expandedKeys = ref<Array<string | number>>([]); //默认展开的节点\n  const selectedKeys = ref<Array<string | number>>([]); //默认选择的节点\n\n  const selectedNode = ref({}); // 被选择的任务类型节点\n\n  const title = ref('待办任务'); // table title\n\n  const flowType = ref('010001'); // 默认选择节点\n\n  let searchInfo = reactive<any>({});\n\n  const getColumns = () => {\n    if (selectedNode.value.flowDataType == 'noticeTask') {\n      const noticeTaskColumns: BasicColumn[] = [\n        {\n          title: '主题',\n          dataIndex: 'subject',\n          width: 160,\n          sorter: true,\n          resizable: true,\n        },\n        {\n          title: '类型',\n          dataIndex: 'businessType',\n          width: 160,\n          sorter: true,\n          resizable: true,\n          customRender: ({ record }) => {\n            if (record.businessType == 'notice') {\n              return '通知';\n            }\n            return '公告';\n          },\n        },\n        {\n          title: '部门',\n          dataIndex: 'deptName',\n          width: 160,\n          sorter: true,\n          resizable: true,\n        },\n        {\n          title: '发送人',\n          dataIndex: 'personMemberName',\n          width: 160,\n          sorter: true,\n          resizable: true,\n        },\n        {\n          title: '发送时间',\n          dataIndex: 'finishedDate',\n          width: 160,\n          sorter: true,\n          resizable: true,\n        },\n      ];\n      return noticeTaskColumns;\n    }\n    return columns;\n  };\n\n  const [registerTable, { getForm, reload, setColumns, setTableData, getPaginationRef }] = useTable(\n    {\n      title: '任务中心台账',\n      api: TaskApi.getFlowTasks,\n      columns: columns,\n      formConfig: { labelWidth: 120, schemas: searchFormSchema },\n      useSearchForm: true,\n      bordered: true,\n      beforeFetch(search) {\n        assign(search, searchInfo);\n\n        search.flowDataType = selectedNode.value.flowDataType;\n\n        let flowTypeObj = getFlowType(flowType.value);\n        if(flowTypeObj){\n          search.flowDataType = flowTypeObj;\n        }\n\n        if (!search.flowDataType) {\n          search.flowDataType = 'toDoTask';\n        }\n\n        searchInfo = {};\n\n        return search;\n      },\n      sortFn: (sortInfo: SorterResult) => {\n        const sortOrder = sortInfo.order?.replace('end', '');\n        searchInfo.sortOrder = sortOrder;\n        searchInfo.sortField = sortOrder ? CommonUtil.toUnderline(sortInfo.field) : undefined;\n      },\n      showTableSetting: true,\n      tableSetting: { fullScreen: true },\n      showIndexColumn: true,\n    },\n  );\n\n  function handleView(record: any) {\n    const data = toRaw(record);\n    if(flowType.value == '010002'){//待阅任务\n      TaskApi.updateCcTo(record.processInstanceId).then((res) => {\n        if (res.result) {\n          reloadAll();\n          CommonUtil.toFlowPage(record.businessKey);\n        }\n      });\n    }else{\n      CommonUtil.toFlowPage(data.businessKey);\n    }\n  }\n\n  // 左侧树状菜单选中事件\n  async function handleSelect(node = {}) {\n    // const pagination = getPaginationRef();\n    // let params = {};\n\n    // let code = node?.code ?? '';\n    // if (selectedNode.value.flowDataType == code) {\n    //   params.pageNo = pagination.current;\n    //   params.pageSize = pagination.pageSize;\n    // }\n    let code = node?.code ?? '';\n    if(code == '' || code == 'todo' || code == 'check'){\n      return;\n    }\n    selectedNode.value.flowDataType = node?.code ?? '';\n\n    flowType.value = '';\n\n    title.value = node?.name ?? '';\n    // params.flowDataType = node?.code ?? '';\n    // const getFieldsValue = getForm().getFieldsValue();\n    // assign(params, getFieldsValue);\n    // setColumns(getColumns());\n\n    // let tasks = await TaskApi.getFlowTasks(params);\n    // setTableData(tasks.list);\n    reload();\n      setTaskCount();\n  }\n\n  // 查询左侧电站树数据\n  function initFlowTypeTree() {\n    treeData.value = [\n      {\n        key: '01',\n        id: '01',\n        code: 'todo',\n        name: '待办任务',\n        children: [\n          { key: '010001', id: '010001', code: 'toDoTask', name: '待办任务' },\n          { key: '010002', id: '010002', code: 'toReadTask', name: '待阅任务' },\n          // { key: '010003', id: '010003', code: 'noticeTask', name: '通知任务' },\n          { key: '010004', id: '010004', code: 'draftTask', name: '草稿箱' },\n        ],\n      },\n      {\n        key: '02',\n        id: '02',\n        code: 'check',\n        name: '任务查询',\n        children: [\n          { key: '020001', id: '020001', code: 'createdTask', name: '本人发起' },\n          { key: '020002', id: '020002', code: 'trackingTask', name: '跟踪任务' },\n          { key: '020003', id: '020003', code: 'doneTask', name: '已办任务' },\n          { key: '020004', id: '020004', code: 'readedTask', name: '已阅任务' },\n          { key: '020005', id: '020005', code: 'copyToTask', name: '我抄送的' },\n          // { key: '020006', id: '020006', code: 'returnedTask', name: '退回任务' },\n        ],\n      },\n    ];\n    setTaskCount();\n    expandedKeys.value = ['01', '02'];\n    selectedKeys.value.push(flowType.value);\n  }\n\n  const getFlowType = (id) => {\n    let data = [\n    { id: '010001', code: 'toDoTask', name: '待办任务' },\n    { id: '010002', code: 'toReadTask', name: '待阅任务' },\n    { id: '020001', code: 'createdTask', name: '本人发起' },\n    { id: '020003', code: 'doneTask', name: '已办任务' }\n    ];\n    let obj = data.find((item) => item.id == id);\n    if(obj){\n      return obj.code\n    }\n    return null;\n  }\n\n  const reloadAll = async () => {\n    // 后续需要一段时间处理后才能查询到最新数据，建议延时查询\n    setTimeout(() => {\n      reload();\n      setTaskCount();\n    }, 1500);\n  };\n\n  async function setTaskCount() {\n    let taskCount = await TaskApi.getTaskCount({});\n    treeData.value[0].children[0].badge = taskCount.toDo;\n    treeData.value[0].children[1].badge = taskCount.toRead;\n    treeData.value[0].children[2].badge = taskCount.draft;\n    const createdTaskCount = await TaskApi.getCreatedTaskCount();\n    treeData.value[1].children[0].badge = createdTaskCount;\n  }\n\n  onMounted(() => {\n    if(query.flowType){\n      flowType.value = query.flowType;\n    }\n    initFlowTypeTree();\n    MsgManager.getInstance().listen('task-center-page', reloadAll);\n  });\n</script>\n<template>\n  <PageWrapper dense contentFullHeight fixedHeight contentClass=\"flex\" style=\"position: relative\">\n    <!-- 电站组织树 -->\n    <CommonTree\n      title=\"任务类型\"\n      @select=\"handleSelect\"\n      :value=\"treeData\"\n      class=\"left-tree-layout\"\n      :expandedKeys=\"expandedKeys\"\n      :selectedKeys=\"selectedKeys\"\n      :toolbar=\"true\"\n      :canEdit=\"false\"\n      :canAdd=\"false\"\n      :canDelete=\"false\"\n      :isShowOperationBtns=\"false\"\n      :fieldNames=\"{ key: 'id', title: 'name' }\"\n    />\n\n    <div class=\"right-table-layout\">\n        <BasicTable\n        class=\"fix-basic-table\"\n        @register=\"registerTable\"\n        @resize-column=\"(w, col) => (col.width = w)\"\n        @row-db-click=\"(record) => handleView(record)\"\n      />\n    </div>\n    \n  </PageWrapper>\n</template>\n<style lang=\"less\" scoped>\n  .dialog-loading {\n    position: absolute;\n    z-index: 1000 !important;\n    top: 45%;\n    left: 45%;\n  }\n\n  .dialog-mask {\n    position: absolute;\n    z-index: 1001 !important;\n    top: -1px;\n    width: 100%;\n    height: 100%;\n    opacity: 0.3;\n    background: #ccc;\n  }\n\n  .left-tree-layout {\n    width: 298px;\n    border-radius: 2px;\n    flex-shrink: 0;\n  }\n\n  .right-table-layout {\n    width: calc(100% - 308px);\n  }\n\n  .fix-basic-table {\n    :deep(&.vben-basic-table .ant-table-wrapper) {\n      padding: 10px 16px 12px;\n    }\n\n    :deep(.table-settings) {\n      margin-right: 0;\n    }\n\n    :deep(.table-settings .anticon-setting) {\n      margin-right: 0;\n    }\n  }\n</style>\n"],"names":["getInstanceResult","value","obj","forEach","bpmProcessInstanceResult","def","assign","columns","record","useRender","searchFormSchema","query","useRoute","treeData","ref","expandedKeys","selectedKeys","selectedNode","title","flowType","searchInfo","reactive","registerTable","getForm","reload","setColumns","setTableData","getPaginationRef","useTable","TaskApi.getFlowTasks","search","flowTypeObj","getFlowType","sortInfo","sortOrder","_a","CommonUtil.toUnderline","handleView","data","toRaw","TaskApi.updateCcTo","res","reloadAll","CommonUtil.toFlowPage","handleSelect","__async","node","code","_b","_c","setTaskCount","initFlowTypeTree","id","item","taskCount","TaskApi.getTaskCount","createdTaskCount","TaskApi.getCreatedTaskCount","onMounted","MsgManager"],"mappings":"45CAGO,SAASA,EAAkBC,EAAY,CAC5C,MAAMC,EAAM,CAAA,EACJ,OAAAC,EAAAC,EAA0B,SAAUC,EAAK,CAC3CA,EAAI,QAAUJ,EAAM,SAAA,GACtBK,EAAOJ,EAAKG,CAAG,CACjB,CACD,EACMH,CACT,CAEA,MAAME,EAA2B,CAC/B,CACE,SAAU,8BACV,MAAO,IACP,MAAO,KACP,UAAW,UACX,SAAU,EACZ,EACA,CACE,SAAU,8BACV,MAAO,IACP,MAAO,MACP,UAAW,UACX,SAAU,EACZ,EACA,CACE,SAAU,8BACV,MAAO,IACP,MAAO,KACP,UAAW,UACX,SAAU,EACZ,EACA,CACE,SAAU,8BACV,MAAO,IACP,MAAO,MACP,UAAW,SACX,SAAU,EACZ,EACA,CACE,SAAU,8BACV,MAAO,IACP,MAAO,MACP,UAAW,OACX,SAAU,EACZ,EACA,CACE,SAAU,8BACV,MAAO,IACP,MAAO,MACP,UAAW,OACX,SAAU,EACZ,CACF,EAEaG,EAAyB,CACpC,CACE,MAAO,OACP,UAAW,eACX,MAAO,IACP,OAAQ,GACR,UAAW,EACb,EAEA,CACE,MAAO,OACP,UAAW,cACX,MAAO,IACP,OAAQ,GACR,UAAW,EACb,EACA,CACE,MAAO,OACP,UAAW,OACX,MAAO,IACP,OAAQ,GACR,UAAW,EACb,EACA,CACE,MAAO,OACP,UAAW,aACX,MAAO,IACP,OAAQ,GACR,UAAW,EACb,EACA,CACE,MAAO,MACP,UAAW,eACX,MAAO,IACP,OAAQ,GACR,UAAW,EACb,EACA,CACE,MAAO,MACP,UAAW,gBACX,MAAO,IACP,OAAQ,GACR,UAAW,EACb,EACA,CACE,MAAO,OACP,UAAW,YACX,MAAO,IACP,OAAQ,GACR,UAAW,EACb,EACA,CACE,MAAO,OACP,UAAW,SACX,OAAQ,GACR,UAAW,GACX,MAAO,IACP,aAAc,CAAC,CAAE,OAAAC,KAAa,CACtB,MAAAN,EAAMF,EAAkBQ,EAAO,MAAM,EAC3C,OAAOC,EAAU,iBAAiBD,EAAO,OAAQN,EAAI,KAAQ,CAC/D,CACF,CACF,EAEaQ,GAAiC,CAC5C,CACE,MAAO,OACP,MAAO,UACP,UAAW,QACX,SAAU,CAAE,KAAM,CAAE,CACtB,EACA,CACE,MAAO,OACP,MAAO,cACP,UAAW,QACX,SAAU,CAAE,KAAM,CAAE,CACtB,EACA,CACE,MAAO,OACP,MAAO,OACP,UAAW,QACX,SAAU,CAAE,KAAM,CAAE,CACtB,EACA,CACE,MAAO,MACP,MAAO,mBACP,UAAW,QACX,SAAU,CAAE,KAAM,CAAE,CACtB,EAEA,CACE,MAAO,OACP,MAAO,uBACP,UAAW,cACX,eAAgB,CACd,OAAQ,aACR,YAAa,aACb,YAAa,CAAC,OAAQ,MAAM,CAC9B,EACA,SAAU,CAAE,KAAM,CAAE,CACtB,EACA,CACE,MAAO,SACP,MAAO,OACP,UAAW,gBACX,eAAgB,CACd,KAAM,6BACR,EACA,SAAU,CAAE,KAAM,CAAE,CACtB,CACF,kFCzJQ,KAAA,CAAE,MAAAC,GAAUC,IAEZC,EAAWC,EAAgB,CAAA,CAAE,EAC7BC,EAAeD,EAA4B,CAAA,CAAE,EAC7CE,EAAeF,EAA4B,CAAA,CAAE,EAE7CG,EAAeH,EAAI,CAAA,CAAE,EAErBI,EAAQJ,EAAI,MAAM,EAElBK,EAAWL,EAAI,QAAQ,EAEzB,IAAAM,EAAaC,EAAc,CAAA,CAAE,EAoD3B,KAAA,CAACC,EAAe,CAAE,QAAAC,GAAS,OAAAC,EAAQ,WAAAC,GAAY,aAAAC,GAAc,iBAAAC,EAAkB,CAAA,EAAIC,EACvF,CACE,MAAO,SACP,IAAKC,EACL,QAAAtB,EACA,WAAY,CAAE,WAAY,IAAK,QAASG,EAAiB,EACzD,cAAe,GACf,SAAU,GACV,YAAYoB,EAAQ,CAClBxB,EAAOwB,EAAQV,CAAU,EAElBU,EAAA,aAAeb,EAAa,MAAM,aAErC,IAAAc,EAAcC,EAAYb,EAAS,KAAK,EAC5C,OAAGY,IACDD,EAAO,aAAeC,GAGnBD,EAAO,eACVA,EAAO,aAAe,YAGxBV,EAAa,CAAA,EAENU,CACT,EACA,OAASG,GAA2B,OAClC,MAAMC,GAAYC,EAAAF,EAAS,QAAT,YAAAE,EAAgB,QAAQ,MAAO,IACjDf,EAAW,UAAYc,EACvBd,EAAW,UAAYc,EAAYE,EAAuBH,EAAS,KAAK,EAAI,MAC9E,EACA,iBAAkB,GAClB,aAAc,CAAE,WAAY,EAAK,EACjC,gBAAiB,EACnB,CAAA,EAGF,SAASI,EAAW7B,EAAa,CACzB,MAAA8B,EAAOC,EAAM/B,CAAM,EACtBW,EAAS,OAAS,SACnBqB,EAAmBhC,EAAO,iBAAiB,EAAE,KAAMiC,GAAQ,CACrDA,EAAI,SACIC,IACCC,EAAWnC,EAAO,WAAW,EAC1C,CACD,EAEUmC,EAAWL,EAAK,WAAW,CAE1C,CAGe,SAAAM,GAAwB,QAAAC,EAAA,yBAAXC,EAAO,GAAI,WASjC,IAAAC,GAAOZ,EAAAW,GAAA,YAAAA,EAAM,OAAN,KAAAX,EAAc,GACtBY,GAAQ,IAAMA,GAAQ,QAAUA,GAAQ,UAG9B9B,EAAA,MAAM,cAAe+B,EAAAF,GAAA,YAAAA,EAAM,OAAN,KAAAE,EAAc,GAEhD7B,EAAS,MAAQ,GAEXD,EAAA,OAAQ+B,EAAAH,GAAA,YAAAA,EAAM,OAAN,KAAAG,EAAc,GAQrBzB,IACQ0B,IACjB,GAGA,SAASC,GAAmB,CAC1BtC,EAAS,MAAQ,CACf,CACE,IAAK,KACL,GAAI,KACJ,KAAM,OACN,KAAM,OACN,SAAU,CACR,CAAE,IAAK,SAAU,GAAI,SAAU,KAAM,WAAY,KAAM,MAAO,EAC9D,CAAE,IAAK,SAAU,GAAI,SAAU,KAAM,aAAc,KAAM,MAAO,EAEhE,CAAE,IAAK,SAAU,GAAI,SAAU,KAAM,YAAa,KAAM,KAAM,CAChE,CACF,EACA,CACE,IAAK,KACL,GAAI,KACJ,KAAM,QACN,KAAM,OACN,SAAU,CACR,CAAE,IAAK,SAAU,GAAI,SAAU,KAAM,cAAe,KAAM,MAAO,EACjE,CAAE,IAAK,SAAU,GAAI,SAAU,KAAM,eAAgB,KAAM,MAAO,EAClE,CAAE,IAAK,SAAU,GAAI,SAAU,KAAM,WAAY,KAAM,MAAO,EAC9D,CAAE,IAAK,SAAU,GAAI,SAAU,KAAM,aAAc,KAAM,MAAO,EAChE,CAAE,IAAK,SAAU,GAAI,SAAU,KAAM,aAAc,KAAM,MAAO,CAElE,CACF,CAAA,EAEWqC,IACAnC,EAAA,MAAQ,CAAC,KAAM,IAAI,EACnBC,EAAA,MAAM,KAAKG,EAAS,KAAK,CACxC,CAEM,MAAAa,EAAeoB,GAAO,CAO1B,IAAIlD,EANO,CACX,CAAE,GAAI,SAAU,KAAM,WAAY,KAAM,MAAO,EAC/C,CAAE,GAAI,SAAU,KAAM,aAAc,KAAM,MAAO,EACjD,CAAE,GAAI,SAAU,KAAM,cAAe,KAAM,MAAO,EAClD,CAAE,GAAI,SAAU,KAAM,WAAY,KAAM,MAAO,CAAA,EAEhC,KAAMmD,GAASA,EAAK,IAAMD,CAAE,EAC3C,OAAGlD,EACMA,EAAI,KAEN,IAAA,EAGHwC,EAAY,IAAYG,EAAA,sBAE5B,WAAW,IAAM,CACRrB,IACM0B,KACZ,IAAI,CAAA,GAGT,SAAeA,GAAe,QAAAL,EAAA,sBAC5B,IAAIS,EAAY,MAAMC,EAAqB,CAAA,CAAE,EAC7C1C,EAAS,MAAM,CAAC,EAAE,SAAS,CAAC,EAAE,MAAQyC,EAAU,KAChDzC,EAAS,MAAM,CAAC,EAAE,SAAS,CAAC,EAAE,MAAQyC,EAAU,OAChDzC,EAAS,MAAM,CAAC,EAAE,SAAS,CAAC,EAAE,MAAQyC,EAAU,MAC1C,MAAAE,EAAmB,MAAMC,IAC/B5C,EAAS,MAAM,CAAC,EAAE,SAAS,CAAC,EAAE,MAAQ2C,CACxC,GAEA,OAAAE,EAAU,IAAM,CACX/C,EAAM,WACPQ,EAAS,MAAQR,EAAM,UAERwC,IACjBQ,EAAW,YAAY,EAAE,OAAO,mBAAoBjB,CAAS,CAAA,CAC9D"}