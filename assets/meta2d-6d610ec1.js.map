{"version":3,"file":"meta2d-6d610ec1.js","sources":["../../src/views/monitor/wiringDiagram/meta2d.vue"],"sourcesContent":["<template>\n  <div class=\"iframe-container\" ref=\"container\">\n    <div class=\"skeleton-container\" :class=\"skeletonStatus\"></div>\n    <div class=\"component-container\">\n      <div class=\"form station-selector-box\">\n        <Icon class=\"icon-left\" icon=\"mdi:house-city\" color=\"#1890FF\" :size=\"15\" />\n        <a-tree-select\n          v-model:value=\"value\"\n          show-search\n          style=\"width: 200px; margin: 0 0 0 8px\"\n          :dropdown-style=\"{ maxHeight: '800px', overflow: 'auto' }\"\n          placeholder=\"请选择电站数据...\"\n          allow-clear\n          :tree-default-expand-all=\"false\"\n          :tree-data=\"treeData\"\n          :field-names=\"fieldNames\"\n          tree-node-filter-prop=\"name\"\n          @select=\"handleStationChange\"\n        />\n      </div>\n    </div>\n    <div class=\"frame-container\" :class=\"frameClass\">\n      <iframe class=\"frame-main\" :class=\"frameStatus\" ref=\"iframe\" :src=\"frameURL\"> </iframe>\n    </div>\n  </div>\n</template>\n<script lang=\"ts\" setup>\n  import { ref, onMounted, computed, nextTick } from 'vue';\n  import type { TreeSelectProps } from 'ant-design-vue';\n  import { getToken } from '/@/utils/auth';\n  import { urlToPath } from '/@/utils/route';\n  import { Config } from '/@/constant/constant';\n  import Icon from '@/components/Icon/Icon.vue';\n  import { getWiringDiagramTree, getWiringDiagramStationList } from '/@/api/sys/user';\n\n  const loadFlag = ref(false);\n  const container = ref();\n  const iframe = ref();\n  const token = ref('');\n  const surfaceID = ref('');\n  const fieldNames = ref({ children: 'children', label: 'name', value: 'id' });\n  const treeNodeID = ref('');\n  const stationID = ref('');\n  const value = ref<string>();\n  const treeData = ref<TreeSelectProps['treeData']>();\n  const treeMap = new Map<string, any>();\n  // const jsonData = ref(null);\n\n  const frameStatus = computed(() => (loadFlag.value ? 'status-on' : 'status-off'));\n  const skeletonStatus = computed(() => (loadFlag.value ? 'status-off' : 'status-on'));\n  const frameClass = computed(() =>\n    surfaceID.value || treeNodeID.value ? 'frame-block' : 'frame-none',\n  );\n  const frameURL = computed(() => {\n    const id = surfaceID.value ? encodeURIComponent(surfaceID.value) : '';\n    const nodeId = treeNodeID.value ? encodeURIComponent(treeNodeID.value) : '';\n    const sid = stationID.value ? encodeURIComponent(stationID.value) : '';\n    const url = `${Config.RENDER_ENGINE_URL}?id=${id}&nodeId=${nodeId}&stationID=${sid}&token=${token.value}`;\n    return url;\n  });\n\n  // 选择站点及接线图函数\n  const handleStationChange = async (value, node) => {\n    try {\n      treeNodeID.value = node.nodeId ? node.nodeId : node.nodeID;\n      stationID.value = node.parentId;\n      // nextTick(() => {\n      //   handleGetJsonData(node.id);\n      // });\n    } catch (error) {\n      //\n    }\n  };\n\n  // 获取接线图数据函数\n  // const handleGetJsonData = async (id: string = '') => {\n  //   try {\n  //     const response = await getWiringDiagramJSON(id);\n  //     jsonData.value = response.fileData;\n  //   } catch (error) {\n  //     //\n  //   }\n  // };\n\n  // 遍历Tree数据函数\n  const handleTreeMap = (data, flag = true) => {\n    for (let element of data) {\n      if (element?.children) {\n        treeMap.set(element.id, element?.children);\n        handleTreeMap(element?.children);\n      } else {\n        const children = treeMap.get(element.id);\n        if (children && flag) {\n          element.children = children;\n        } else if (!element.nodeID || !element.nodeId) {\n          element.nodeID = children[0]?.id;\n        }\n      }\n    }\n  };\n\n  onMounted(async () => {\n    const { params } = urlToPath();\n    const treeResp = await getWiringDiagramTree({});\n    const response = await getWiringDiagramStationList();\n    handleTreeMap(treeResp);\n    handleTreeMap(response, false);\n\n    treeData.value = [...response];\n    surfaceID.value = params.id;\n    token.value = getToken() as string;\n    setTimeout(() => {\n      loadFlag.value = true;\n    }, 300);\n  });\n</script>\n<style lang=\"less\">\n  @import '../style/themes.less';\n</style>\n<style lang=\"less\" scoped>\n  .iframe-container {\n    position: relative;\n    width: 100%;\n    height: 100vh;\n    overflow: hidden;\n    background: #090909;\n\n    .component-container {\n      position: absolute;\n      background: transparent;\n\n      .form {\n        width: 100%;\n        margin: 20px;\n\n        .station-title {\n          height: 30px;\n          float: left;\n          color: #fefefe;\n          line-height: 30px;\n        }\n      }\n\n      .station-selector-box {\n        display: flex;\n        align-items: center;\n\n        :deep(.ant-select) {\n          font-size: 16px;\n        }\n\n        :deep(.ant-select:not(.ant-select-customize-input) .ant-select-selector) {\n          border: none;\n        }\n\n        :deep(\n            .ant-select-focused:not(.ant-select-disabled).ant-select:not(\n                .ant-select-customize-input\n              )\n              .ant-select-selector\n          ) {\n          box-shadow: none;\n        }\n      }\n    }\n\n    .skeleton-container {\n      width: 100%;\n      height: 100vh;\n\n      &.status-on {\n        opacity: 1;\n      }\n\n      &.status-off {\n        display: none;\n        height: 0;\n        opacity: 0;\n      }\n    }\n\n    .frame-container {\n      width: 100%;\n      height: 100%;\n\n      &.frame-block {\n        display: block;\n      }\n\n      &.frame-none {\n        display: none;\n      }\n\n      .frame-main {\n        box-sizing: border-box;\n        width: 100%;\n        height: 100vh;\n        border: 0;\n\n        &.status-on {\n          opacity: 1;\n        }\n\n        &.status-off {\n          opacity: 0;\n        }\n      }\n    }\n  }\n</style>\n"],"names":["loadFlag","ref","container","iframe","token","surfaceID","fieldNames","treeNodeID","stationID","value","treeData","treeMap","frameStatus","computed","skeletonStatus","frameClass","frameURL","id","nodeId","sid","Config","handleStationChange","node","__async","error","handleTreeMap","data","flag","element","children","_a","onMounted","params","urlToPath","treeResp","getWiringDiagramTree","response","getWiringDiagramStationList","getToken"],"mappings":"ihBAmCQ,MAAAA,EAAWC,EAAI,EAAK,EACpBC,EAAYD,IACZE,EAASF,IACTG,EAAQH,EAAI,EAAE,EACdI,EAAYJ,EAAI,EAAE,EAClBK,EAAaL,EAAI,CAAE,SAAU,WAAY,MAAO,OAAQ,MAAO,IAAA,CAAM,EACrEM,EAAaN,EAAI,EAAE,EACnBO,EAAYP,EAAI,EAAE,EAClBQ,EAAQR,IACRS,EAAWT,IACXU,MAAc,IAGdC,EAAcC,EAAS,IAAOb,EAAS,MAAQ,YAAc,YAAa,EAC1Ec,EAAiBD,EAAS,IAAOb,EAAS,MAAQ,aAAe,WAAY,EAC7Ee,EAAaF,EAAS,IAC1BR,EAAU,OAASE,EAAW,MAAQ,cAAgB,YAAA,EAElDS,EAAWH,EAAS,IAAM,CAC9B,MAAMI,EAAKZ,EAAU,MAAQ,mBAAmBA,EAAU,KAAK,EAAI,GAC7Da,EAASX,EAAW,MAAQ,mBAAmBA,EAAW,KAAK,EAAI,GACnEY,EAAMX,EAAU,MAAQ,mBAAmBA,EAAU,KAAK,EAAI,GAE7D,MADK,GAAGY,EAAO,iBAAiB,OAAOH,CAAE,WAAWC,CAAM,cAAcC,CAAG,UAAUf,EAAM,KAAK,EAChG,CACR,EAGKiB,EAAsB,CAAOZ,EAAOa,IAASC,EAAA,sBAC7C,GAAA,CACFhB,EAAW,MAAQe,EAAK,OAASA,EAAK,OAASA,EAAK,OACpDd,EAAU,MAAQc,EAAK,eAIhBE,EAAO,CAEhB,CAAA,GAcIC,EAAgB,CAACC,EAAMC,EAAO,KAAS,OAC3C,QAASC,KAAWF,EAClB,GAAIE,GAAA,MAAAA,EAAS,SACXjB,EAAQ,IAAIiB,EAAQ,GAAIA,GAAA,YAAAA,EAAS,QAAQ,EACzCH,EAAcG,GAAA,YAAAA,EAAS,QAAQ,MAC1B,CACL,MAAMC,EAAWlB,EAAQ,IAAIiB,EAAQ,EAAE,EACnCC,GAAYF,EACdC,EAAQ,SAAWC,GACV,CAACD,EAAQ,QAAU,CAACA,EAAQ,UAC7BA,EAAA,QAASE,EAAAD,EAAS,CAAC,IAAV,YAAAC,EAAa,GAElC,CACF,EAGF,OAAAC,EAAU,IAAYR,EAAA,sBACd,KAAA,CAAE,OAAAS,GAAWC,IACbC,EAAW,MAAMC,EAAqB,CAAA,CAAE,EACxCC,EAAW,MAAMC,IACvBZ,EAAcS,CAAQ,EACtBT,EAAcW,EAAU,EAAK,EAEpB1B,EAAA,MAAQ,CAAC,GAAG0B,CAAQ,EAC7B/B,EAAU,MAAQ2B,EAAO,GACzB5B,EAAM,MAAQkC,IACd,WAAW,IAAM,CACftC,EAAS,MAAQ,IAChB,GAAG,CAAA,EACP"}