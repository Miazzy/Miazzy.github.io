{"version":3,"file":"MonitorVideoItem-196e081b.js","sources":["../../src/components/Framework/OperationScreen/MonitorVideoItem.vue"],"sourcesContent":["<template>\n  <div\n    class=\"monitor-video-item\"\n    :style=\"`width: ${typeof props.width == 'number' ? props.width + 'px' : props.width}; height: ${\n      typeof props.height == 'number' ? props.height + 'px' : props.height\n    }`\"\n  >\n    <div class=\"video-box\">\n      <div class=\"mcs8-video\">\n        <video\n          class=\"video-layout\"\n          ref=\"mcs8Video\"\n          :src=\"videoSrc\"\n          autoplay\n          playsinline\n          controls\n        ></video>\n      </div>\n    </div>\n    <div class=\"title-box\">\n      <span>{{ props.title }}</span>\n      <Icon icon=\"fluent-mdl2:scale-volume\" style=\"font-size: 0.14rem\" />\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\" setup>\n  import { onMounted, onUnmounted, ref } from 'vue';\n  import Icon from '@/components/Icon/Icon.vue';\n  import { useMessage } from '@/hooks/web/useMessage';\n\n  const props = defineProps({\n    width: { type: [Number, String], default: 340 },\n    height: { type: [Number, String], default: 208 },\n    title: { type: String, default: '' },\n    videoType: { type: String, default: '' },\n    videoSrc: { type: String, default: '' },\n    devId: { type: String, default: '', required: true },\n  });\n\n  const message = useMessage();\n  const mcs8Video = ref();\n  const client = ref();\n\n  // 初始化\n  const init = async () => {\n    // 实时视频才初始化\n    if (props.videoType !== 'real') {\n      return;\n    }\n    if (!client.value) {\n      await connectServer();\n    }\n  };\n\n  // 加载实时视频\n  const loadRealTimeVideo = async () => {\n    await client.value.openVideo(props.devId, mcs8Video.value);\n  };\n\n  // 连接服务器\n  const connectServer = async () => {\n    client.value = new mcs8Client(); //第一步：创建SDK实例\n\n    //第二步：注册SDK回调\n    client.value.on('OnManage', (request) => {\n      switch (request.method) {\n        case 'responseConnect': //连接服务器返回\n          {\n            if (request.errCode == 200) {\n              // document.getElementById('txtlog').value = '登录成功';\n              console.log('登录成功');\n            }\n            if (request.errCode == 401 || request.errCode == 502) {\n              message.error('连接断开');\n            }\n            if (request.errCode == 500) {\n              message.error('连接服务器失败');\n            }\n          }\n          break;\n        case 'ConnecteInfo': //返回服务器信息\n          {\n            // if (request.data != null) {\n            //     var defaultGrpId = request.data.defaultGroup;\n            //     const connParam = { groupId: defaultGrpId, talkGroupType: 3, temGroupType: 0, isCreator: 0 }\n            //     var result = client.add2MediaGroup(connParam);\n            //     newGroupId = defaultGrpId;//记录当前组ID\n            //     document.getElementById('txtGroupId').value = defaultGrpId;\n            // }\n          }\n          break;\n        case 'responseConnectMedia': //媒体连接\n          {\n            if (request.errCode == 200) {\n              // document.getElementById('txtlog').value='媒体登录成功';\n              console.log('媒体登录成功');\n\n              setTimeout(async () => {\n                await loadRealTimeVideo();\n              }, 500);\n            }\n            if (request.errCode == 401) {\n              // document.getElementById('txtlog').value='连接媒体断开';\n            }\n            if (request.errCode == 500) {\n              // document.getElementById('txtlog').value='连接媒体服务器失败';\n            }\n            if (request.errCode == 502) {\n              //document.getElementById('txtlog').value='连接媒体断开';\n            }\n          }\n          break;\n        case 'joinRoom': //加入组成功,返回组成员ID列表\n          {\n            // if (request.data.groupId == newGroupId)//判断是否为当前创建的组\n            // {\n            //     if (request.data != null && request.data.peers != null && request.data.peers.length > 0) {\n            //         for (var peer of request.data.peers)//在线设备列表\n            //         {\n            //             var videoObj = createDomObject(peer.id, 3);\n            //             client.addShowObject({ groupId: newGroupId, devId: peer.id, kind: 'audio', showObj: videoObj });//音频\n            //         }\n            //     }\n            // }\n          }\n          break;\n        case 'newPeer': //新成员加入时返回成员信息\n          {\n            // if (request.data.groupId == newGroupId)//判断是否为当前创建的组\n            // {\n            //     var videoObj = createDomObject(request.data.id, 3);\n            //     client.addShowObject({ groupId: newGroupId, devId: request.data.id, kind: 'audio', showObj: videoObj });//音频\n            // }\n          }\n          break;\n        case 'peerClosed': //当组成员时退出组时返回\n          {\n            // var ulObj = document.getElementById(\"imglist\");\n            // var liList = ulObj.getElementsByTagName(\"li\");\n            // if (liList != null && liList.length > 0) {\n            //     for (i = 0; i < liList.length; i++) {\n            //         if (liList[i].id == request.data.devId) {\n            //             liList[i].remove();\n            //             break;\n            //         }\n            //     }\n            // }\n          }\n          break;\n        case 'responseConnectGateway':\n          if (request.errCode === 502) {\n            message.error('连接失败，请核查输入信息');\n            if (client.value != null) {\n              client.value.close();\n              client.value = null;\n            }\n          }\n          break;\n        default:\n          // message.error(JSON.stringify(request))\n          break;\n      }\n      // document.getElementById('txtlog').append(JSON.stringify(request));\n    });\n    const connectModel = {\n      host: 'yyzx.zfy.ygwl.net',\n      port: '7709',\n      uid: 'pc1',\n      pwd: '000000',\n      // localVideo: document.getElementById('local_video'),\n      // localAudio: document.getElementById('local_audio'),\n      ssl: true,\n    };\n\n    // 连接服务器\n    await client.value.connect(connectModel);\n  };\n\n  const closeMcs8Video = async () => {\n    await client.value.closeVideo(props.devId);\n    await client.value.close();\n  };\n\n  onMounted(() => {\n    init();\n  });\n\n  onUnmounted(() => {\n    if (client.value) {\n      closeMcs8Video();\n    }\n  });\n\n  // 主动暴露组件方法\n  defineExpose({\n    openVideo: () => {\n      if (client.value) {\n        loadRealTimeVideo();\n      }\n    },\n    closeVideo: () => {\n      if (client.value) {\n        closeMcs8Video();\n      }\n    },\n  });\n</script>\n\n<style lang=\"less\" scoped>\n  .monitor-video-item {\n    position: relative;\n    background-color: rgb(8 95 148 / 30%);\n\n    .video-box {\n      width: 100%;\n      height: 100%;\n\n      .mcs8-video {\n        position: relative;\n\n        .close-btn {\n          position: absolute;\n          z-index: 1;\n          top: 10px;\n          right: 10px;\n          color: #fff;\n          font-size: 20px;\n          cursor: pointer;\n        }\n\n        .video-layout {\n          display: block;\n          width: 100%;\n        }\n      }\n    }\n\n    .title-box {\n      display: flex;\n      align-items: center;\n      justify-content: space-between;\n      width: 100%;\n      height: 0.32rem;\n      padding: 0 0.14rem;\n      background-color: rgb(0 0 0 / 50%);\n      color: #fff;\n      font-size: 0.14rem;\n      line-height: 0.32rem;\n    }\n  }\n</style>\n"],"names":["message","useMessage","mcs8Video","ref","client","init","__async","props","connectServer","loadRealTimeVideo","request","connectModel","closeMcs8Video","onMounted","onUnmounted","__expose"],"mappings":"utBAwCQA,EAAUC,IACVC,EAAYC,IACZC,EAASD,IAGTE,EAAO,IAAYC,EAAA,sBAEnBC,EAAM,YAAc,SAGnBH,EAAO,QACV,MAAMI,EAAc,GACtB,GAIIC,EAAoB,IAAYH,EAAA,sBACpC,MAAMF,EAAO,MAAM,UAAUG,EAAM,MAAOL,EAAU,KAAK,CAAA,GAIrDM,EAAgB,IAAYF,EAAA,sBACzBF,EAAA,MAAQ,IAAI,WAGnBA,EAAO,MAAM,GAAG,WAAaM,GAAY,CACvC,OAAQA,EAAQ,OAAQ,CACtB,IAAK,kBAEGA,EAAQ,SAAW,KAErB,QAAQ,IAAI,MAAM,GAEhBA,EAAQ,SAAW,KAAOA,EAAQ,SAAW,MAC/CV,EAAQ,MAAM,MAAM,EAElBU,EAAQ,SAAW,KACrBV,EAAQ,MAAM,SAAS,EAG3B,MACF,IAAK,eAUH,MACF,IAAK,uBAEGU,EAAQ,SAAW,MAErB,QAAQ,IAAI,QAAQ,EAEpB,WAAW,IAAYJ,EAAA,sBACrB,MAAMG,EAAkB,IACvB,GAAG,GAEJC,EAAQ,SAAW,IAGnBA,EAAQ,SAAW,IAGnBA,EAAQ,SAAW,IAIzB,MACF,IAAK,WAaH,MACF,IAAK,UAQH,MACF,IAAK,aAaH,MACF,IAAK,yBACCA,EAAQ,UAAY,MACtBV,EAAQ,MAAM,cAAc,EACxBI,EAAO,OAAS,OAClBA,EAAO,MAAM,QACbA,EAAO,MAAQ,OAGnB,KAIJ,CAAA,CAED,EACD,MAAMO,EAAe,CACnB,KAAM,oBACN,KAAM,OACN,IAAK,MACL,IAAK,SAGL,IAAK,EAAA,EAID,MAAAP,EAAO,MAAM,QAAQO,CAAY,CAAA,GAGnCC,EAAiB,IAAYN,EAAA,sBACjC,MAAMF,EAAO,MAAM,WAAWG,EAAM,KAAK,EACnC,MAAAH,EAAO,MAAM,OAAM,GAG3B,OAAAS,EAAU,IAAM,CACTR,GAAA,CACN,EAEDS,EAAY,IAAM,CACZV,EAAO,OACMQ,GACjB,CACD,EAGYG,EAAA,CACX,UAAW,IAAM,CACXX,EAAO,OACSK,GAEtB,EACA,WAAY,IAAM,CACZL,EAAO,OACMQ,GAEnB,CAAA,CACD"}