{"version":3,"file":"index-d51c339d.js","sources":["../../src/views/bpm/manage/processInstance/create/index.vue"],"sourcesContent":["<template>\n  <!-- 第一步，通过流程定义的列表，选择对应的流程 -->\n  <ContentWrap v-if=\"!selectProcessInstance\">\n    <el-table v-loading=\"loading\" :data=\"list\">\n      <el-table-column label=\"流程名称\" align=\"center\" prop=\"name\" />\n      <el-table-column label=\"流程分类\" align=\"center\" prop=\"category\">\n        <template #default=\"scope\">\n          <dict-tag :type=\"DICT_TYPE.BPM_MODEL_CATEGORY\" :value=\"scope.row.category\" />\n        </template>\n      </el-table-column>\n      <el-table-column label=\"流程版本\" align=\"center\" prop=\"version\">\n        <template #default=\"scope\">\n          <el-tag>v{{ scope.row.version }}</el-tag>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"流程描述\" align=\"center\" prop=\"description\" />\n      <el-table-column label=\"操作\" align=\"center\">\n        <template #default=\"scope\">\n          <el-button link type=\"primary\" @click=\"handleSelect(scope.row)\">\n            <Icon icon=\"ep:plus\" /> 选择\n          </el-button>\n        </template>\n      </el-table-column>\n    </el-table>\n  </ContentWrap>\n\n  <!-- 第二步，填写表单，进行流程的提交 -->\n  <ContentWrap v-else>\n    <el-card class=\"box-card\">\n      <div class=\"clearfix\">\n        <span class=\"el-icon-document\">申请信息【{{ selectProcessInstance.name }}】</span>\n        <el-button style=\"float: right\" type=\"primary\" @click=\"selectProcessInstance = undefined\">\n          <Icon icon=\"ep:delete\" /> 选择其它流程\n        </el-button>\n      </div>\n      <el-col :span=\"16\" :offset=\"6\" style=\"margin-top: 20px\">\n        <form-create\n          :rule=\"detailForm.rule\"\n          v-model:api=\"fApi\"\n          :option=\"detailForm.option\"\n          @submit=\"submitForm\"\n        />\n      </el-col>\n    </el-card>\n    <!-- 流程图预览 -->\n    <ProcessInstanceBpmnViewer :bpmn-xml=\"bpmnXML as any\" />\n  </ContentWrap>\n</template>\n<script lang=\"ts\" setup>\n  import { DICT_TYPE } from '@/utils/dict';\n  import * as DefinitionApi from '@/api/bpm/definition';\n  import * as ProcessInstanceApi from '@/api/bpm/processInstance';\n  import { setConfAndFields2 } from '@/utils/formCreate';\n  import ProcessInstanceBpmnViewer from '../detail/ProcessInstanceBpmnViewer.vue';\n  import { ref, reactive, onMounted } from 'vue';\n  import { useRouter } from 'vue-router';\n  import { useMessage } from '/@/hooks/web/useMessage';\n  import type { ApiAttrs } from '#/config';\n  import { addTabPage } from '@/utils/route';\n\n  defineOptions({ name: 'BpmProcessInstanceCreate' });\n\n  const router = useRouter(); // 路由\n  const message = useMessage(); // 消息\n\n  // ========== 列表相关 ==========\n  const loading = ref(true); // 列表的加载中\n  const list = ref([]); // 列表的数据\n  const queryParams = reactive({\n    suspensionState: 1,\n  });\n\n  /** 查询列表 */\n  const getList = async () => {\n    loading.value = true;\n    try {\n      list.value = await DefinitionApi.getProcessDefinitionList(queryParams);\n    } finally {\n      loading.value = false;\n    }\n  };\n\n  // ========== 表单相关 ==========\n  const bpmnXML = ref(null); // BPMN 数据\n  const fApi = ref<ApiAttrs>();\n  const detailForm = ref({\n    // 流程表单详情\n    rule: [],\n    option: {},\n  });\n  const selectProcessInstance = ref(); // 选择的流程实例\n\n  /** 处理选择流程的按钮操作 **/\n  const handleSelect = async (row) => {\n    // 设置选择的流程\n    selectProcessInstance.value = row;\n\n    // 情况一：流程表单\n    if (row.formType == 10) {\n      // 设置表单\n      setConfAndFields2(detailForm, row.formConf, row.formFields);\n      // 加载流程图\n      bpmnXML.value = await DefinitionApi.getProcessDefinitionBpmnXML(row.id);\n      // 情况二：业务表单\n    } else if (row.formCustomCreatePath) {\n      await addTabPage(row.formCustomCreatePath);\n      // 这里暂时无需加载流程图，因为跳出到另外个 Tab；\n    }\n  };\n\n  /** 提交按钮 */\n  const submitForm = async (formData) => {\n    if (!fApi.value || !selectProcessInstance.value) {\n      return;\n    }\n    // 提交请求\n    fApi.value.btn.loading(true);\n    try {\n      await ProcessInstanceApi.createProcessInstance({\n        processDefinitionId: selectProcessInstance.value.id,\n        variables: formData,\n      });\n      // 提示\n      message.success('发起流程成功');\n      router.go(-1);\n    } finally {\n      fApi.value.btn.loading(false);\n    }\n  };\n\n  /** 初始化 */\n  onMounted(() => {\n    getList();\n  });\n</script>\n"],"names":["router","useRouter","message","useMessage","loading","ref","list","queryParams","reactive","getList","__async","DefinitionApi.getProcessDefinitionList","bpmnXML","fApi","detailForm","selectProcessInstance","handleSelect","row","setConfAndFields2","DefinitionApi.getProcessDefinitionBpmnXML","addTabPage","submitForm","formData","ProcessInstanceApi.createProcessInstance","onMounted"],"mappings":"q0BA8DE,MAAMA,EAASC,IACTC,EAAUC,IAGVC,EAAUC,EAAI,EAAI,EAClBC,EAAOD,EAAI,CAAA,CAAE,EACbE,EAAcC,EAAS,CAC3B,gBAAiB,CAAA,CAClB,EAGKC,EAAU,IAAYC,EAAA,sBAC1BN,EAAQ,MAAQ,GACZ,GAAA,CACFE,EAAK,MAAQ,MAAMK,EAAuCJ,CAAW,CAAA,QACrE,CACAH,EAAQ,MAAQ,EAClB,CAAA,GAIIQ,EAAUP,EAAI,IAAI,EAClBQ,EAAOR,IACPS,EAAaT,EAAI,CAErB,KAAM,CAAC,EACP,OAAQ,CAAC,CAAA,CACV,EACKU,EAAwBV,IAGxBW,EAAsBC,GAAQP,EAAA,sBAElCK,EAAsB,MAAQE,EAG1BA,EAAI,UAAY,IAElBC,EAAkBJ,EAAYG,EAAI,SAAUA,EAAI,UAAU,EAE1DL,EAAQ,MAAQ,MAAMO,EAA0CF,EAAI,EAAE,GAE7DA,EAAI,uBACP,MAAAG,EAAWH,EAAI,oBAAoB,EAE3C,GAIII,EAAoBC,GAAaZ,EAAA,sBACrC,GAAI,GAACG,EAAK,OAAS,CAACE,EAAsB,OAIrC,CAAAF,EAAA,MAAM,IAAI,QAAQ,EAAI,EACvB,GAAA,CACF,MAAMU,EAAyC,CAC7C,oBAAqBR,EAAsB,MAAM,GACjD,UAAWO,CAAA,CACZ,EAEDpB,EAAQ,QAAQ,QAAQ,EACxBF,EAAO,GAAG,EAAE,CAAA,QACZ,CACKa,EAAA,MAAM,IAAI,QAAQ,EAAK,CAC9B,EAAA,GAIF,OAAAW,EAAU,IAAM,CACNf,GAAA,CACT"}