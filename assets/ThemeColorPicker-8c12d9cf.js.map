{"version":3,"file":"ThemeColorPicker-8c12d9cf.js","sources":["../../src/layouts/default/setting/components/ThemeColorPicker.vue"],"sourcesContent":["<template>\n  <div :class=\"prefixCls\">\n    <template v-for=\"color in colorList || []\" :key=\"color\">\n      <span\n        @click=\"handleClick(color)\"\n        :class=\"[\n          `${prefixCls}__item`,\n          {\n            [`${prefixCls}__item--active`]: def === color,\n          },\n        ]\"\n        :style=\"{ background: color }\"\n      >\n        <CheckOutlined />\n      </span>\n    </template>\n  </div>\n</template>\n<script lang=\"ts\">\n  import { defineComponent, PropType } from 'vue';\n  import { CheckOutlined } from '@ant-design/icons-vue';\n\n  import { useDesign } from '/@/hooks/web/useDesign';\n\n  import { baseHandler } from '../handler';\n  import { HandlerEnum } from '../enum';\n\n  export default defineComponent({\n    name: 'ThemeColorPicker',\n    components: { CheckOutlined },\n    props: {\n      colorList: {\n        type: Array as PropType<string[]>,\n        default: () => [],\n      },\n      event: {\n        type: Number as PropType<HandlerEnum>,\n      },\n      def: {\n        type: String,\n      },\n    },\n    setup(props) {\n      const { prefixCls } = useDesign('setting-theme-picker');\n\n      function handleClick(color: string) {\n        props.event && baseHandler(props.event, color);\n      }\n      return {\n        prefixCls,\n        handleClick,\n      };\n    },\n  });\n</script>\n<style lang=\"less\">\n  @prefix-cls: ~'@{namespace}-setting-theme-picker';\n\n  .@{prefix-cls} {\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: space-around;\n    margin: 16px 0;\n\n    &__item {\n      width: 20px;\n      height: 20px;\n      border: 1px solid #ddd;\n      border-radius: 2px;\n      cursor: pointer;\n\n      svg {\n        display: none;\n      }\n\n      &--active {\n        border: 1px solid lighten(@primary-color, 10%);\n\n        svg {\n          display: inline-block;\n          margin: 0 0 3px 3px;\n          fill: @white !important;\n          font-size: 12px;\n        }\n      }\n    }\n  }\n</style>\n"],"names":["_sfc_main","defineComponent","CheckOutlined","props","prefixCls","useDesign","handleClick","color","baseHandler","_resolveComponent","_normalizeClass","_ctx","_createElementBlock","_Fragment","_renderList","_openBlock","$event","_normalizeStyle"],"mappings":"gPA2BE,MAAAA,EAAeC,EAAgB,CAC7B,KAAM,mBACN,WAAY,CAAE,cAAAC,CAAc,EAC5B,MAAO,CACL,UAAW,CACT,KAAM,MACN,QAAS,IAAM,CAAC,CAClB,EACA,MAAO,CACL,KAAM,MACR,EACA,IAAK,CACH,KAAM,MACR,CACF,EACA,MAAMC,EAAO,CACX,KAAM,CAAE,UAAAC,CAAA,EAAcC,EAAU,sBAAsB,EAEtD,SAASC,EAAYC,EAAe,CAClCJ,EAAM,OAASK,EAAYL,EAAM,MAAOI,CAAK,CAC/C,CACO,MAAA,CACL,UAAAH,EACA,YAAAE,CAAA,CAEJ,CACF,CAAC,sDApDDG,EAeM,eAAA,sBAdJ,MAAAC,EAAAC,EAAA,SAAA,CAAA,EAAA,IAAiD,EAAK,EAAAC,EAAAC,EAAA,KAAAC,EAAAH,EAAA,WAAA,CAAA,EAAAJ,IAEjDQ,EAAK,EAAEH,EAAY,OAAK,CACxB,IAAKL,EAAA,QAA0BS,GAAAL,EAAA,YAAAJ,CAAA,EAAA,MAAAG,EAAA,CAAsC,GAAAC,EAAA,SAAA,SAAA,2CAMrE,CAAA,CAAA,EAED,MAAiBM,EAAA,CAAA,WAAAV,CAAA,CAAA,CAAA,EAAA"}